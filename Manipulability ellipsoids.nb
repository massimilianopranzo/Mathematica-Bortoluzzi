(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    423647,       8602]
NotebookOptionsPosition[    407789,       8339]
NotebookOutlinePosition[    408305,       8358]
CellTagsIndexPosition[    408262,       8355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scara Robot Kinematic Analysis : manipulability ellipsoids", "Title",
 CellChangeTimes->{{3.875764319833079*^9, 
  3.8757643212837734`*^9}},ExpressionUUID->"406c5eca-332e-4b9c-9791-\
d4884e5073ec"],

Cell[CellGroupData[{

Cell["Rotation matrices", "Section",
 CellChangeTimes->{{3.8757976383641396`*^9, 
  3.8757976424762793`*^9}},ExpressionUUID->"8825c091-3122-4e76-bd7f-\
6b033c5fbc94"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.875764360660033*^9, 3.8757643606912975`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5b3788d3-6963-4bc6-bba9-7e0d64564e06"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
G7fvaE+lioDvU801DynetfNwQOC1o8b+y00UfJ6vJdj1qKv4f+vT77N5gCVv
6Cjz8ktLK9RvEjF+gvzjH++bOd5RNmzaLPfN/C3Gl1Nu5g73ZaXXR7GianCf
jBkzVv1hti5S3XxwNYN5DR7o1auXckls/wOHC5w4cWIF3YktjX5mzcCmDl7v
j7/LQozaddv8vn+rd/EtY7vDz8Kex39Lvza4a6xR6P6ePXuq/icegO3P6+xH
HBzeO35pjmX93bbOvPX92+d1qUvkx0OWn4AvGP8DfoOTJ0/WWntDHYN9+I69
e/WVpUtXSWRkrKSnZ8hDY8NRf+De3fvqJyB+0LVzLwkfF6W997KyNsmmjdsk
I2OlDB40XIYMGak8u7VrNmhdg7kL0iVx8hTp0be/9B8yVLbt2iN5ReY3lz+N
C54vXJ/yEKM+9cThvPCbQs3TFxvo8Zd1LAGvqN/Dq2FBXStiDD+0aisNGjSU
Dp27yLLVq+SWwbdPyjxcYK+OvdrcQxa7cg8wd+t8Znz3JHE4eBH0G4cP8ypx
gct/cOLkzRbrB7cxRoaNNVv/Io/+HkOBw/P5e3l/xKKJWaL7seWJtWZlZant
P2bMGB3467H7iQWACeDLEwPA/4+/gFw3/P5enPtxte0fWJsnWB6+xQZ1WeP8
+9vfge0EBgEb8D3xXQT2WAr8PN4DNy/M6G54BAuNzh9qdPySJctl65YdsnHD
FslcvU4WpC2WsWMipXnzH+Sf//WhfPB+E/n44y/l/fcby7//j/fkv/7zfWn4
0SfSsOGn8tkXTaVj524yKjxSMlatln0HD8n1W7ly+959ufvgody5d0/Xdju8
GgkPq2okPNDBtbADLPXwYZ4+Lygo1EE+oM3/K9LHxzroD/zIPD4qtrUSSqW0
pNTr+1PqcRr8fnzrv/f/HTgsVvOf62DzqS4xicA8lKfea3CTp3/Ln45PlPuP
WxObqPA/D/js6s+tOqa3r+1/XDuuUl5ekxvjYdWqc1Vmv2fVPmWVWpMq99Yd
5VY2aviJvN+wobTp8IssXLJYrt26KU/Ky6TEvL+06njcC+Q7wJ8BtzInX+T8
+QfHwmfQp08f5ZLaY/0Vfe3HHZbbgq3BnLOxO5sfFKoOmMMLTpy8XrH3sZ+D
b/+2eeEMq+/z8wvU/01dHnrJwxejjyx95MibxycJd49YP9xw9D58bfj+6Fjy
+ckNQNeie1nj0GMc36///evTq7It/BiB3wrvDL459hRxC/ANeCdw/eSRdS4t
bb70NXb9mTNnZe/efdKzZz9p17aT9Ok9UPr3Gyxhg4fJkMEjpF/fQdK5c3dp
06aDtGz5k/zYup20/P4nxQONDB5oZbb9/FN7s09PGT5qrMRPmiyps+bKtNnm
vM6YJakzZ8vctAUye/YcxVKcU74fjzYvAJ1B/QTyAGxeIr2lk5Ph+nu1FGZM
n62P1PdfsAC+fLrMn7fEjAyZO2expC9cLosXrTTYZrUszcg02G6L7Ni+R3bt
3C/7fjug+RHgPrh96BfLu7OPloPHsDw+y/ng2h8+fFiOHj2qXEHiR/AGGfY5
HA9qLjDsNjiGtgYDrxPrsfvY+gxgyqtXrsn1aze0PoLWkXroYaH8fDPyCnQe
w//Q+lJmG4+6Pa9Q933wIF99PcTtq3FUvscLqDlO1cj33qMjr6D6WLz//oO8
qs/yPod7Bwxm61PxHE7AFoMdmQ8NPvpQPvn6C2nXqaPMS18gl29ck+ISs29p
iepT8Cm2PTEEri/3jL+WQmCthdqci5KntsEdtXk63It/lXvoxwTgUPig8DbJ
g2WucI3wq4H/bY9z+30C8b0TJ05evrwI9z/wnrT3NT5/Yvfcz6zja9as0zxy
fOUzps+V+PhkY+unmjVqmkRFTdD1Bb2UkZFh9l2jHHDWdNZz1mvsWjCAXcP8
69CbsBb46yCgD1jLxo8fb+z75tK2bVvNa+B8gAP8OIp98cn26dPP6KYcc66O
yuhR4TIxPknX/L179ssfvx8y46Ds3/eH0Z3kv++X7dt3mde36zkdOnSUhIUN
l8zMtUb/7lIu+ybz2uYdO2XD1u2SuX6DLF25WpYsXymr166TTHN+ibEsWrRI
13Z0P34Xi8N4BJsxoqMnmOsTLWPHRMjo0RHmN3GtJujfPEZFJciI4VEybOh4
GTEsUp+Hj40z2ydJRHi8jB0dI+PDJ0psTIrEx001v2uq9hZOTkpWHQUm4RE7
1tYvIDeQv8GDNm8QnMhrnFO7D/vzfe13tfvYWgjsS84g7+c5g33wN5FfSK0G
mzeIL2qC+a1xsRP13E9LnW2wzXJZuHCJrFxpzteqdbJq5VqtC0WNqJUr1pjz
TR4r8zrLbF9jzucyWZBGHuYCmTcvXTKWrNB90xdmqP9nacZK3Sdt/iLNIV1s
nlOnCnzF/t5YqNzT+VXPF5j9MrQe1Wq91hs3Ui9hh/qQlpttCxYskv79B8tH
TZpIg8YN5f0mjeSHtj8bHDhN9oK7jh2VQ+b+A3PBve3Xr5/G2sizAFfhYwNv
McBa/M12MIT/df4GS3k466x57YTyD3/99Ve9V1+Gz4B7CAxDrhD5PvgiBg4c
pLmf3CNgVu6j7OxLBotcNffKEV0fuIcc99GJk5cnfv3u588/r+at9Sfa+r1w
91hHsO2w68k9xxZlzecxLGyIWZMj1eZkXWS93LVrn1lvTut6g84ES1juX6AP
4Cm/7J/knf3d59H6WsEwrKVgnW+++UaaNm2qumf5yhVy5txZKaQ2TEW5PMzP
k5mzZspAs1ZfvnxVawnExyfK+vUb1UYkjqx2UamXY1halVfoxWdKjB14R6ZP
mymJCZPU1sVn/xiex2MzzOvFxrYsLCqWfGOr5hlMUlBYqP5Z8Ann2uYBwkkD
fzGw/+zIyblcVbcwx6zBXo6f5vmdzzZ/ZyuWOXvmgpw6eU5OnzovZ05fkHNn
eS3HPF7QXsInT5wz58KM40afHDsjJ0+aceKUzhdsebgYYEf8B/gF0FkMuKHo
HOszIL+PPD8GfiMGNiS5gDzHlly3bp3mBIJ7qJVAjQS4Jrb+EnoFHYPNzN/k
21E3gPk6d+48mTtnvnlPmsZt0OGzZ6eZx6WyfNlqHcuWrVL9zvxdvjxTMQNj
8eJlyvtgbs+ZQw2BeVpnibqU1FiIi5tkcBE1FxIMZonT2gsToidK+Lhog2Wo
hREjkWaMM/fI8OGjtfYU9aaoSQUWg3cSHg7WiTS4J1ZGjBhjcM04/TtsyDBp
3rq1vNe4kfz3Bv+S9z9pIq3bt5OI+DhJSp0iSUafxpt7EBz01VdfSYsWLfSe
5Bxwf4KpwIIWl9naU7ZGB3jK4sXo6BjzaF4z36FP737yY+ufZfGSDPWF/FW9
zPu57/FteDU7zpnvOcng6g4GS06Vffv2mzl2RvM3p0+bYb5blPnu8eb6b3sp
n+/EiRNPuJeC5QAGxnvRc5b3z5rN2oxtz/pC/RfsPuw71hH+xv5kTWadZn3H
XgHfo2c87n+e1ucPFv8NxTd/0+/5QNyE7ZOTk6O66Kuvv5J/vd9Avm3RTIaP
GSWZWevkQs4luXP/nsxPXyhDRwzXPHt83LNmzTb68ffa/M0gVH7OF34UdNqU
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
+gNjD9ETuKKa/xTcJ/5XrhXrG/X8qR+Bv6BMOeSPZH3WZvmhVRv5j/9oII0b
fyE//fSL9Os3QPkLxCwsd4F1duPGDboWU0sR/UadWjAq+BOduHHjJn1ObsPO
XbvU3+H1MKQXwQGNX4CZLFeFceSI1zvH9ss5YPajLj3v4zX878eOHdf7Afuc
mlj4T+B94SNj0NcGvMw26vheupRTVR/4nvpAqJnLPQF2I24Dl/0ivbXN+p++
Ypm079VV3vv0I/ngiybySbOv5OvWzaV1+7bSe0A/SZ6aIqvWZsrRk8fl9v27
yi+wGIPj8Z3h6eCfmzp1mvn+h7V/UZuf20vPHn1l3doN2q+Qz+dccv/i86mP
wuzEL1/0+InkGlx53ejVzdt3ysw582Ry6jRJmTpVOTLUOSI2hi+T0bNnT/nx
xx+lc+fOOrp27aprXOfOXaVjhy7ya6du0r1bb2nZ8mft9/3pJ1+b13tJr159
dP9OnTqZefuTfP/99zpatWqlx2vXrp0eiz5iX375pfyzwXvyz0bvyz8/+Uje
/7yJNPi0kfyjYQP59w/ek//64F/y7//4hzRp0kTat2+v+Jl7Gi4197wTJy8q
fh9qqOH5/kvUr1hYWKy10C9duqzr3e7de2VN5jpjWy42mHee5ueOGRMuI0eO
kbi4eOUF4BdA/+NXZm3MycnRtSaw308weyyUT/ddwQT+WKP/twfGZ6xfEkzF
ubX+GcvRhH/BNWBtwz/Tt29ffaReMz304GpgD4ET6KUDBqDHg8VplptpOdGq
/6u50RYvvmQ/ZVXwlLhBxpJlRqePVX8sn0m8gJzw1asyDaaZolzvb75pJg0a
/Mtgmi5m7sVIQkK8PiYnJylOoI/NL+06GJutj9lGf+SZkpIy1fz2RO054z2f
ZHBDtPbYGTlytMEZAw2O7Se9e/WXHmY9b9++k7Ru3UZatPhBvvuupXz91XfS
tGlz+fZbs66bbT/92E736dmzt9EHPbX3Y7++A42e7aPHGjBgsPl+vcya31P6
9x8kI4aPlkEDhxmbsLfBY13NZ4XJqFHRMmxohAwcMFqGDhkj0VFxWuOW/s3U
uO/bd4AMGjxUxowPl19+7SiNPvtYazz80rmTxCRMlI1bNsvps2fUX6K+anwg
tfhqldUYkTkCh4e+f5xn+nnTD4mcNnLrOM+FZju2LL2s8DHUx3vQ4gLOEeeK
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
nBbOws9Ybzlmy2mrixfAgbnniTNwTlw/YiJomujrwZrIxvWzsQN0UhHNXzuE
DT4P7JDlhDb/aOte7Hw7fB1sNRyCe4T7huekJp7rX0N5nrjv2Ihzch9bP9f6
P+cD2mlyofjKvJ/l5TbfxlqHf/Y06hGCeYFf88e58wxwLeA32H7WVDbWfuwA
azVrNnYBzoW94Pjx61hb8Ps5R66tP/Zv13CHhgl7X1g+aOc12JgQ9oR7mTUR
vgtfYK1k4z6AG2JrsN3w8djYeOncqZt8/10H6dixq7HvvaVvnwGGI8cZ/y1R
Ro4YKxPGTzavnWRs/hjjYw0291e84ZVj9X4jzofWDJ4BR4FTwk1tLUkocT0b
N+eexAayX/JZG83xZ1+7LnmGE1y/dUf2HToiqWkLZNCQoZKxeIlcMRyBe7cp
8QLA58sahQ2Da1HHQ84OW8nzDR9jreT55zWsR8TYQ8k3+HOiLVq0kDfeeENm
TJ+udrc6e1sKVykplZt378uw0WOlY9fucurMOSlAY8paUV3OKcRztbpHfzyp
Ot/DHlNVx4mNJx7AWsf1869pwbXUTtf8bFGTL6l12atWSuvWraXzb52Vx7Ge
YLvRruEz0OsGbos9Zl3Dz2VNw7axHtamTfVr64Lvh+CaKXgDtpOaOtZT8rn2
b1h/6CtTm+7QO8/Ha8ZC9aWtv8B9TSyVOvWcnGuaR8Wmw11sv398QHgMvIoY
HHFlaimpmyBWYLV/cAjsv807++cL+vXhtT0j7vl59qjqvg7O81tebXtHs+bD
AbkPbI0f97bXU+KAua+2yOZNO8y2XbZt3Sl7du+X3bv36Tzxc2fPy6ULl/Q+
umC+UlPIZuPctqbUalb9Oq+68AL791bvyv2KHjEf3m54welzF2TmnHnym/FV
+w6IlbT5C2XlylXKR55EfvhZxr/8MSHiePhM+MB8XvAwcn/YddYB1iqbA70f
Qh9Xm4fHF+fvXv7nP+Xrll/LkqVLJC8/TzkAW1n560W/LygukbMXL0uXXn3k
i2/byrZde5QrlJSV1cgLgq9h8HUNXofr65NYXsD6nJIy09PjlriZGs8a/pi/
/zMOXrv8tufe/XuSMmumtPjo39L6u7aydPky9e1ZE/CBiXMTU8S/IdaNXSQu
xD1dW5/XmupTqs2fmv2xzhGXJc8OB8H/sfNGFy9eZrh6stbhVAmeIZ0l4vVM
8NeNVRd3t5pIzhl/iXV6UcZSY+NnGh9tonn2xxlfb5h5/vvpBhcg9gc3QjNB
fAzOwFrPMcIn2F9N3Ds4J1HVcenplJVV+1oXU3g2CL6X/J9dVZ9xTfkf+3wW
Bubl2c1yC/oQenOMSiv9v6p8VnV5rlB4QVVcnffz6odKpMAc36msM5I0bLj8
55PP5N8ffSrftm6jtQvYx3B5QVXPaE05yicN/7HAkcgBYu/QcuInkUNfuzYz
0Pd7i1knJsj0GSnK/UoDswyrO2z7mcMh0uanyatvvC5/ffEF6fBbJ9l/5JDk
w+n4HMoq1zPnG862c+8e+U/Lr6TZu+/InIULA3OZPT+oKl7gX/+D78Oq6qLq
c71hMOavpMQcx6XLVyUmbrBMnjpDe24Xlzpe8Cxhn23rK9jYJjYKe8e9jR33
emcFck7m73JuXJehY0bKGx++J1+1/UbS0hfo/cp+8N25z60/4te3Pann1T4D
HAMxWJ5F7C/xOuJ0q1atkZEjxqj9rvo5EJ0t4m0l5WuozQFYzmPzwsQm4P/w
HuL9/fpHGT7yh+Z6medM77cpU1Jk3NiJEh0dK8uXr1CewvW0uvPg6xJJe219
Oev72a+23tA9cw5PEnZd4b4jPkHODJtInmGBsUvYSdaJcO/Fynyk+DFb9izB
2ocmqkOHDsoP0IbY3t/Xr9+Q8+cuGv84VRYuXGTWhVvakxC/pMrrUVbRX6Lg
UYHsP3RAWrZrLX/+x9+k+btvSFxyohw7myV5RWYdL/NiAWWBv2HOfObG9dLi
i4+k2XtvyqgJ47w5CiWlVeYM+DvWbtZRO7eUWCafIWugP3YbPK8k1M/S4wTm
OMXLZ1y4lCPRccNk6ow5kvfI2JoSN0+jPqiLtr22/WAr+LyxW+g5iGtxP1Pr
ht9PTaDVt5QF/Oiss2elR9/ehn++qbNWJk+bKjfM/R5cZxpKT8JIXhOrkSWX
Qbx+woRJsm/vfn32qMm5cOFxXsA54XfRz4PaXep4T508pTpbtLE8F+QGyfOS
F0GfpbNpBw3SuARxkaVLif9vk5MnT6mW92p2jty6dVv27z8kM2fO1tgAawKx
U47N1gfavm9VXaea4ng15WDsxmcAj2ENxj8hn8n7uRk2Dk8alpf6uTXPJbzd
f8+Ha7v9mmb8F2yuv9fGs4B9/oj9oXdu06aN5gttrpXju3o1R6Yav+GXX36T
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
y7SUufIw7+FzwQv82lz//CudeW7WaO5PPiP/XMuaYONm2H9sC7luG/vnvrSz
0kPVHda2BV5Y7pOfO3deomKj5eOvPtec1qdtW0mnXj1k5fpMeZCfW1FD66uF
jTT8OTyuG3ETcnjEtfCPyQHYntyefa/gP/jU6A7694/SvL6XE6i6/1/o64Wy
eLOhl/FqtYg77Nq5V7p372XWic4ax6F+gXpF1owBA6J13g3xjDWZ67QX2Wvv
vS//eO01+d/X/mWe42bS/O03NBbDfVLbMXG+zLyl9umbb9qa9+ijve527Ngl
I0eNlTfeeV9+7vSbbN25S3vPZRl+dPXade2V+jzalMYO+zzauNbz+BlaXrBt
20759dffjD8wSe7c5rn36jL9vIkYK7FVnkPq/9EPobePVF6Nfdi5buTiWZ/x
VewcA96ftZ7cpDef3OvZhz6ZeUWchz3mUN4L+3H23FnZuGmj7Nq9S5YtXyax
cbH63nZGw/0H92XV2jXy7Xdt5eXXmsvfX3lR3nz/XenV5w/JOpP1mCaNYz13
7rwMjB8sn376laTMmK29L06dypKsrLOG2+TqWkSPFeqwOnfurLmGus4wwkKo
/1TqrZVnz1yW/v2GSMrMNK9Osbjp389aQ2rOlXwT3IqYF7EZ69tyfxL/r63f
j4Wtm2ez8e5grd+TgF2HTpw8IV17dJN/f/GpfNampXzS5mv5oUtHWbh8idwx
9yHv/jR4ge3PTpzO9gWAj2Mf/TO8gjWZ/A15d/qKkPuITP0kfwvHLSznBbkP
DS/YtV8SBydLauocjV+Qs8NXIQ+KnnFAVIzx8TcYDn5Ddu8/KDGJQ+T9zz6X
F9/ycoaffvO1LFm5Qh4R+7FvU81hsq5cvXpNtm3dId279Zbk5JFy+VK2WRse
yjrDPz7/+lvp1L2nzF+8VGbOTZPYhERZsnylPDDrVVN/BpsiuL+5l/ALnlfN
CHyfONmaNevlxx9/Nc/ZPHn4INfH86USL2B9IEeOD4G/i6YH2xwJWF/Fzhck
FuGf9eqfA+jXFtvcYl10Efze6sr4W3z4w8Z+JA0ZojXaFwwfYV95j/Ll2KkT
kjp/nnT4raN81bqVjBo/VjI3bpA7Zp0M5gXkFshDZmQskqFJI7R/ZlLScP3/
ksXLlHNx7Nx3xDrRMqM99PuiIV6twHt7/TXOZF2S6AFmnZy9MHAdmr7ukM8H
/x67RcyfPC/9MbELcFdyAOg4bB+eUO6JqmakhNqPpD6w2oIb12/I3LQ0afNd
O/noy8/ly3bfytc/tJW2HX+WsdMmyaVr2V5fDf0jeaK8gOccHQXXkFw9nMvq
AqvryWH7HJH7IweDDiEy+ujKvIA4Zm5uvvEJDmq88Pix45VmFfAcHT1yVBIG
DZGuXX9XP//Wnbty6vwFGW84y5fftZc3/9NC+sVHy+lz57RPTG3XFL3SvXv3
ZfmyVdKly+/mHDO07pJtwcJF0rrd97Jsdaacv5wtK9euk+69+sjUGSlyL4Re
a88K/hqT2uYM+uMpda2nbmzgvLA56IqooYVvNtVzrQnwAnxYZgARI6Pmj+eu
2Bf/s/eLtaNwKOKJaH3JkWvNXoTyMfZ9gnVaVdVi+HXSfv8u1GOwMWjWEuw5
54G/aXsoqt9YVCh5BY/k+u1bMnbSBImKj5Fzly9KXmGB1wdZKviMjWXTq5Ka
7RzjY6wx68XECVNkZsoc7adJrIP6ROoUeQ/yCFzL6mY0VAfLCYgXFBUWy6GD
J82aNUBSZqSZc8k3x1ORRwjOGQfn3RsruOY8t/i1xJbob4H+n5gSWjI7574u
Nr2qmHLdY9+hw+adiGn8+PPP0uKj/8iHn38sH7X6Qj765kv54OvPpHPvHrJj
727tc/akeQH3BHkT2ysFTuWPD1TVW9ve+zw/6JOo3yPO9yTiBdzveXmPZN++
QzJ71lzta+DXMLIpNzh6TMaPnyz9omLVd79ieNeZK5dlZvoCafPrTzJ6ygR9
plUHYN+mOl5gfp6Tc13GjJ6o8YI9e/brMZw9e0ESDedPSBoqF65clVx0WidO
SszAwTJ1+swGywvsWmDnZ/Hc2FxtdbygPnqdxgirDSPmSA0ZnLgpnmdt4Jzv
3b2v/YFat/5O+TW8gI18OOsum51HyUbOlWf/119/VZ/X9l6LRA1DVby0Pltd
38tyBPx4tILEDKgfeATfKCmWu+ZeGT9lkgwYGCuXr+doz4DqbIeXcy3T2ghy
oeQ50D+QRyD/GhMTqzOV6eVi59jWuU6x/Ljp01Qo+/Yelc6d+suc1AzzvOeb
31XUI/jPsSpu1VhhbSr3pp37Y7nhs6qnqQ+I7zBn5a133pE3331H3v/03/Ku
2d7+zGyffChtO/woKzPXhBTzDhdcM553egoQFyR3EFzrb2s3uW+Js1EXRMwV
+0LchhyOf/5i5HlBgbHNB3S++fHjJx6rbbD3xcWLV2Ru2gLp+Uc/mZwyUw6b
5zlj1UrpEdVXVm5cJ/fzckPiBTzLly9fMXZihHTq1M2seVsNvz8jc+YukPiE
IbJz3z55+KhAcs12yBxPnwFxMmnqjAbLC2ycAP6Hphb7Z+dzVbUe2HUteP5A
Y3i26gobL4MX4B9qH88aXvskfYZnCc4H/5b649bffmd8hPnKh9MXLpZhw0Zq
rhAbBv9n/cV/wI9gJjRrAHaNNY37yubIG9s1Cs4DoDkjFkovM3KERWYtumOe
8ZHjx0q/uAFV8oLHdyq+ngleD1hiCMQL4FL4uOTDrSauPv0LiBcQF4AXHD96
VqKjkmXZ0rXmcyh4jBdY3mO5XXCfxcYI/3nVZdZNQwO8IHNtpvzS4Rfp9ntP
6dC1s3zepqW0/uUH6dSru/Ts/4csWblccs3rIsELbG6wqo1rZ2d2U4sHN4bX
8tyzBvD95k2bDW9I01kcrA0DByZIfPxAzd906dJVZ5ewj8fzL/bAS+u4VegO
qR1++DBftm3dJRPGT5Fjx45X2eeJ3Az9THKu3ZCMJUulT3SM9I2Pl259+8ig
YUPlaNYpyS8q9Pqa1nJN2Td5hHWZ66V//1jVNYwdO1HGjJkg6zZsklvmGX5U
XKKzbI4cPyn9ouNk8jSPFzREu2FjsvAC9JrM8UXjZHOZwa+1ayNckHW+sebd
g/1NdLzwQvTb3mZ7fj+Q9PQMvae5762fV+nvAvyYZyP76lW9P/y9zvwctbFd
J+DFTXLNc75QWrT4SFp+3Ua6df1dOnfuKh07/iZRUVGaM8SPppcPPm6rVq3k
iy++0DpgevnBHcjHwBvg89iruj/7ZRHeQjt3+1Xv/VKvZvOyOdfZs1Nl+IgR
ctg8A3l8/sZvGjFmjNYrXLl+TblCyLyAmTHF3lpFjQPPn53jVlNer8Zjt/UI
JezPixf83jNeVq5YXy0v4LlmXSdXgj6rPnGKhgY/p/PHOxvTOXHs+OU8X1ln
zsjGLZslcegQmZoyXfYdPCAHjhyS85cuVsxOrScv4JL4Y1nU79DzA30R6zx6
WOLJ6H7hBJ06ddKZs6NGjZMBA2JlWPJInV00efJUY5MnaY+CFStWSWbmOmNX
dmvtAv2RJ4yfqDbH/7lUHLhn4+u2lVgyo/sklrljx26ZNjVF8wjBMyE9f7hE
nzXW+GPHj0uyeZbf+/BD+cKsXQsWLZKbt+9Iofm91n7WsmzY54e1n3l6mYYf
UO9w+lSW5Obla36HtYO6oKPHT8iAmFiZOm16+ZzXJ6lZrQ+sjgbuBq/r0aOH
9nKuKl5gj9/mHIgFwfvoSdmQzqla+D5b28sbW852z6yH6MfyiwrkYX6uPGC+
llmT75jP2euLk6i9t7XWtsjTvBYUFMpdc08xs2jJ8hUyJHm4DExMkvUbNxm+
muu9ZVlZJf+k3tfp6ZvEircO6A6puenevadZC7rINMN1N27w/FliirbvMnlx
6rhtjxfuKWoKqVEgt+DVdMCZ6vrcs9WHS9TEMWo5bx93tM80fQDyHhXIHfO5
7963X3r16SfDRzIThr5s92SMzmqJM/wwR4rL+U91b+BtZXYrlfIe+La2q6pc
Scifm/LWEq1HpM/Lzh0HpEun/rJ8Wab5HAof4wU82+TcqR9p2bKl9O7dW/2/
RvFsh4DGysuB31fnc0IfQf885q2X98mOANfhvqNX4O1bd7RG5ujREzo/dv36
jTJ37jyZOHGCaq1Y96lL7Nq1q/z8cwf5+OMv5fPPW2kvw9279mqvQ/qQ371z
X/Ps8FL4BWvtgvnp2m+IOgB7n1cct/X9C+uwBdYGH8/mPffs3qfzEU6dOv2Y
1gG+DeeFZy1btlxtWVxcvGp5Bg4aLOMMpzl48LDyC73/Q1g7/bF0L+7m9Wbw
P8O8L32SbIzV9ktqCLNm/LDrAbke1nG046z1VfWastcTO4B/SO6YHGtj4wWq
Hb17T+/1pCHDtffF/PR0OXbqpBw5eVxWb8jU+pQDRw7L2fMXVFtKH92LFy6r
vb9x/aaxfxdlm7GT02elyh9R0fJV63bS7qdfJMbwh03btms8WN+y7PH1PZxj
fya8oKyiLol741ig37jt0VZuOwN1AnaGApvtX175frK8oC7PPmtFpGMGtZ+3
nxfABy5fvSbnLl2Wu+Y+uG7WuJTUefL7HwOMb7BdruXcVN1Rv77RcvnSZY2L
lJY9m/kR5cevdVtFur5t2rhbOnfsJ6tWrq+WF+AfkDdr0aKFavf5vrHa0qYK
7kn4t+3vDx+PBDRfaPygrVt3aAx8SOIwGTJkmIwYMUbnFkycOEnrN7g/4Pn4
/tQa7tq12/j/k6Vjx64SGzNIUmakyqZNW5RXaN1SoJ6Zr/Q4SktbKBPN/phr
9jgvsOuD3agReXzz1oPiitcFfPryfoeqL9hveEGqnD6dVT63AY0Y9SnUAHP9
6BlGjhi9EOdEbGH37r0yZcp0ndVML2WdR1uHtdO/5vtnyPBzYoDwAupjqDHC
lvrjGA0Fdj0gp0k9FLyAGFFwPsaeI+dFrICeK3FxcVqLyrk1pHPyo5ItDnAC
YrX0zqduvFXLdvL++x/Jr51/k9ETxkvPPr3k068/lw8/+1h+7txBEocO1XzR
H737y5rV62TJkhVam9q9e29p1fY7+fiLr+Xb73+UPgNiZNHylbJ9z145ffac
3Ar09EbvjG20uie+2o3vuZ5sVu9u66L9fVjKZ7CUVZxP+Xk9JV5gY0X+/qTB
fMc/+8+vQa6sQWHjXimptBFD8J53/8/s9wEf33++1R7s41vF9bLf261iR1X5
4/7n+8GDh7L/8BGZavyPpJGjZdnqtXLUrCFbduyUuIHJhlNPlcOHTpr1dLL2
fuf+KikpDIkX1MYX68snrb4AXoD/tHXLXunWNVrzCNXxAu5LtBPEC+gLV9ee
CQ5PHjxX+LnYMnR85bmDMMHnj4/csWM3eevNFhIVFSeZmRvMen8q0Kf4nuYS
vDlFFTMbtafhrTuyb+9BrVmiL8cfffrrrKRp01Ikc+16OXH8pFkH72iNP/qk
SZOmGl/5ZiX7YnscVRXv13VFeyH6aiD9GtnA3FLNg5R48YJt23bJqFFjzZq9
VDVO2Cr6ipP3RBsEJ0Ajga/DGs3aC3e4c+eu9mbkGDmHrVu363xVf3+m2mYo
VRXj46tXi3S/fOaD7aPYEPNafMZwP/x/uIGdwWE1SPYa2FovYh/kIOE71P40
BH1BVTUywbVq+rXY2+hDccn4dPTqmZeWLlNnzJAhw4cpJ/jvF/4q//dv/y1/
+ttf5OXmr8p77/1bvviilXz33S/y8UdfyAsvvCL/9V//I3/+n3/Iv95+T9r/
/Kt07NZDekdFy+/9oqS/4Qjoa5iVyle0d8SMiL/xM2LsxOHIw/MzODjPOP1D
0XjAJdHt0XOdHDacNz19sSw3vINc3Yrlq2XZ0hX6PXks5puvM8/v+nUbNAbC
xs/1Z+b/mzZu1pllmWt5zUbzmXmaNtYUeDP9f/i//3t6f6KzhPMRDyJuSV6R
WAD3NH4kuTE7u9G/8TP4EL/n9XwP97G8yPIfchPEXx7cf6DPIzGW/EBswZsN
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
ETQYcF14/lmfqDmxNWfoM5lD+eWXX6rvgG+LjfVqmR6az3G1WU+jNK5tuWRd
ctf+NTI4bhr8O8vNrF/Fxnteu3ZTLl3MVg3gkcPHZc3qjZI6e4HG3eHSrG+s
9fi8PENDhybLnDnzVEe/xfDig4YHHz1y3KyBKdLuu++l3Q/fS1RMtGzYslGu
GxteAC8M1KbpfVJSprku+Aexh5279ki773+QP//179LC2Ivl5t6mfrioxP5N
5fiF3x+sqSdYZd1sIJdTXFKxlXhftS6iyP/3Xizdy8cFtqJinVlWoFuhxuaI
nfg3v8bB/r+m7/26CLvxs+o2cgfECSv4kLfdvHlLv7JWXL16Xb/yGvRI/P9a
jvm/+Yz5qtu1G5qfzM5m5uB1yTF/k519Xb+3P798mR7oObq/K1euGb6fLRcv
XDU86rKcPnXBbOfl7JlLctbwKma7wYGpt0U/hU2k7hb9DBs/I/dIXgX+M2t2
qiQOHSadu3aXz774Sj7+7Ev5/ucO0qVbT8MhYqRNmw7y1hufGB9nhtYrFRQ8
CvQC8HTJXH/6DPKVn8ELlixbKq3atpaPvvhM2nf4SWcypqbNlfWbNsoOw73P
njsnOYZL3r53V+4/eCD5j/JD7mXg5yCsYwcPHJW+fQaa9XOT3heeva+IS8A9
qEWgVpkYiX8ddWg44J4ivmvjBZHKI7Bf8oisl+SHWWPPnTtv1scZGuvjdx7f
rWO9bFnleK4392yp4f30DM2Uy5euqHahYl3xcoze2lHxM5t7DF5vrCaLr+TB
vHnw8/T6EPsLR39h42jEPYgZRkXFyIQJU+SY8cHIbXrrMedW77dokLAaST5z
tEZvvfWWxpOJ7RDr3hCYG0r8xc4OvW7WZ/SpzNDhc1W/orTuvKAqTYDVttn+
9/jY5LZZp+Eu+K+s0WlpGTI0aZxERw2VpCHjdBs0cKTxQccbbpBmuM0CXePw
b/lb/HLWajvTg3Xa9m3gtcS315tzxU6wXtd27/N7bN1ic6/ga3bs2EmWGT/a
49SRjS01xThVOKjQB1RswT+331ve76/7q26rSpOCf84aTE6IXMpPP/0s3Xv0
0DzJ4iVL5MSJk+b+PK9xoB0790rX3wZIzIChGp/Bl9u8eYvxz7fIukx0H5vM
z7bItu07VcO9fddOmTxjmnzc6gt54Y1m8rc3/ikvvvuatPj8I2nZ9lv5tn17
6fp7D4lNGCgz56ZK5vp1aq/RotsZlbVep0AdOlwETVmfPgNkjfGrtH6qpCJ2
ynNHnAr+T7yEc/b7hw4NB3xW8FXmj6ATipTukP1wf7EWYg+srWX9Zc3FHhAX
vK3amYp7J6TYlc/P430uGS6QkbFE9QfUNpKjpe6fnoF3797X961y5rT4+a5X
/wTP4N7Fb6XHMr35iGVzrKzR4Wj67PFik7AVq1evVS3isORRsn/fQdVT8HyV
hjiLrbHAxg+5z4ihfvXVV5oTx3fimtq8pl+Xwc+XLFlm+Nho2bf3gPoiZYFY
SnV6LotgLRVrD58rdpv1jvdF/0YcmrgFeQy4KjFoclDkPlmTU1Jmm22ezJqV
LhvWbTf8LUvOn7ssN2/c0c/qUX7FvDP/eh98HPweH5U4vuUMoc5P0eM33AWb
gH7G1qI2RG2pQ93B54j9hVuyVqJbQrOEHgGubGfH3b9/T/sK37hxW4YOmSAd
fu5l1uypmjtBV4J/MXrUeM2DTtUY6By9f6fOmC5xxubT6/6lN5vLi2+/Ki8Z
XvDqe2/JOx++J6+88Zr8o9kr8vK/msm7//5A4wq9evdWPSr5Up7N2mDjBfl5
+Rpj7dnzD80hW15gn09bV80aQIyN/CD3s+MFDQ+sMcSyWKeJZUWSF6CnwabC
N+ysITu/nPseTRF1KuS0/HVJoa539n7C779w4Yrs3XPA3M8LJDY2Qfr3j1Hd
EfMPyVXCUbD12CZ8O3Rv+G18ZcNW4Cei0aa2gDgHGih0bxwrdtxvt4JRne7Y
cg5/nNrmIaip2LhhiyQMSjJ+6XDZv/+QaneIzTalNd/yIWw9+gFsMjbS3wfV
byvLben1m1rPD7fz1hi/Jryyz+Vp/h4qz2Q95TNG68znTk6J+hE0eXy23JPY
f9ZU9LZ8xuStOS58GJ4Hcu/EEZhVdf9BruEAhZ4uXePs1eu7g3mBn8MG+4mh
8AL/64PnhzWle+R5heXMrC/nz59XO2lnQNh8lpcnKNC6v+vXbkuS4QVDEseZ
deucakU8zcgVuXTxsrn3s+XK5Wzt93LlSrb2ycpYlCGfffm5/PO15oYPvCnv
fPqhfPjlp/J5q6+l7U8/SOce3aRvdH9JGjFcZs+do3FjOIHtQ1gbdI0zzwRc
mVlvnTt10xqcokBvLi8nl6vnyPNI7o1aZeKEPLPuXm544DNDX8B6Gel4Aess
ttXqFvz+OvcDdhhuwNrMWsy9E4ofZWH3hc24e5c6bu6928bGHzXr/HLlzOPH
T1AbkJAwSH1C9Mycq9Vq83/ywvYrtoK6eeIDcAie0+Bjr+5Yqosb2ri15QOe
Bv++WQcuak1XfFyC1qihmT5z5ryeT1N6Tvz+u61BsHYxWNsPvNdW1PsVB3pl
2nw28UrWLNZR7hv4J7EddEz4+fj7xCmJvfOZE/Ph53A+tGzc5/BA1lPWKlu/
gt8GF7C94ss/89Ky8h5x5V9r2Ko6/1BfW5e/bUr3yPMKv94lWPfiX1N0tmtJ
kVy9ckMGJ4yVCeNnmfs0N/C7Uq9nhu2fHdjg0AV5BWaNWa+6np87dpA/jP0f
P32KZCxfKqvXZ8regwfkzMXzcjnnqty4c1se5D6URwWPavSBKp9AII9QUqrz
6JctXSm//NxZa8jQgtl+y2gdycnyzOIbwL953ty93DBh68fQ78PfIqU7ZD/Y
fbihrXPwf/bcz3AD4kroz6ijgksS862r3kC1WkXYDziCN6dAtd15+do/gNwF
sQLey9YLYReopyefzPtyDYgx27id9V9D8eusP1xVvxViI/aZoA4U20QeEVuF
vqBH997Ss8cf0uGXzlrvtWXz9ucqpsa5+mPxlTlEkcbqH5j1j3pVfBC0JLNm
zdb7hVgk+VjqGLjP4H9wO+r08f/ho2i88Kngd9xvrFHBM1vsZ+XVs+f6ZqLW
1jPfweHJo/yZMPcovCBp8HiZMmmO+ue2FqGq27MUPv2oSC5fuCT79uzT2S70
t7959448fJQvj4oKdUZjgdkKmZNMbYHU/c7W4yvxZjauXpWptVzbtu5QTuD1
vy/Wdd32WAk1j+bw7GDrEfCXsVuR5AXsD5/N8g17H/j9RO4XfD64Acdw6NBh
vXcs/33snq8CvIR5ICXKC0oCfqbHFax22sbj7H3pj9FZ7YP1Y/06tar6gPjz
A/w99gY/E9tD/Jq8Nf3biYPgr5JPox6pf//+qsUnnk3+bs2atYY779MZzWjr
+vcfoJqhxhIvqCpGUtnHqdrHtb9nbeDzt/V18CdyOnA1NCj0nU4akqy16H37
DpDOnbtpD0A0B8QG0AZwreF36L2t/bfrT/BnHczbqovvVM5n1b/3vYNDJODn
yvRBHpY8UaZNnevV6FS1Rtp6LvJu+Ev4SfkFqtEpKjZrHvFLuLDhFMxdKqIv
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
b68jZmr8XcVb8sUJdaPunzOrw0PcTTmoYnaP5pjM/dmnYl2KNSnq++gTya+M
/az/06uSHIB/B+S99KigrxVrMuzR8DMzPOz0p+aMgfGfNHMxs+0oWg4aVoFA
ILCC1yrmT9xVwD41657P6mMyL+L1NTAwUHunuFsvcAVTO2BsMx7L1BaWFN9U
HCFF84KxsfHJfcjWfvLzr7OGF9TW1qnXGIuzZy9ovdjrUC+gfw3rBZwNeV3n
EVzN/jE2s+7v1Pw9ULG7G/V1zerzUoYLOfk4fvQs4uP2IzAgWPHXIOzZs1tz
XvIA+lWxLnD48GHdJyBnYO2f/IF/B/wMkvsaf8qnYrqLVoXDhRelQCAQLGfw
esd6Aa+V5AXU/j2r9slr5qlTp6Z4geEQC3l+q96L12bWI3y8d8LPNwjbtwWo
XK9Q7xJ0Hsr8eUFk5F6tFyMvcF7zly8v4OtivWDTps3qvQha0vMIM2v65jM1
l/yZnwtyUdaT2DdhDk/fDOb01Pqx5x8auld9VsLhsdUPe3ZHIjw0DiHB0TiY
mq73UrJXwPhP7Qr7ZHwsa9+f+gLrbkyXe8PcX4H0wvD0ucMc/i1ERSAQzA/m
GsJrJD3+OE/Na691LssVL6AfMfsIhhcs5Dpk1YebnYis2544fgorV67G239f
geyj5zBEjwEel7oI2yf7CC4vyE/lcuqxmWuqx75TXa3iZxhOnjz32tQL2u93
YpvXTkRH71PcbsDCm17N8Np0L3/yZpv+qv19xp160pleUeZ3+d4zZjN+s0fF
+E/fH+NLzV0UnPfn55QclrupAwND1GflnIr/JSgpuYWW5vvo7XmoNSR8n82e
jZm+lNaZQ1f//tln/xXwAuvf4XS/wqF7JhOT3l78am7W1yYQCATzgbnucL6P
c4rcR2R4wWx5h/FGZE+b3ogvoo8w83h4DafPcUbmcbz/8dfw9A5AU2sbxthv
YH1BxXSb3TUfcerPzE3FI/UPznndqalBUHCE3qfw+vCCbhUf9yAyPB6PHw3M
q8/yIo9nWk86Gacm7JO3Sc+/UXr0jqhjfaxrVOyD0POP/tfsTXFmlXMujPuc
jeGMCvV/rE1RF8j7sFZFj2rW/vn7rC9x/+D4mHMu5XXKla2c2VnXGNOvc2Rk
XOsohoZGnd8bn5iaqXyW/6hAIBA8D1b/As5i0U+X19nn8QJen3m9Zk73MniB
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
dGJiVMU1dX/2tcdZSx8dwZWCq9ilcinuX3iVvMDsgrDWZKb68ZbeP/kZa8js
AdTX1+PatWu6t8+dUsz5161bj5Urv8Hvf/+/+PDDz+Czw0+dh4N6du3atRKV
/9/RswP8fXIA6v/nqv2fyU0kviwuDC/gZ8HsaHR+Ruz674A+TvSIqq2tx759
ScjMPKy9HqKionR/j++5QCAQzAfWeQRqythHmAsvoOecmVN8WXGD18Dm1naE
hO/DlaslGBsfn/IwdOjndOrtef2k5oo18U0bNyErIxMPOrswPuqcYRyb5AUF
xdew238P8vJfLS+w7oJg7Zfxn3Gb/X9q+Vj34Gz/vn37dN2f13lyMO79YS+A
+63Y/+f8SFJiMv795dfYuzdB/X6r1v4PD43o2GF0/zLLvjzhkpNZpDDUcPL9
vnI5H1GRMeozEqK9osgPyCUEAoFgvuC1h5oy6s+pWWKsIqz5osllGcsYxzIz
s7B79x7FC+pn+N68uOMiL2hobkNweLzWHVLX7pjU2zvsT+9H4DHQE0/3Qry2
ISs9A53tHc75e9sEhsZGUXi9BHsC/Kd4wVz4zPNq/s/Kt00N3vjT8rwyj6NW
nH1gevlS00GdP3vHZgaAX+n5R15ArsaZC+4JoF8Q6zPsIZC78fGaGpu1Rv3Y
sZNTukMzhyE8YHnDJZez8AK+1/SWfqi4wd3aOpSV3dJ6H6OzEQgEgvmC1xDq
zTZv3qx5gdMj2LnDhnUExlvGsrKyMl2Dp4bdw2MbtmzxUvGqXM9RO/V+Du0X
8KLCEecL76q45x8WrXL9GzrvN54DDsf4U7zA1OIfKH5z+tQp7PT2QbrKp9s7
OjAyMY5BFZsLb1xHUGgIioqK3OIFhg+ZGT+j57Lu/WXct3r/MPe/c+eO1oez
50ttP/dPsNdPrSTrMuQA7Pszx+PcJ3v/PMes/TP2G93fTL8/q67/Xut9eHn5
4uTJ85N7qA03Ma9NuMFyxfN4gZlVtepPRGsoEAgWChNP2cdmjZoadcY4k3/T
z4Y1bMYyehswl42NjVWxLB7bvHZon5Wamru610mtnzNPfTHHRl5QXd+A3WER
yC8uwShn4LlHUXsQ8cacyKpzd14jGVPPqTjru2sXDipu0NJ+HwOKFxTdLEVY
VISus1r19c87P9b4z98zvX/2LsinOPvH+M+8ntpxniP2WHjjOWP8T0lJ0Tsl
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
     "], {{0, 276.7154105736783}, {388.4514435695538, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{292.00000000000114`, Automatic},
   ImageSizeRaw->{388.4514435695538, 276.7154105736783},
   PlotRange->{{0, 388.4514435695538}, {0, 276.7154105736783}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvdd7lVea9tkTDuZw/oU5nKP5rrm+6f66qrrb1eXqr1zOBhsb2wUGE0wO
IoooJETOQeScc84gcjJJ5GxyziChxDPvb4klLzaKIIG2dP+uaxsZ9t7a4X3f
da/7Sf9Xg9ZfNf5f/+mf/qn9/xH956ufOv25XbufutT6P6P/+bpV+1+atGr0
80etEho1adTufzT436K/bPK//NM/JUb3/9+jn00IIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IURc8uLFi8KbEKL86PwRQghRlWGNys/P11olRBkI90bhzZ9DOo+EEEJUJViX
8vLyLDc3V2uUEGXAnzNoO278nJmZaQ8ePLCnT5+6vxNCCCGqCt6PYL2S1hOi
ZLzOe/bsmT1//tz9zJ8XLlywdevWWUZGhvt/nUtCCCGqEsrXE6JkwnPkyZMn
duLECbt9+7bl5OQ4T2/Xrl3Ws2dPW7RokT169EjnkxBCCCFEnBB639xu3rxp
CxYssCNHjlh2draL227evNmaNGliw4YNs2vXrhXGeIUQQgghRNUmVutdvnzZ
Bg8ebGvWrHG+HvHcDRs2WMOGDa158+a2fft25/XJ1xNCCCGEqPqEdbZovatX
r9qgQYNs7ty5TtNdv37dxo8fb127drWkpCSbP3+B3b17191XCCGEEEJUfbze
w8cjVy81tb+tXbvO1WGcOnXaRo4YZSOGj7SOHbtYly7d7Pjx4+6+0SOjW97L
W/7L/xdCCCGEEFWF0NfLysqybVu3W6NGzWzhwiV2//4DW7d2gw0cMMQ2rN9k
o0aOsyaNW9qWzdssMzPLCvQdmi/bCvSetJ4QQgghRFXC6zxuOTm5dvz4CWve
rLX16pVie/f+aqNHp9nEiVPtt98u26KFy+2n+k1t1qx59vDhI5PWE0IIIYSo
2sTm6928ecv5eK1atrfp02db7959LT19uz1+9MQ2bdxqDX76xVJTB7n7SesJ
IYQQQlR9wv569M+bNnWmtWzZzgYPHmHjx02269dvWnZ2jh0+dNSaNWtvLVq0
s3PnLpq0nhBCCCFEfPH48RObPm2W1a5V18VyFy1aZllZzNDItytXrltq3yHW
pk1HO3v2vEnrCSGEEKKmE28zJqi5WLVqrX35xdfWtk2CZWQctZzsPJfLd/vO
PVu4eLl1TewV/f1xK9B6uS9vYS1u7E0IIYQQonrxas1DjptBEQ+zJniN9+7d
c3MzLl267PquZD/PtuvXb9jUWbPsh8aN7W9f1ra5Cxc7r88K47+8t7yYW/7L
mxBCCCFEfBPmvIX96m7cuOH60aGf4qH/MK+b18lrz83NdT/TU3nvvn3Wb8gQ
a9+9u33+bV0bO3Gy5Ub/hmX5okDyWax9GUd2phBCCCFEscRqPO/nMV9i6tSp
1qVLF9uzZ8/L/sNVG16/13i8B37mfazfsMHmL15si1aussYtW9uotPGWE/2b
13r5+S/cDa8vLzev8P+l94QQQggR73ht52fKoo/oS3z48GFr2rSptWjRwjIy
MtzfxwOhbuV9/PorffZG2+p162z7/v3WrH2CpfQfbJlZ2YX6LvPZc7t+7ZYd
zThpBw8ctd9+u2bPor/Lz5PYE0IIIUR84/2vZ8+e2Z07d1y8Fi9swYIF9vHH
H1v79u3t/PnzcZGvF+J7sCxevNjNwt25Z48dO3PG2nZJtLYdutj9B4+d1nvy
+Jnt2XXAhgxOs3Ztu1uL5p2tV6/Btm3rPnv2NEvenhBCCCHiFl97cfXqVVu7
dq2tXr3ajh49aufOnbPBgwfbX/7yF0tMTLRLly7FVT0u8Hpv375tkydPtuSU
FDt68qRdiN5nl15J1rBJM7t6/Zbl5b6wG9dv29TJc61tmx7Wr99I696tn335
RX0bPDDN7t19JK0nhBBCiLjFz5HdvHmztWrVyubMmeN03t69ey05Odk++eQT
69Gjh125ciUutR6+Hhp2woQJdubsWbty47r17T/A6jdoaOfOX7S8vBduXtqv
+w/Zjh17o/f+my1fvsqaNWtjixctt2dPM+PufQshhBBCeNAxDx48sDFjxlid
OnVsxYoVrg4DbTRt2jRLSEiwrl27xmUMF+i5snv3bhs1apR7Xzdv3rTx48db
gwYNXr6ngnrjJ0+euBs6d+DAgda2bVvnb9KXT1pPCCGEEPEMcc4+ffrYhx9+
aD179rROnTrZkCFDbP/+/ZaSkuJiuBcvXoxLrYdnuXXrVuvYsaPTrrwP8hDR
etSb+LoU8hXReunp6S4/Ee1L3mJurrSeEEIIIeIXdMzjx48L6zA++ugjp/W2
bdtmFy5csN69e1v37t3fe76e75tH/Qh1I7du3XJaDE+uuNke/jHXrl2zGTNm
WOfOnW3WrFmWlpZmjRs3tn379hXWH+P/4fNNnDjRRowY4bzAy5cvOx3M7/Q9
XKT7hBBCCBFP+J7JxDbJa1u4cKHrnYzHRR/lkSNHOl+P2Ob79PV4neixkydP
Os+NHELizGjQ4rw3r/V4HH4evl6vXr2sUaNG9sUXX7icRO/pcZ9Tp06598tz
42cSu6Z+lzpePh//e6T3hBBCCBEvhHMmmC/Bzc+cwDdDH6F9Tp8+XWlar6iZ
HUXdBz2GDqW385/+9CerXbu2zZ07z65fv/6KDgtv/r3hzeHbzZ4925o3b27N
mjVzvp3/d27kLTJbbcOGDc7n7Nevn3333XdWq1YtW7ZsmfM/5e2J0ijtWBZC
CCHeJb7nClrJ33y8Eq1HTBN/C8/rfWs9XtvDhw9dzfAvvzSzf/u3/7D69Rva
jBmzI9121XJzcl1fZJ+D52eA+B7RaEXiudu3b3fPga71/8ZnQG4ffubTp0/d
eyeOjS7861//ajNnznRaT+u3iKWo4zc8BoUQQoj3iddQ3LKzs+3+/ftOD+F5
4eWlpqa6WtwzZ85Uqtbz+rK49THUbdeuXbehQ4fbH//wgX39dV1LTOwZ6b05
du7s+Ui/PY/eS95rzxeuwWg+dF7s7F/6SB88eNDd1q9f7/L76tat6+K5xI5V
pyGKwh+/4T7JH6vxWM8khBCi+sGahGdFjxH6DhMjpbfesGHDXA0DdamVla/n
tSZ98PDs0JulaT364c2ZM88+/Mvf7auvvrXUvgOtZ49k69+P2uGD9vTpq7UU
xT1f+Lz8XmLB9JzhfVOT0rdvX/f/v/32m/P85NWIovB7Bep4qGfiWA51nxBC
CPG+IW5JXQb6hhw16jNOnDjh5uESwx0+fHil9VxhnUTjkQ9H/Sv5eH6d5Bar
yfg7dFlGxlFr0qS5/X///U/WJ6mfrVq51lKSB1jTJi1swoRJduzYMafPStNl
YV4ffh85e/iazBHB4+R3FeURippL6BH745TjZu7cua4f+aZNm9yxFO43/PGj
/YIQQoh3DX4EPYbbtWvn6lqJ2+JLsE6hAdetW2djx46tVK1HjSu1tQ0bNnQ1
EWg/9J7vpxIL/3by5Cnr3Lmb1anzo/Xu1Td6nRts+LDR9od//cD++Ic/Wf/+
/d36qzVVVDQ+vxM9x16AP/F+8cKbNGnicgB8vY/PA+WcIkfA7x+k94QQQrwr
WHvom1yvXj23RnmfwtdB4FWwhp09e/aV9Sn0t95mzfIza5llUb9+fdfTmV4o
6MxYX8//zOu4dOmKjRg+2rp27Rlp0QnRa+xnP/7QwFq1bGeLFi52viRrsGJo
oqJw/u/LHj3sI65eu+bOn/vRzxs3brSWLVu6+Sy+Bzcaj7yANWvW2uDBQ1yf
cvY0xHnDY1sIIYSoaMKaBPy6Fi1auNgt/Yl9vzmfwzd//gJLSU6xM2fOFq5P
sfWyb9NjgvuzXvJ7unXrEWm9FBuXNt6OHM5weXextRXA312/fsNpvJ/qN7I2
rdtb+3Ydo8dNtEOHCh4X5ktpTRVvC0cQOi87J9cuXb5iCxYtsqHDR9jsufNs
05Yt1n/AAGvStKmtjzRfZqTx8O7QdOPGMY+vkX3zTR377LMv7Ifvf3T13dnZ
RXvWQgghREXg84fQQwcOHLAff/zR5syZU+iDeV11/94Dl/vWo3tvO336rKtv
zc8r6NFCXxLfn4TnedNcNu7/6NFj27hhs82YPss2bNhk06fNtBEjxtiWLdvs
/oOHr2k2fmZ2Bvqwfr0G1rJla1u8eIldvXrNsp9nv5JHJa0nKgKOoJzoWLr/
+IktWrbcuvdKsqSUftbolxbWsGkz+75+PevYtYsdOX7MsnKy7cmzZ7Z1x07r
1LmrDRgwxGbPnm8dO3ZxOaZ79+4vNj9BCCGEqAi81mO9YebtTz/9ZCtXrnxN
Gz24/9B5Zd0Sezqtl/08127evG1b07fZtGnTbdKkSZHemu9qdEuaVVbaa6HP
8bZtO2zq1BnOlzt58rRNmTLDukcac/bsuS5+HNZZ+L7KV65csfT0rbZn716n
/fg78qJ4vrBXoBBvi6u1jfY5D6K9zbZdu2356jXRn3usc/ee9sF//c0+/vJL
65DYxQ4dPWJZudn2LPu5Xbhy2bZu32nHjp2MjtPtkdZLtDFjxtv16zfdvkla
TwghRGUQ1gSihcgpHzx4sOsn96o/R33uM1u1co3Lizt37kKkp+7bvHkLrU3r
BOvatbvLP2ratKnLtaNu9U1ykAq0Xqalb9kevY7htnPnbnvw4JEdOXLMeXs/
/9zY9XLesWOH03Lhe/A5UdzQmuQXpqenu3y/sE+yEG+L6w0U3bIijfbgyVO7
de++nbt4yfoOGBRpvf9pn3z1pbVKaGe79u2157k5ls3s5pzn9jQ6tm/euOU8
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
SxPlhWPqypWrNnrUaPv66zrWtm17mzNnru3YscPOnj1nZ86cjfTeVOuW2NPW
r98U6cJH0fGX4+ZK5+FD+/hvTK27nzvjey/7fxNCCCFqCt6jo86ia9euboYH
9RfouKLWxNh8vqL6yYQxYGk+URb8LLQNkY5r3LiZtW/X0fbs3msZGccirXfB
0tO32dSpM2zjxs127979wny+zKzn9iwzy7Ki4/XZ82y79+ixXbtxy06cPmNb
t2+3RYsWufwEZm5cvXrVHdexM3eFEEKI6oyvr6V/ytq1a61Xr15uTtv9+/fL
7M8V1zdQPc9EWfHzl2/duuPqbJtEeq9Xz2QbPXqcLV60zGbOnG179uxxx6n3
6O7cvWvrI+03d+ESWxv9uX7LVhs/Zaq1apdgdX+sb198Vdu+/PJL+/HHH10N
EnsY1esKIYSoafiYLOsnMzSY38Zc3gMHDhT6H6Wti75nH4/n5tfT0vozC+Hx
Wu/27bvRMbjYvvqyjv3StJVNnTrLRo1Kc74e/nO4j0C7JSWn2N8+/cL+8tEn
9smXta1uvQb25Tff2WdffW0Nfm5svXv3dnNiOC6pRfI6UQghhKgphH0uiG+d
OHHC5e2NHz/exbzCHhjF5e/xb7du3XJ9+saNG+f6sLCmKo4rSiPs5XP16jXb
tCndxo4db81+aW0tmrexIUNG2dQpM+z8+Quv5eER8z1x6pQtXbnKuvVOti/r
fG9NW7WxvoOGWMeu3S2hY2cXu6Xmo7Lm0QghhBDxgvf3mH1GjlNSUpKL6frZ
tyVpPf6d9ZT5ad26dXO9WM6ePet6sygXXhSHP3bu3bvnZvUtW7bcVq9eZwd+
PWQzZ8yxli3aRMfSnGjvcDE6Dp8W7hvw9diX4POdPHXalq1abakDB1uj5q0s
oUuiTZk52xI6J9qQYcPdcehzT6XxhBBC1GT8ukv8lT4qzE6jNpe6XO/RlfQ4
1lN8QPq39OnTx3mDhw8f1joripyF4Y8bjhn2CBMnTrT16ze42Rj37z207dt3
27KlK6P/v2bPs7Jf6aHHz8x52bt3r41NG2fDRo62mXPn28i0CdasdXun8/qk
9LOMY8ei4/l5iXuV0l6zEEIIUV0Ia2p9LHfChAmuly1en19ri3usr4sklrti
xQrr0qWLTZ8+3e7cuVP4b6JmElur7fcU9PHmGMEHpq8e9bU5Obmuj8rDh4/t
UXTLe9k/z+s1/qRuiLpxasanRnuSw0cy7PLVazZh0mT77Ita1qp1W9u+Y6dl
ZmYVO/OvNMJ4r2K/Qgghqhu+1oL1t2/fvrZkyRJ7/PhxmWo0vN6jlnfEiBH2
66+/Kh++hhPmhHIjL4CZfPjG5Aswq498vd/zO1/11fxxxeNOnjzp9hJr1qxx
vvH169ftWWam24/069fPWrRsaZs3b36Ze1B+fRZqO3IQqPstqd+kEEIIEa+w
rrGOUmvRvXt3l09Vml4LfUFmXFHTyw0fRmtlzSDWPwt7+pCXxz6AGm9qf/Dm
iMX6HijFeW9+pgZ9lZnnh59HboGvq+XGcy9cuNBpR/+cbxK39ZqUvQ2acc6c
OXb79m35ekIIIaodfl4uGo+eezNnznRrXkmxsDAOjC/Imk6M7syZM+ppVs0J
4/he1/Mzumvnzp02efJklxNAX2OOCebxPXv27BVNVlSfbnQcc5qpp0UfktuH
D+i9tjAujA8X+5zFvdbwseHv5bHovHXr1tk//vEPS0lJKcxD0PErhBCiOuHX
w0ePHjl/gzVv9erVbh0si0fH2si6Sw80NKK0XvUm7NPId82faDJqfDp27Ohq
dajrPnbsmPP2wpht+BxhTxW8OuovRo4caWlpaXb06FFXe/u2HrH3nnkNHKMc
n2hS//PGjRutdevW9s0337jX7F+r9J4QQojqhPdlWHOpyyWWS+7e7t27nX9S
Wr67X/tjZ2i8SZ68qLrE1tXyXaOZ6HVC/BONhl5C83Pc+NzNoo4H/xzc7/z5
8y4mi84jZnvM1dRmFT72bfr45Ae1vPh3+NajRo92Hvb69eutadOm9umnnzp9
6vcpsd6jjmUhhBDxTrh242ucPn3axd+I5ZLH59fbkupri5qd9ib9L0TVIVbj
hN+x73tHLh3x2nnz5jnNhvbzGs0fA6HW84/nsXh+27Ztc/oOnUis97fffntN
573N8ZP3It+e52TbkYwMa5vQ3v7jPz+wn35uYJOj43tQpO/Qevh61I94bVrS
/Gcdy0IIIeKR2DUdr8X1M4vW4E2bNrl6C9ZmbmV5Htf39uRJu3DhQon9W0TV
Jqynjb15Tw9/jNpt8uzCGtaibv75eBx5ndTy0MebGt2MSIv5uWhF+WpvSk70
+67dvGFLV66wXn37WMt2baxx81/cn01++cU6depkY8aMcXPVvDb1ex6Oe94X
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
nD0C81TosVyZ37nPF8R77tu3r7vR07mmntdCCFFdwCegLxv9HMgHR7OFvdiK
wscm79y543pA+HleNXVNiJ2BwSw5r9HoW423h84rzh8J13nmktB3A0+FWml8
PHQjuXr+8aJ64o8BfDtqb9gn4Jnz/eO9o/VjNX64R/BzjsubX/f787yIzum7
rmbru+++s169etvOnbvc3kV9XoQQIn5BP7Ce0JcN/4ncfz8ztTjCHss+jzyM
J9a0PO6wJw05TvPmzXMxWzQfGq+4zyeM97Ke4rHyWHQ3ddL4OPh4fg3Xelu9
CWOozEKbMmWKi9eznyKey7kZe+5xrtInk/0B/XcOHDhg9+/fL8zjLEs/pdzc
PMvL5RjMjJ5nl7Vv38kS2ne03r2TrW/ffi5nT8eeEELELz73n3m5w4cPd1qD
XKGS8sCK0iqsLeH64tejmrA+hJ4cfgyfIeuj/wyLunlvlM/+4sWLLh5OTw2+
gw0bNjjPNPbxNUk/1zTCvkZ4uPi5zDNEtzHbkPkZsVqPY4e8OuqrunTp4nI6
x44da7t27Srsv1Pa8YKXl5ebb9nPc+zSpSvR4ydGz9XDNm5Mt0WLlliLFi1d
jgaasiZ69kIIUR3wMzGo7UNj4O2Rj13W/O+wr4ivFwhnctWEtYH3iPdGH1xi
tqzNYSwt9r7+/vReYe4p8V765s6ZM8d5rKzhitXWLMI4PjqN2cj01EHz4++i
4ai9DrU/xw/HzYcffmidO3d2+wR0H7kYPq+zdF8v0nt5L+zGjds2depsa9u2
U6QxF0fPfcf27tlv7dq1dx41uR7aawghRHwSajXy7pjJxBqDbvHX9ZKu8d6f
wtMiL426UTRfRdWHxuYevY+1pqjfHf6/18t8BvTJ8Dq5qNfNn3w+xHfRdtRX
oq+JwVGP4T87rak1D6/12Hfh41EzxXlIXQ8ajpqJUOuhCX3fJI4jvD1+xv8r
a+1swb4j145mHLcOCV2te7ck27B+s507d9GOHj3uar+ptee81jEphBDxSRiL
xWsiZ4xaDfokk0PmY0ZF6bawFxcaBy+CeA9xJ57rbX29MBYc1gaHrym2d0lF
E8bWwpqV8OfwNRWVk+fvy/pLbxvic9RYkpNHDI511M+vrez3I6ou/nhhr0De
HbkA1MHi0yUnJzt/L/aY47ihdqN///5uTh45e3hwZZ/LYpaV+dy2pu+0lOT+
NmXKTOuT1M9WrlgT7UdOu7hw69at3XVBWk8IIeIf7xXQ6wMdQo9lX6dRUp8Q
7kM8yff6ZU1ivULjvA3eM/QzeP2N5/b1DmXtSfymvz+2zpF1lBgtGu38+fMl
9prxj+U1kwOJP0ONI7E2dDE+ajiXQNRswn0F9Rb0ZWTvRE4FcX5iuKHW8/fH
D167dq3LwQhzbUs6psJj+9bN2zZ9+mybOnWWbd6yzXr0SIrO5UVO69EvvWnT
poU1wEIIIeIbr9uIL6LZ6PmBr+DzsovCxy/RX2ggevvTc4/HvW0s0mvPC+cv
2LZt223FipU2b958W7RosR04cNDprvLMli0PYeyV9RVNx3vCN2ENpq8tfhzv
O/Qvw8f5nrjEZ6mp9L1p8UDJp/JauKbVLYuiCT126m/ZE9C3B4+PXo2cX6Gn
HR5nePDhsViazvM+Psfn0qUrrHevZFu9ep0tX77a2rXtaL16JtukSVPt558b
Wbt27Zx3WFPyb4UQojrjdQ0xWHo+dOjQweWU+fmtxT3Grz/oF7RQs2bNXN6f
zw8vDzzP3bt3XZ+Jffv226xZcywhoZN9/nkt+/jjz+wf/2hgrVu3swkTJjnv
ozJ6+oWeBzqW34Nvwmwy4mq+p3FRM2j9Z8G6Sy0u9/eza8mjYk2O1afSeiIW
9hbr1q1zsVl03rRp09xx54+xisiN4HccPHjIRo4YE+3PUqL9yIzo57GRtutk
9er9bJ07d7MePXq5awE1ItJ6QggR/4TxSvQdeXusNeTu0SeutOu8zyvHx2IO
B3nl5f39eIjMDOjevbs1afxLtNb0tpSU/paS3M/GpU2M1r+Ntnv3nkg3nbCH
Dx9VyoywMPcOnYfeJV+KGQY+ty70LMPPjfWT2C4582PGjHE1jHh5rJVoQ62V
oiz4OC55EdTYkt/JXqGitF6Ye3HmzNnonDtsBw8cjn7Hyei8X+J8vvXRuXb+
/IVo73evsFe6jl8R7+gYFjWdMGbp63Lp+UbOTthHpKTHs4bgXaGJiLGWJx8t
jHviZfTunWSrVq+LnuuG3b59127cuBW9jtNO7y1evNTOnj1XmE9YUedvqNvQ
Z3gazC9A71Jn6+eghe/Lv278SHqokOtIbS01GHh7Yd2FrjOiLPh9D+cd+wxu
7CEq4jgKY8UF53qu66/3PCvbnjx9Ztu27rQhQ0ZYRsaxwpzYmjoTR8QvsbGW
8KbjWNRkwnPD1wNu3rzZeWzoFj/PtSw9WMgFImeculN+Lmv/B68ziSOTG47O
e/yYmRIXbP78xa7/13ff1nPxJfy/WI+tIj4DX09BTh51iHh06LywFiScXYC2
JQeP3nr4eMSxye3zc83Cz1XXGFEW/LnAsYXGQ/OF/ZHfVuu9csv//ZaTnWsZ
R47b0KEjLT19e3Tu5rxyXyHiBX8Osf4Qb+FcCucIClGTia1JYOYX8Vg/86u0
WE7oc9EPbPHixYV5dWXRej5HrqAW4pzt2bvflixZYZ06JdpHH31u30Y6b9jQ
UbZ//6+FPltl5Ouhc/ft2+fi2OTJ+xlnoW7js0DLogWZMcccqyNHjhTm8sV6
f1ovRXmI3VOEHluFHkcvCm4v8s3N0Pjtt4L5GcuXrXTHuBDxRhifYZ0gj8Z7
A/4cEkK8mtNDDxXfDw7tV7bZS/lOGxIDRu/h8ZXl/PJ1vefOnbWkpD720d+/
sD//+SP76qs6ltQ7JTpn99j9e5HGy8ktjKdWZL5e6PkTgyafqahZZWhBtCwa
mM+GvKqLFy8W1kL655K+E29KbF/HsKdjxR1TPE++u714ke9m454/f9H69Rvk
8mPJiZUnLaoysbVxsf1OWbPogUA+jr8+S+sJUUCoechDY17rwIEDbePGjYWx
3NLiucScqNPA86L3V9jjtajHhH4Zvl2tWrXt73//3EaNTLNdO/e6eG5WFh58
vruVJ/8iNo4azqT1nl3szFr/b7HXDvaJe/fudXOrqK+l7xl/5+MD6kMmKorK
94V5Pnr/EKvlXMp1vl7//kOjvVVqtE5eU66pqNL4GJSvjfNxFT+3k5qmvn37
ul4K3tcTQryK10Xkz5GHRs0BvbZitVFR+D5h9B2hFyz+YGn5dZyH3Ccj46h9
99331qpVWzt79rzLH8/LQ2+9cPM7mdke22ustPcR1lWwv+O1odOYFY8nF/aN
LuoxaFzuj77DrySXEd+vqN4rQsQHHKs50S07Om45p/OiY/quTRg/1Tp36hGd
66ek9USVxms91ij24PSjZA3xcyvJo2bWH7MBatKcdiHKC+cFnhX9vYjjEpOl
t0ppOou/55zjccQ6mRVBLLek3iP+vKXWAZ3XskVbF1NC56HxyCfKzHzu/AbO
XWog0G1lrfsgP5deMMwjoFctPfPwLIvTer4PGfnx3A+NR/4ie0XfD7kyZ3cI
Ubm8rvWI2y5ZvMISE3u5nuXSeqIq4/N+uIbTv4G8PO/pcd1mzaJ3GDlFYc61
EOJVvL9FDJY5X+gjeov4XiLFnTdhbix1DsRzQx+suN/FDU3Yq1eSNW3ayjIy
TkS66mmkL+/bufMXbO2a9Zac3NfNbkJ3oTuLiwnH9lAhBs1MkK5du9qMGTMK
e6KEM3e9duN18nqZR4ovSb883gO/z+8bw/sLEX+8rvUeP3piq1evt969+rpe
y+pTIaoq/vrOfh9PAR+CvbzPBcIPIPeIeU7UZ/gZUDqWhXidsD6WuCd1CIMH
D7bTp0+XGI8Nc/44F4mBltZ/xd8fXdanT4p99WUdGz9+ss2ePS/6ncNdT//a
tb+3r776xhITuzntWZyv53053zMWXw4vHz+Pfnl+rkf4Onk/3J9/Y94789B4
DHML2Bfi8cXOI9U+UcQvr2u9e3fvR8f9AuvSpacdOXJUWk9UWbwPwf6b6zvz
xn3fB3/N53rPDChqM0rzJ4SoyYR6CB1E/Sn7JOZJoMnKct6UNb/ce3DEkWbO
nG2ffVrL1eDW+eZ7q12rrv3yS2tLTR3oeimTNxj2/Cvqd3o/Ej8OfcrsNnpE
E8v1jwnrt9Ci9IHG/yPPkD4qXC+IKfNv0nWieuG1Xo7Term5eNl3onNvrvP1
6GupOlxRVfHXeK7Z5JK3b5/g+rJSF+hzbvD6mNHOn1z3K3t+uhDxTKj30E7U
JTCX3cdyy3qsh/0tYz2xsJ6Kf0dfrVy51nl6Cxcujc7ddXb8+KlIX94rnCsb
9teLfQ3++TjveZ0LFixw+Rv4gGHehn9f6EZ07OTJk12NLbFb+ufh5fF65G2I
6klB3xV6rlCHW5DPvtqGDhlmFy/+pnVMVFncNT43z27euBlds8e52el40YcP
Z1jnzomR/hvp6jXI1+O67vuRV8asJeW1iupAeK3nPGGOGb7elClTXH6Ez1kr
7Vjn3/Dbt27d6nq5xJ53RcVUqcEt6KeX97IWN/+1OuBwngXaDO8OL9/XW7B+
EX/2NffeP/S6E12JFqRXHl4emjCs1dA5LKo7YS0SuU14ItJ6oirj1opoPXjw
4KEtWbLcunTpbvPnLbEBA4ZY69btbe3ada7fV7NmzSwxMbGwP2xFaT1/zrC+
sN6UpU5QiHjB1+XSf4QaJ/IgqHcPZ0WUBBqPPDjWk5LqNEr6/WEdhZ9TxnnM
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
3PkLbeiI0TZwyHBbFP3d/v37bd26da6nZf/+/QvnZPh8PL8v0jkjROXBuUUe
O/m19KvEgxdClB3OIfJc09LS3HnEOaSZ0qImUKD18u32vfu2fM1aq9eoif3n
f/3d6jduaj81/sVqffOt9ejRw829JSec2TXe69O5IcS7wfc/Im6Lzps3b556
vwpRTlizqEkkB4m+YPTw00xpURPg+H6enW0Hjxy1Xin97L8+/dz+2z//0Zq0
bG1Nmre2//rbx9avXz83I5pcPd/vSFpPiHeHz7cgbku+BXmy0npClA/WLHqH
kfPKLHf6kWvujKjOhDHXzOfPbf/Bw9axWw/76LOv7A8ffGgffvyJfftjfWva
rKXLzWMvFObjaR8kxLvDn6/kxzLj0M+zFkKUHX8O0Y+cHhLkoIe5SEJUNwr7
5kW3rEjrHTt5yrr06G3//Y8f2P/9//x3+2//8gf74K9/s4aNmtjsOXNcnUaY
m6faJSHeHV7r4a2vX7/e1WcoX0+IsuPPIWJTzBGglv3QoUPy9US1I9RoXuvR
c+Xk6dOWNmGSJXRJtKR+A6x1Qidr0KS5tWqbYCNHj3F98zg/tP8R4v3gz1n6
6y1atKiwl7L2XEKUHc4V1rI9e/ZYr169bMOGDYXz0XQeiepCGLfl+CYuu3bd
Ous/cJCNThtn+w4ctFt379rNO3fs0uUrdu3GTdd7JTubeRl57ubOB1/DLoR4
Z3DuEX+i7zm9LZkJL60nRNnxMz+pMRwwYIDLfcXvkNYT1QWf282ehn569FFh
fm1qaqqbm3H5yhUXy32lj3L0uPzoP/l59CWKdGIec2ak9YR4H3BOsi4xrwZf
79SpU8qnEKIc+BnueOLjx4+35cuXuxonaT0RjxQ14wwfj5y73bt3O403dOjQ
wn7I5Hj72WfhDFueJj+fXg/5lv08x7Iyn7sZM/l5r+ft6TwRovLw5xh7Nc5h
eiAxr0Y9LYUoO97zoE/l9OnTbdKkSe5n1j2dQyKe8Meyv/7zM/PSDx486HpH
0g+ZY5x+yMRwn7/08mLnXvh5uXfu3LPTp87atq07bPXqdbZzx267fPlqpP2y
X3mMzhMhKg+v9ejzj6+H1iOPVnstIcqHP4/Wrl1rgwYNcvFcPytNiHjB5yOg
vziez5w543K5hw0bZlOnTrVt27Y5f8/no8bW1hb2YcnMdD31Ro9Ksy5deljL
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
MlyOJD4qecjhzIiyPEeYJ0feCnktK5avsPXrNtmJ46de9ifmO+Q6SSyVP8ur
JaNbJBPz89B4edEx8tROnjxtK1eusdWr17i6bd4H2s9rPF1/hRBvir8+UpNB
bRdxA8UHhKgYOL/I2du0aZPTeswRYG8lf6bi8Z81+9W2bdta3bp1XezT95sr
7bMONR73p+515cqVlpycYr1797EOCYk2csRYO3fuQqTPcl5qPerY0HtvpvVy
snPt+nV6qGyzUaPSbNiwUbZ37z4X68dP1DEihKgo0HrMye7fv78dPXpUWk+I
CsLvpdB4+Obr1q1zvhBek/JeKxbfP4qaVWKf//jHP6xHjx6u/jmM5Rb3mYc9
TtB5zJJt2LChjR8/IdLqm61PUj/rltjbDh48FD0fvRJ5zudWVq0X/n7n9z56
bAcPHLbJk6bbyJFjbfGiZXboEF7e48L5ydJ6QpQdnSslQ4xpwYIFzndgdqF6
+wtRMfhe5SdPnnR7KWrd8Wy0jlc8YX4d17HevXtb7dq13bWNa1xZtR6PJ77R
tWtX1xeR/LmrV6/ZuHGTLSVlgB05cjT6TvFm8d2e24v87Je5eyW/Nj/HAp/x
wIFDNnzYaEtIiH7HiDG2d++v9uD+Q8vJzlFetBBvgHrBlY7XeoMHD3b5Lfqs
hKgYwjnw9EVjXqnPIdN5VvF4TUWeHd7exx9/bB07dnSfeWnrgH8sWo+6Dupo
eB7+//r1mzZ9+lwbNnS0nTxxOvo7+hFkWU5upuXnEcctW3yY58Pb7dSxiw0e
NNz27N5vN2/ejp4vx8V137TMQwghSoOZaOQCM2/H544LId4ev8aTo4dXRFzw
yJEjhfPSpPcqDt8XnusXnzefc6NGjezTTz91fur9SL8V6L1X+9KFtbDhLDKf
L8ef1E2MGT3eFi5c5rQZNRN37ty0x0/uO60X+1zhzXt5XFuZa0b/nXXrNkR6
8pHL18tz9RnR/aLbi3z/uPf5SQoRP/hzzOdpiOLhWsZ1cfbs2a4XmLSeEBWD
9/U4x1jr6ZdGPw1fX6lrU8UR1lbwM97cjBmz7JNPPrfu3XvZ1SvXnJ5zt7z8
Qk3F/+Or3bt333l5vi6CtQPt+ODBQ0vfstWmTplmu3btdj0Lxo4dYz17dre9
+3a/rMnNf+U1+O8cP/f06dNuL03PHTQn8fyCHir57sbv5+EF9RrSekKUB7/H
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
XDt86KjLUzt48JDTPtnP0VTZ7vbw4WPbvm1X9B2NjLTqyegaes3lwNCnlBgp
2quytJ6voyDPmjw7/El6KLAvoK4Fz27fvn0uFo6m475oXK8Lw8+7uD0Eeq5g
Dka+y1F0czFyCv6/PO/Lv2YhxPshjKmQx8F1lziGP/91fgrxfnC6JivL9uzZ
Y6mpqS6+iQdT1YmtAfAxU+KCxArRI/RQmT17ttNUvMcw7hjGIl97biuI4+Zy
XzRbdL/nkfa7efuODRk23H5u1Mj14wtrTWNfW/h7+DzRntQlEMNcs2aN00p7
9ux18WVm4K5du8HGjElzus7X3XJ7nkVtx2lLSkqxkSPGRNrukOsr98knnziv
kPxDnqM0TVRUPWzsz2g0Xis6ltdLTQlz3PAj8e7wR4nJnj171v073mb4OYZx
38L+gTF/X/RrM6frcl/qvfCx4ePC5w1rlNGHOZFmpocXWvn3fjUvinwtsfFp
IUTF4GMaXIvx9bj+kqdbXAxECPHu4NxEg1CLi1eDF1XVCXPivO+E/qLeoU+f
Pu5GnkhF1H95bYC2IR8Njw6vrjzXL68r0FPosw4dOrg+L8RAyd0jvszfh9qI
vTD6kJlqCQkJ1rt3b/vll1+sfv2fnJbFS+M+ZdF54efFY9C+aES+a3xdvn/q
sPHp2Ifzuniv9KUh7s0e3ceN31efE//6ee18F2g6tDC5jadPn7H+/QdH+rej
69USvufYOHRsrqMQomII4wFcn6hJo/bPe/zy9YR4f7D2URdKbQaagxyzqtq3
7NU8rzynV/Dx6NeJL9mvXz+nw9Auvmfx27yP0A9DI/G8Xbt2db+HmHB5n9vn
LKPf8B3btGnj4sy+32hhfUh0P3Qq9auJiYnWuHFj5+P179/f7ZPRtrHaK/x8
wtfO68aru379utOO+Jz4deTV8fzEZYkJ4+ny/8RquS+1K+gqfs/7jOv798Rr
4DNHk9KHhflpv+4/aKdOnra0tInWpEkL69kjydX1hv4d+prHcYz72TChFymE
qDj8uUqfemru2Sv6a4jONyHeH5x/6CJ6nXXv3t396T2rqrIexsbjCvrT3XK+
E/HFpKQkmzJlitMw5I1VVI3qq3HDgrly5Bt369bN9UUu73P72meug3hn+Khc
D4l3hB4dv4/fhVeJBiOOisbBX0O7hHXG4fv0sVgey3PyePbVeHXUxKHp0Hj/
f3tn/h1Vna77f+T+fH+5a917zrl9u/v06dO2dtNto7QD2ipRaYSgKAgIMocx
QIAAYR6DgDJPMgmKgAhIFJlBEUFAARmVeQ7vrc8X3vhldwUSpqpKns9ae1Wl
UuPeVXs/+3knaoN5ff5HD2nisvS/Q9slY7t+Tp4J4vWPf8ssYfzNjh07pzR3
t9B7eeyYUiss7JfSzp1Tmnl6Rc0f3xF8S74j9FMkbo5O5vxAdb1C3B9c65FT
wXkkWk/nVkJkHn5/HBfpdda6deugndB+sW+U6fcXaw+O5fRMobcHcVA8Mmq9
0EGul+6lJxk/H/swtBEeInl3rKM7eT7v+YfPlE57JO/DwnXXsHGtMdsK3Yte
Q+sSC6bfCfqQ2eP0t2I2ChqP946/xbrCN3TdWFk9cib93WSuHe8Xz7Zv36Lg
6Y0dO8EavNDQOnfuntL576a0XqfUZ1xbkS/EOmEdcP5C7Puxxx6z3r17h1zD
bPheC1HTiGO4nGeybybv188Z9ZsTInPEnvvAgQNDrhsej+c2ZZq4rpXjN9qF
4zf9S/ClyAvBx/Lj9/08f+R5iYMSVyW/EQ12N891Oy0Va0zPteOz8h7wuDzu
iqbBt2Pd4NfhzbKv9X52+Fs8Dm3n8ZRsP9d2vesan9gzn2/dunX2/fc/2KRJ
71mjfza1cWPfSZ2fTLRWLdvavr3fh9lzfE58V2Lt6DvyOKnHJv6O1lW+nhD3
HvcNOP+kpyZxCz+3qomz1oXIJVwfeT1u165dgz+USa2XrMVE45DnRi1ofn5+
0KR4e97fIz5u3+9jOLly9KhhPaGPq/p50uXUxX+nmyHL58bPQrcQf8Vzxauj
JzT6Bb9ux44dQe+yfvDr0J94n6wbHu/9ZZL1x9kUo09HvB74LHxGcjOPHz+R
0rHbrEOHLtas2Zu27KMVoR9Nx44FduL4T0HreW4f32f60uBZ01OI+C/bz9dD
tn52IXIRz1FB63l+DftI/x3r9yZE5oi9I3QDtQLUT3lefiZ+n/EsVfYVxGup
Zejfv3/oAYj+ifvjVVafcK/hedFR+EvEu9mfxXHVyvC4RlwXwOPYL6Jj+Jzk
o/G5iMUSb2UboGnxpdCWxGXZPvQpRueSl5jUune6ZCvxe2Td8XnRs6WlE6xB
gzwbMmRIWF8L5i+w+vWfCXl5aLnYC2bdohGbNGli3bp1CxpQPVeEuD+4b8Bs
SOIOxBSy/bxSiNpA7CtRe4l3Rq0D3vv9rpNP53EBeoh9BHl46J327duHWlW8
HTRR3Av5QeLnrWg8Zl+Qs+ezWivTW3GNQ9zDDk1CzTN1r/hzxGLZN3IuTHya
/ifkNaN1WRdxTWzs0dWW/afXXVOjwvfBe3/7jDZqXFh/fIdj3c86QxtzDkPs
nfWu444Q9x7f33E+TN4wvZTjvvP6zQmROeL4ITqGmBfHUs7L7rdHlk4X8R7o
+YH+cU+LHDRuuz4/9Ze45IPGtR55cGgy9IXX/cb+mntKPk+MHDHyzdCIfBZ0
HDl2cX4dGgbthxaJ+514nl7SF6xt58qsT9Yj/VnxeKm7Rgf7OnHfL+5Dw/pB
C1KH3KBBgzCvzn2G2rLehHhQxFqPfRx9vNg/5kIMQYiaTlJrkfdPLzdqHu/X
MdFfL+5x6z2RqTkYN25c6BeMb4bG8+P5reZdPAhc6xFHROeRQ0cdi+eooNH4
H/UQ1J8Ri8VrYqH/AJ4p+Xac86Kp6UsQz59Ip+Nu5RnWlv0nn5HvB3UZ+LzM
hyOW7TkG8fc3/pv1yePIPx00aFCIg7OdpPWEuPfEWo/+RpzLcl0IkX2gt8iL
w0+7mzrTWxEfm9E5vA6+FjUH1Dzg2ZBXj3bKpjilxwTRc9S9okmpBSZGyPv3
mljqJrhEq6L3PM8OP5BaYvfspDmqBuuIOmJi+vQ3REffbmZI7BPzPeIcxmci
a70Lce/xvG9+q+wXiWPcSV8qIcT9hd8qvgc+VMeOHUP9Z/y/uz0+xt6LzzQg
DoffQn8MYnNoKLQUfsz9zBdMFz9O+mh+P68F9doJ4hPMsGAd4dURh0WHoOt8
H8e6QzeTY+Z5drF/l00aNhfwnnnkkbItbrfu4nOJZD2ytJ4Q9x7XesQ6iM+w
D1SfFSGyD/+tUhPAbAg0WFxnejfHR9dMfrzF2+J16FNHLwxqL/DGPLc+1l/3
kji+F+uvuNbBe5347AnyvVgXzJsgt448FPoQUgdKXiP6g/uj6/hcnleo+Ou9
I108uyqPietjtO6FuH/4vpN9Irkq1NLpdyZE9uFajx4VLVu2DHlR6Jd7pfXc
ZyGWRnyT3rbUs+KT4YH5jC6//4PKFcQnIq8EPxFfjlzFYcOGBS1HLJtYLTFl
PEjXgIsXLw45eN53Op2mE9mDtocQ9x/2heTHDh8+PPQY0O9OiOzDNRDeGnFc
tB7nZveqZp5zPuoRyMej/sNn6PgM03vZc7Oy9+ueIjkl+HHk0qE16c1G/j6e
HTXAeI7UfdKjGI1HTiGa0OfNognJP6bOTD3hhRC1Hfa37Ms5j2d+JX0FpPWE
yD5c65EbhQ9fUlISah+rOxs3riX150M/4o0R+3z55ZeDtsIfSzezqzrxuTj/
La5jdc+O58ebRLdRG4Fn6TFZ+hXzPujVTK4dOtTzBOPn8liv345mRf+hA+MZ
vEIIUZthf4uv532UhRDZic94oLaU+CX1pGilqvYujvOj0EH4XuToUj9JXl7f
vn3DfgCtlG7GWVWJX8fz733+BK+JZ4dnSI7wokWLQl823gOxV3TeF198ETw9
9CaPqY6W9Vi35nkLIcR1PF+PflLsY+9XHwchxN3h+gmth8dFDxRimtQ/3krX
JPPUPE5K/Jc+dPRwoY8tmst7yiW9uPi5kzlvldU1+OvgGaLtqJGlBpb9DL3v
0He8f/QqMVf6GfNZvFex12ZWR7MpJ08IIf4V74NJ/Ib+U3gE2kcKkX3EXhk9
jJnVhbeHRrrVbNy47sL7K3FuRz9k5lJxiY/m83JifZeux0n8PuL7uodHXxjq
KNB2vA4xWXLsyBNhH0P/E2p68ROJs6Lt4r4nyRhtdXzF+H1rPyaEEL/AefyK
FSvC+ba0nhDZi2sqci2YZ8icMjyxynrXxrqMczp0IXlwzFnjsdQ9eB6c1y/c
qvdIHB/1+WDsM/DjeE88P3qOnuw8t+s6Ys4+OxYt6L2Kb9fzpLoenXw9IYRI
D1qP3lScd7PPF0JkJ7FuY9YDmgrvjL8r03oe86VHHvW1LJMnTw75cHh5Hiut
ijbyWQc8Dl2HniOWjDeId4fOY8Gzw9vjfry3ZK9cIYQQDxa0HvtpvD32yUKI
7CSOa6Kl6DXHQk+8dPly+G3owRYtWlheXl7Iy6OG1+dFxPWw3jsvjoN6TJY4
K7Wy1MPS247YMbl2zBvjPBFth29HHT+1F7G2S9bgym8TQogHD/k71L8x8/t2
cwyFEJnHeyURvyX3Ah3megqNhTajtp662nr16lnDhg1Db2FiqHGsNp5Jgd7z
vsX0TsY3XLNmTdB0PA9z0uhxx3XqOHgu9hfJ/D4hhBDZBftnzsPx9XwWrrSe
EFnMDd8Ob466B+ZHUFvhc0Wpr500eZK98cYboVceffjoPYw/F/tr/Na5jVkT
aEVy6ng+Zt7S145+m3h4+IboRnxEv7/3eZFPJ4QQ2Q/7e3qYsj9ntqS0nhDZ
SUV8NqWv8N/27ttrs+fOscI+vW3egvft8JHDIZY6eEiJNchrYJ26dA5ePRqN
+9PHBI1GvJffPHl+5NuRu8eMDHqf0OMO/8/jsmhAfH/XdR7v1Zx6IYTIHcib
Jk7DXKTvvvtO/UeFyFJCncWly3b0yBFbs3aNjRwz2l5p1tSeeuFZa9u5g40p
HWe9+xVZq7ZtbNDQIfZp6j7fHzhgh378McyjoCaWeC/1u2g7fDtqKrhOPQV+
oNfJog2TszLiXibSeEIIkTtwjr5t2zabNm1aqNW7V/MuhRD3Fvw88uhKx5da
w0b/tGcbPG8P/a2O/d8//Kc9/NhfrH6D56x9QWd7b+Z0W7LsQ5u3aIG98+5k
mzZjeuhbTB0uvh2eHX1QqNEgJw/fz/snq1+JEELUPPDxiNXQx57e9tJ62YWO
u7WHZO/i5N8Xzp+35cuW2ZNPPGl/e6yuPZPSdg89Wsd++6eHrM7f69rzDfOs
oFcPG1U6zoaNHmGz3p9rC5YsttVr1oT+KtTJUpdLfi6+Hbl9nOt5TDbZL1kI
IUTNgH0+edfk7XAMUGwm8yTrI1XbWPOJdV1cOxH3LeZcbOCAYnvqqaetYaNG
9sLLL9ofU1rv4cf/ao8/+5S1bt/WPlj2oW3b+ZXt/HaXHT1xwk6fO2fno7m2
6XoXqxeKEELUbMjXo28DuTzEcbTPzzzJmVbSezWbWG95nzsu+W0eO3Ys5NoR
dx0xfIQ98fe/22N161rTV1+1hk0a2ZPPP2sN8v9peanrHbt3tR27dtr5K5ft
Mt8fzhl4bjRdpj+kEEKIjIGXx8wkeqJyHW0hMg/Hf2JszAslZ149rnOTOB56
q+voO8616GfCHFnqpeiB3L9/f3v77bdDD+Tx48fbK40aWb3HH7fhI0bYoqUf
WGFxkbUp6GAFfXva4JHD7Ktdu+xCSutduVZudEZm4SxBWk8IIWov9FMgVw+9
Ry6P6nCzA7YB/XBLS0vD8Z5cK+XN5wbJ+bHulcczKvDs2L7URVAf8dlnn4X6
KPQc/fKKi4vDdXohUUdBfSwLNbOPPPywNW7S2Hr1LrQ27d62EWNGWdmX6+27
ffvs9NkzdgWP8IaXFy9CCCFqJxxzPvnkk1Cn5733pSUyi+sDtMDw4cOtefPm
oReuel3kBrFfF/cspq8dmp2cCebU4KWj7+hXzELfo4ULF4a+yMwaQ9vx+/Tz
L36bzKDt3qOHPf744/bSSy+FGRZbtmwJ99N3QwghRDqIDXKsoFc+8UJpvczj
x3U810mTJlnjxo3DTBP5etlDsr4hnZeH/qJHyubNm4OGmzlzZvDpiMeOHDnS
FixYYKtXrw65svwG8dW9t11clxHPNOP/6H76HjPrhuve61jfCyGEEOngGEEP
ZY5D5AlJ62Ue13pohY8//tjatWsX5h+oXjJzpNN2cV9hthcazWdSrFu3LvQs
JgaPrsOfZR4Fmh19hz9HfizbmHkW8VzZ5BJv7/IbMzPQfDwOTajvhRBCiFvB
8YV4ET1WyRuSP5B5XOtxLMcT6tChQ5g/7/1udVx/8CR7k7i2w1M7cOCAlZWV
hXgssyj69esXcu7QeeTCErPlfIq6C+9rl+xbXB2/Vv6uEEKI6sBxh/56zDrH
j+AYJDJLnMe/c+fOMMO+ffv2QVPIw8kMrG+2B/r71KlTId9hxYoVNnDgQCso
KLDCwsLg39EbhbnS1E7TLwUt6DFZeeZCCCEyAccvNB75elx6TEhkDtd6LGiG
9u06pvReK/v2290V+VvXrrGN0OU3awePJ6LhL0Y9dKUxbibZu7iyGC2/hzNn
zoQ+xtTD4tMxQ5aYLD4eNU1Lliyxb775pqKWwrede7Dx9Xvx20rGjYnnxrFc
/X6FEELEcIwgv5vjlvt60gWZx30k4us9evS2F19sYp9/viG1vdBubCP6IF62
WO+5BiBWSG312rVrg07xfszarr/gvima2GOq/rfHZZkTjU9H/HzAgAGp7dAj
xGVZr9TTupZ+kOvWNR6vy3amDx95gPi/XrOrbS2EECIGT4BYFPWeeEjK18s8
rtnYNtRvPvXUM1a37tM2e/Z8O3v2XOr/6LvLYeF67EURYyT3v1GjRqHekzrQ
2pbjl86jS+a4uV5Cr6GHicsSc920aVPoYTdu3LjQB6VXr16hz92iRYtCbJY+
OOjBTPxOYq8RPcrvtnPnzta0adPQe4X5GnHdrhBCCAEc6+jjSlyKOlyOI7VF
E2Qr8RyF6dNn2MMP/9keeuivNmzoaDtx/MQNfYfWuxQ8vvLya2HhOI/fhAdV
p06doPUOHTpUq7Resj42ubCO8L/wxPbv3x9yVYnBUjPLQo87clfpcYd2ol7J
ayriPneZ8M7c60Vrfv3111ZSUhJqQQYPHhxyOtGjaP3asJ2FEEJUHY4b5CGN
Hj06HNek9TJPXOdJ746XXvynPfJIXRsxfGzQHTdrvSsVcT38KXTLiy++aPXq
1QteDzHg2qLzIM6Pc13EemE+BX1O6HlCHxvinhMmTAj15/S5W7p0afgfeXfc
1/2xynL5MrE+Xevh6fEZeP9oPr4j1P6SS8j5QW3Z1kIIIaoG2o4+rmg9YlSK
4WYHHqsjh7Jt2w72p0ces3ffnZbSLWdv0nrk7bm+IQ5Jflm3bt3CTAUu8a5q
m6/H5yX+TZ8TeqGgi8hHnTJlSshV4Dp9iD/99NOwfumJx7rjMWjDbI2B+oxk
NCszDenHw3tGn9LjhbxCPkdt2M5CCCGqDnqCWBUewYYNG6T1sgTXetR/9utX
bH/9Sz2bNWuenT17vqIG97rOw8O6Evwc8i3RNh988EHI4+rSpUvQO+n8qVzg
dnl3cZyWdcU6ID8R7UOeI/l2aCD8LmpVqLWgVwrzKbgvsVzPvYu9wGxbP/Hn
PXX6tC1ctMgmpjQrug7v99vd39qw4cOCjqU/c7ZqVSGEEJmBYx0ar3///uF4
yDFTZB7XL3hOQ4cOtyeffMYWLlhsP/980k6dPBXieMRzd+z4KtRioGOoHWWm
MTWZ9H1r06ZNiPF5Dxafu5VtWqYy3K90Pcd1/wwem0Xb8BmJyZJnx+cmf436
CtYLvh29UMhji/vPVKV+IxuI+6tcSn32fT98bzPmzLbVa9fa6ZRePXbiuG3d
sd1GjBppfYuKwry163H+7PkMQgghMgvHTmK35PGT6yWtl3ni4zu1oUOGDLd6
jz9tJSXDbcKEyVZY2NcGDBiU2mZFlpf3sv3jH8+F2ho8QLYf3tbYsWNDvj6e
rdckxLopF7RA3FOaz4VeY31QQ0Q9Ebl2LNTMEr8kVkvuGp/Z9V08nyIXiXs4
f7dvr40cO9qKhwy2+R8ssrHvlFrXwh7WuNmrVqfuo/afv/tdqL9mTod6ogsh
hHBc65HHT9xLWi878GM8scYPPlhqjz5az377m/+23/72v+1Xv/qd/dd/PWx1
6tS1+vWfDTMb6LOG1+e5asuWLbO2bdva8uXLg7dFLNf/ny26x99HZX6az37F
2yQ3jfoJ+p8UFRWFXsbELMm7IycRjy/d/LH4tbLlc1cH3jO/STzbMSn9XveJ
evbQXx6xh/9ax37zh9/ZHx/9sz1e/wl79oXnrFPnTjZx0sSwraX1hBBCOB7D
7d27d+jXxd+5eEysabi3d32uyR4rLi6xN99sY106d7eBxUNSmmdiqNVA69Bn
xfPOvPcadQeNGze2vLw8e+utt0J/jh07dgQ9lAlfL/Yq3auLr/O+eW/0r8OX
pH6YXnd4zTNnzgy1Q2g7chHpk0IvGe6fjPGmm4Xhr5+L32vXeuRi9i3qa8+/
nGeF/Yus/+BB9t6Mabb4o6U2aep7NnTEcFuzdm04N8ilOL0QQoj7DxqBmA85
7OQ96TiRXVzvj3zRDvxwyPbs3msHDhyyEyd+sjNnzoW+yrF24zoaiXl3eHqP
PPKI/f73v7cWLVrYrFmzQl2C15lmQuvF2s7jkuTbkWOIDiUuSx0FuXfUyi5e
vDhcJ48U75kYNZ5lbfuOsr3wLVd9usqGjBhmO3d/a0d/OmGnU+vi4JHDtnT5
Mnt36pSw/linuRKjF0II8WDg2E/f2OLi4pDTX9uOo7nAdZ2UWq7g810NC9fL
r95cj4qfh1aqX79+WFq1ahX6rlGjQJ5bZfHNu3lfVa1z8H4haDtqB9B3zBrj
/aJN6YfCdWLO+HloP/rc8b7ROcl62dryHfV1iMZlfc1+f679fPqUXbhy2S5c
vmxHThy3DZs32brPy2z3nj03bWMhhBAC8ILw9ahhJK9LWi/7YHNcK79WsTAj
4+rV8ut/R5qKHiLk7Y0cOTJ4Yvi05Hlx+73quRL3OYnjr77EWszjycSY6ddN
vh1+3fvvvx/mUwwdOjT0iSPeTD0Fvh0xSNd1HsNOzr7I1XjsneDrkZxEYtjv
z59/vVcM890uXbRTKR28b/8+27hpY/B0fRvUlvUjhBDi9uAX4KXQowKvRceJ
3CC5ibyWAw+MnDevQb3X8bxk3p3n2bGgQej5Rv86etyh7agHpg8Kc2Wpl6XX
M+cW1MuiRam74HFxP5T4tWr7d5HP7/NQ6JeItxf659zoO4M2xgNlPprPw63t
60wIIcTNcLwgZkY+F8doHStyk1iDeT7c/diO/jru2VFHgeeEfkOP0L+Y/nb0
gGFB7+HpkW9HPYX3ufOlNs30qC6+rtFzxOEnT54cPFLfxuhrYuLMdmOWL/Ub
Wp9CCCGc+DhCDI1jhed06TiRmyQ9t9ttx6rMo/A4Kv4veXboNWL9aDu0B/W9
gwYNCsvs2bODv4S2Ix6Lx4e28/7Hcfw1V2d5PEh8vaCp0Xr0D/S5GN4fGy+e
eD21ymybXO8nKIQQ4t4QawJiaNQ6chzhWC6tV3uIa2OT+XdoNPoRk+9HPJbv
B7UT6Dku8YHpccclvhLentfIyle6d4S5aCnNTJ4FNSys53guHPUreKfkQHKu
Jp0nhBACYl+F4wPHEPpa4B8ohpu7pKt9vd3isUB0ms+kIKZPHztisMzOGzFi
RMjnXLlyZcgNI46IDiQvkFy7ZE2GuHdc77lzIfiozAbZtWtXhZb2vtl4e9Rl
eL8VzcMVQggRaz2O2RMmTAgxIOJDOl7nJrFXmy4OGy/cB33Htkc7lJWVhdgr
dZ7EZOm1iL6jRpb4IL2L6c3nfXqTzxV7g/ru3Ftcj/Pb9P6C8faNZwT7+pfW
E0IIAX68IIZLPj2zpzwXSOQe7vP4MT+eTcEl/hvbl5wutNuCBQtC/JX+LMRi
S0tLQ87mqlWrQh0Fef7pZspWxTcU95bqrnttAyGEEI73c2AO7tSpU8OxXceJ
3CTWeuRcsl3J7SKnn1wucuy4xKuj9wleLjlgzFrYtm1biAOSr4l3h+fnmlEI
IYQQuYn7AHg9xO+I1cnXyx6SPk2ybjWukcV78zrZzZs3B91O35MePXqEuRlo
O7YxNRQsxG3plcJj8PvQdujD0LctigcKIYQQIndxvUBMj/lUzEmLZ6uKzJKc
T+FzKdB11GWy3fbs2RN6EqPjqI8l365nz57Wt2/f4NtRX0EtBbrO51Ek56Td
ahFCCCFE7uJagtrL6dOnh9la6Agd57ODWOuh8fBc6WtHzJXtNWDAgODZFRQU
hFnGxGjpZcz/vbddmKV1w6tTLzshhBCi9hDX8NFnBX1Arw35eveGqnhmrOLy
azdm27ItIg8PjUaclT445NQxVwx9h1dHDQ09jKmtYF4WuXZ4fJ5n5/6fX/f5
FIrJCiGEELWHWOsxF40YINoiju+JOyfuUZxcLl+5ahcupbRYSoedp+/Jzydt
157vbPPW7bZt+w7bsmVL0HbUx9L/BF1HfBbPbvv27UHXoc+9p126+RP++orJ
CiGEELUT13r4PdRq0luP3C/v0SFdcPdUaLsox+7YseP23b79VvblBlu/ebOt
Kfvcps6abYX9iq17YR8bM258iMUuW7Ys5E/itRKPpS8Oj3d9p+0jhBBVR+e9
ojbivg/aAY1HXzWfpakY7i/E+4Z03lm6/QZ/s17xS5k/gW4j3jpt2rTUMt1m
z33fZsyZZ0uXr7Q5CxZZ/8FDbdKUabZi1WrbtXt3eBy5efE8Co/DxtunKtso
3XvVvFQhRG0j7v+ufZ+oLbh2ca1H/eZ3332nWaY3SNbA+ozYeBZYnBeH58Zc
iZ07d4Y4K9qOegnqYel9MmbMmDCHjlj5F19usH3fH7Dde/fbgiUfWet2HVJa
b7p9f+Cgnb9wwS5dulzx3Ol6rFRH6/kMLbYttTfMOGOuLZ4h/Vni1xBCiJpK
PONH+ztRW4hjuMxHoL8u8+1dy9R2klqPPEbisNQ/MAOWmCrrC92EfqNmAl1X
WFgYamOZIzt//nz78ssvw+xYep6QY3cm9fiTp8/Y1q92Wp8BA+0feQ3tL4/V
sxcbNbHR40ptw8ZNdvTYsfBadzuXmPeOnqN+o6ioyJ577jl75ZVXrE+fPmFG
Bu+dfizSekKImo6fn7MvV52aqC24luF7j+dDvh79PGpTveatcjd8BinaDl3H
XHm8MPrVjR07Nmi5/v37B303b9684JfR5+6rr74KNS7Ew/HT/DzSY7Dsa86e
P2+frPnMnnkhz/5St571LR5kY9+ZZPnN3rDXm7cIGpE+OHd6/umfidfHy2O2
LR4jdR74jWxntjk+I9td57lCiJpOHJ+pLcc4ITxvi/gjs0/p4+G1GTXB50mX
o5aMh8a9SFz3ou3IlcOL+/TTT+2dd94Js2KJcbtm4m96T9OnhvuhqeJcOvcC
/fVc7/n/Tp85YwsWLbaXG71iT9d/1vr262c7vv7axqS2wfMNGlivwsKgx6rr
r8ZxeXxE8gTx75iLxiwNZqCRA8h7ZX4adb18Pu+pKIQQNRXl64naiPtWHOc3
bNgQ+vLS68P97Vz/LSS1Xlzb4Dl26B50GrqIHnX4aaNHjw7zxNC+nTt3tvbt
24dcu/Xr1wf9hcfneulO1xOx3ClTplq7du2sbdu2Vr9+/dBjBa2NPkNjMpe4
qs8f98/hs6HpZs2aFfIEqQ1xLRprXbazf2a+A0IIIYSoWbjfhG5BxxDfo64g
F3p6VGe2l/t11E6g6aifoHYCT464K/XH+HW9e/cOfh15d6F+4osvgvZFfxFP
9ZrYZD1sdfWex1bJlSMGTN+8J598MuTQ0VuF9xr3QK7Kc7vO43HkEJJ7ie9I
PDl+rljroe/4jHh+3Ee9CIQQQoiaQxzX5DhPbQY+EL5VttdlJnugJPsUx3FY
PDiPxaJ9iGfi21E7MWLEiNCjGG1Hvh3eJn4YdRc+V8x1XazvkvHYO9F6PBf6
EV1GHmCnTp0sPz8/1EkkP09VtR7ajcejW+nBTD5eZdqU68Rw0boLFy4MPqNr
wurU+AohhBAiO4nzulwj4AV5z5Vs9fWSfUdc26FT0C54dtQiEJeklx05dnwu
r6EgLrt06dJQQ8FnJU7qM2OTPeeq6hve6edwrY0upc7jxRdftLKysn+ZdVEV
eAw6lefp0KFDeB62q2u9uD7E69Coz2Vd+Kw1ak7Q+pqRJ4QQQtQM4nw9YpVo
IrRSNvp6ybw7PDtiqxs3bqzwpqgpRdsRi544cWLIf2OWLPlq5KXh76HtiJ9m
k3/F+p86dao1bNgwaC90WHV9Qj4PcekuXbqEOPThw4fD8/jCZ8bjJEa/atWq
sG6IXb/55pvBTyRvEC2M/4n2zPQ6EUIIIcTd43WoaA10Al4Y8xrcB7pfJL2z
dHWr7jni1eE/4VkR62SWG/oOH4o4JfHY6dOnB5330UcfBc2KN0VeHv6Uf5a4
D3Kcj5gNWo/38vnnnwe9hRdZXa3ldRbkXFJHgtZD05H7h3anxpptS8y6oKDA
OnbsaN27dw/3JZaNVuY+npfI+sn0OhFCCCHE3RPXZhDTpGcc3tf97K8X59jF
daPuP6Fz8N6Ir+LJ4c8NHTrUevXqFWpK0Xb0PEHfofnQfmhB8s3QrEkNV50a
jkzCzFs+I/W/eJbVhW1G7t+gQYOCT9esWbOQA0gdMUu3bt3Ccy9evDj0XkHb
E7vF83RNnI3rRQghhBB3jms94nsrVqywnj17Bg1wP/tMJnvdea9i/Cfih3Pn
zg1+He8FrUJMknkP9ICjdoK8QnQR9RNxLlqug2eJ1hs4cGDw1qqDr0+0LtqX
dfj2229b69atQ57i8uXLw/r1+gu2N+uQuDex3mzNzRRCCCHE3eEagTgpeWJo
K/SU54vd7vgf18ImPaG4fiJZS4GPyEwJZofR74OYI5qOmgK8O+pImeVAPJY4
JD6Xe3bpamJzvf856wsvE68SvYfv5vqrqp8tXsesqwMHDgT9Tq8+dHEcx8a7
pQ4DX9T7BMb9pOXrCSGEEDWDuM6B+QnESvGXqtrrwx/vPmCs57xXMTWu1ASg
PfAMmctK7zpijV27drUePXqEPDLqQuh3R14eMVn0SqxzKtOSNUGX8P7RXKtX
rw49/vDhWHfV0bHJ2hW8QdYps3ndu+N2tgW5e/SZwQPkddCC5DiyjbKxLkcI
IYQQd4b7ehzr0V/k6+G3uc9TFa0X94FDn7luoNaAek/8uWHDhoU4LNqOfsH0
uCN+iG9HXz/0h+fb5bpHd6eg9agtIfbKtvAeMNVdH6712A70an733XeDb+v+
LfUb5ECiuVnn6ED6DuLp8vpxzqMQQgghchvXahzz6cGB13PkyNGbfD0O+b/4
aL/UVeAHnTx5yn788bDt2L4jpR0+s/ffxy96xwYPLgl5YkOGDA397KgtJZaI
znBtR46e9yqubt/gmgjrkxkWxHDJt2P9uHdZHVzreZ0GMXL386i3pT4DDYim
J1ZMrUujRo2sSZMm4TsgrSeEEELUHFzDeQx33rz37eTPp6z8Knqu3K5cTmm6
C79oun17v0/puq9tzerPbPbsuTZixCgbUjLMBgwYZMUDBlv3br1szOixKS2x
3Hbu/CZ4RsRw47hgMvaqus/roHvxOdHIzC9hvd2J1vPnwlOlNzP9Bsl5JG77
1ltvhXg5epvZaeRGtmrVytq0aRP6vaA1k/1ohBBCCJG7uK+HFqD/xvz5C+30
qTN29vRZO3jwkG3atNUWL/7Qxo17x/r06W+dO3WzNm+1t7fbdrSePfrYqJFj
bfGipfbllxvt22+/sz179tmJEz/Z5UuX7Vr5dU9Q3B6fTYvPRj9j9Bk+3J3W
neDjUa9MPJheycTNX3rppdBPj9466Eh62ngP6qZNm4a6Z8/VrCl5kEIIIURt
obK5X96vGJ+HPiczZsyysrL1Vjp+orV8s43l5TWyfzbMt86d6c02waZNm2kf
pLTf5s3b7NChwzfisPTGoz6D3P9yK796rWJJvmZV3tPd6ItbPT6bdYtrPeqS
yZtjW9AL+k59PZ6PbUMPmzfeeMOeeeaZUPNBLz2fGULM2O/z9NNP24ABA0Jd
jDw9IYQQIrdwTVfZ/AhqAHbt2hX0xahRY61jh66pY//z1jT/DRs9erytXr3O
fvjhUEojXEjd96JdTum6q1fKg7bj73Nnzwetd/78JTtz+ly4jb8vXuT5r9xU
Txov6WK48e236tnin6Wy+yTvH3tV2QpxV3qgUDdLPQW1yHej9by3DV7d119/
XdGPMI6l0+eFOO6///u/h+3vr5nN60kIIYQQN+PHdbQE3hHxO477xAjpp0te
F71WGjTIsyZNXrP8/Net8SuvWbu2naxXz75W2Kuf9e8/2IYPG2MlJSNs2NCR
NmTIcBswoMR69+5v/YoG2vDhY2zEiLGp68VWlPq7f/9BqdtGWun40pD7T20G
veNY5s2bF3qK0F+FGgFqTskVpAaUfnDU7xLLRJ/QE4QaAvL+uGR+G7mF+FEs
1JW6TxVrWV/ieWjZrmHQxPh6zLcghosOu5/vmecmdo+2JIbLa9fWGmghhBAi
l4l74KEfmDtGnSd6gh4r9C0mZz8//1Vr2bKNvfpq85TWezX4em1at7dOHbta
QZce1rWgp3Xr2st6FxZZr170T+lpBQU9Qt5e78J+NmjQMOvbp39KH/YJ9+3e
vdA6deoc8v7pkdy8efPUc79qr7/+esgj43b+fuWVV8JtLNSD5uXlBe3BjC/m
PlAzwIwvZrhSozpq1KiQW8j7R0fSL4S8M/LQfK4GPqUv6EN0FDo39rXuNE5Z
3flr6ePUVpHL6NfR4nwGPi+fi/54sdarLAZ+q8+SvD3poeL7MQMXXY1uzmYt
LEQ2o7wHIUQm8eM63hZeGPqHnr30QKHuEm1E7JDL/ft/sG+++da+2rHTdn2z
2w78cMiOHT1uJ46fSGmP43Y8tRDno/7ieOo2lhPHuf5T8Ap/+im13PjfkSPH
Qn0HMxrw53hdXoN+ymgLak55XfTZ1q1bw8J1+r7h++H/0QuYHiHMR5sxY0ZY
xowZE+oX0H6uBfHC+BuNiKZER3p9KTHKOXPmhD5/1KKiC3kNXmvnzp2hFyD9
SVioV+C9Mk+MS/7m/fOZ8UPpTYOPmC4unS62HM+iiL3F671rflmulV/XemVl
X6Q+R+eUBh9nR48eSzzm5th3HJ/210kXE79VrDvudaM+K0JUj8ryT4QQIpPE
uXtxX7u4z8ZNGuQu9l2V5eNVNb/OvUg0EItfR2vhTzLjgVw0NBkL2nHBggWh
n5xf4l/ikaEFu3fvHvxL/MLXXnstaEQ0Iz1OqFNlfgf9nouLi0NNKn2f0ZJo
Rv7fr1+/8D/6BTJfDM2IVqZ3CbFw6hqIi3uMGR8RTejvPZ5DRj8bch6v3FjK
U8uli5ft0MEfbeWKT23Tpi039R+MtWSsI+NYdXJmXKzh4u2dvF98Xx2nhKg6
HjPht+6zBvUbEkJkK7lwPur1BpXVZSRrMOL5EWhCvDp0GXFS4th4e2i1srKy
kDvIbeQL4iniA+Ip4iGiBdF99Ctp27Zt0Iv+N7Fo4tPoRuLL1LKWlJQEH5I8
RF6D12MhBxEfkfeCTqVf4cEDh1LLYTt65LgdOXw0/L1nz97Ufa7rV+5LjTQ6
kpxF90h5PPmL5Ntxyf184b7czn1Z4vsSz0Yn40+iSWNtioaO9alfxus6nWZP
eozpNGR8v6RH6dtWiFzC9y94/h6P4Pfl52NCCJFt5IrWu5UXWFkM068n/a5Y
d8R1HF7DgvYhhw2tyD4cvYRuQnvh4+EjohGJheMfkkOI/4f+I47cokWLoAvp
ecLSpUuX4Be6x1hY2CfkNlLLUjygJPQvpKalT59+qfv1CjFp+q+gJQsKCoKv
yCXPwetwSR8VFrQn90N/ojnxJ7nkPrwWfuTAgQODbiWmjTfJgi6l/pbaGeLj
xLnxQxcvXhxi6OhVPiOxdmLvxNnRrPRuQSezcPu2bduCnqV/C/fndo5/1Hug
pXkMC8/DJbdzH9YhsXPPsWTdsp49Zo5XEuvNyr4D6fRnVe+bjGOn06OVxdGr
4lun+39l39Hb3X6rz1jV93Q3uariOqw7vpd8X5kFtHTp0vD7Qe/xG+Gckv1G
7JUnt6sQQjxocmHfX506iOrcv6rPk3xO1wneqw5diCbEPyQHkJxEtA1ax7UP
eoj479SpU610/ASbPm2mzZo110oGD09puYE2dcqM1P+X2pw5c4M3yMw6Ztdy
nVoUFnofo8eYKTx8+PCg3aixYWEmBo/Bk0R/4k/yeDQcNdDovdiHJIaNTqQW
l/oXtCk5jmhGejC3bNky3B89iS70GhluQ7+iadGjaEoex99oXZ6f+/AaaE3+
Jh7Oc/Ia/jpc+vvhEh2MpkV/kqfJe0dzrlmzJizoSvQ265ljKeucxWPdrtdj
7/dWHnAcA49zBXy7JvMtk75lcolfN47ZJ1+zqv2C0n3f4uf1c5h0ejUZ60/3
P3FnsN75/hEDoIeAe+qc5/C7JO+DGjJ++9Q+4anzPY23vRBCiNzjdsfs+Fh9
XR9equg/feHCJTt39oJdusgx/Nr1fL5Enl3y+O1xVq8v5jpLUu/EOoZYLTFc
anw5VhG/5W98NG4jToyW8toUNKt7bxyzYq+OfEV8PDQYt7uexePDu+M6/gaa
F7+D3j7EyXkMmpfeOjwHx0q8UTQsuo66amLn9AFCN1KXzbET/YmfyYKGxJdE
16Jx0b7oWbSt19+gs/FYeO/EsvFieW+8f17P9SPHa2qV+Ey8R/oAoceZDYy/
yf+5H/F9r+nhc3ltEXF5aniInbNO8SNZz2wLfEmO8Wwj9yeTPYCSOo3/E2P3
mD3bgm3Cde875LF7FrYbsXjfjrx2sv9QUudl+3ldLoDvz7bne8N3jG3GduZ3
wncYH5/zG86J8PjRgPiAfA+0/oUQIjeJ42Xp9Nm/5BsGPXfNrlz2Wo0bNTHM
Ib5SeY1Furh1/JrplnSasbLajHT5d7eKeyY1bFyHks7HSnpVyV6IHC/RR+hQ
NA66EV1F3BidRrwMPYdGxP8bNGhQ8FDwN/Ez0X7EqtGJ1OHgGbo+xMP02Dda
ksdxX/IseTzeJTqTS+7HY/FC+R9xcDxHbnPdyXNyHOe4jkdKfQ8Lz8/7YuE9
4sviUaJJee/MO8ajRZ8S+6N+aNiwYeGSz8B98Vp5Xt4zz8l7wLflffO6Ht/n
PfH+eT/cn8f5Z+N1WR+8B56XdYf3hD9KzBzNil5hYV27XkSzol2u19yfCNuC
xXUs24frfhuXrnNZ/HzC66e4zn14Pn+M17TzfFx3j9b/7/XunkPKpS9oaL89
/l98f+7jf3OdxV/P81M9R8C/s8nvb7rfVPwb53MtXLgotd3G2rat21OvdTH8
lnlNNDrnM7Nnzw7b6oUXXgjfJW6X1hNCiNymsnyotDHia7/016u46drtZ8pV
53XTvXbyvreLf1f1uaoSE78TYp3s+ZQsaAc8LRbXE1zneIo2xD/kEj/PNQ0+
I//HN/M8TF/wy3gej8Wjh7gNz47/43XyXDyn5xnGviZeIDXg6Dli5mg2tBw+
IVoLrYbng07lEq3Hdf7PJd4hz4Mf6f2I0LcsvBf3JtEQ+En4kWg3rvM+8CTx
R3k+PEnmr6D1eG3i/WhCdCAaFI3IdfQHetJj+mhGry9yjYt/igZGP/K50Kn8
j8e6lmTBa+Vv8kU9pxTt6VqX5+U1eS88J+uGPFcex33wvngs7xM9zGdBn7q+
Rze5PsbD5XOycD/WO/ml3Jf1gofMOuV5yEflcVySP8H753aek3VOzp3XZ7Gw
frmN5+E62wF9jM/Nd4HtwHeJbTRs2MiU9u9iS5css59/OhnO366VX/++ojXR
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
D+uXhtc=
     "], {{0, 269.21634795650544`}, {476.1904761904762, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{351.4999999999999, Automatic},
   ImageSizeRaw->{476.1904761904762, 269.21634795650544`},
   PlotRange->{{0, 476.1904761904762}, {0, 269.21634795650544`}}]}]], "Text",
 CellChangeTimes->{{3.874552703074622*^9, 3.8745527507856627`*^9}, 
   3.8757643654457397`*^9},
 TextAlignment->Center,ExpressionUUID->"4c11aa8b-6ed1-4156-a100-84759da9f54c"],

Cell["Position analysis: direct kinematics", "Text",
 CellChangeTimes->{{3.8757643700330815`*^9, 
  3.8757643794981112`*^9}},ExpressionUUID->"cbdc5195-5d16-4ef8-946e-\
fb7d0858a2ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mrotztrasl", "[", 
   RowBox[{"\[Alpha]_", ",", "point_"}], "]"}], ":=", GridBox[{
    {
     RowBox[{"Cos", "@", "\[Alpha]"}], 
     RowBox[{"-", 
      RowBox[{"Sin", "@", "\[Alpha]"}]}], "0", 
     RowBox[{"point", "[", 
      RowBox[{"[", "1", "]"}], "]"}]},
    {
     RowBox[{"Sin", "@", "\[Alpha]"}], 
     RowBox[{"Cos", "@", "\[Alpha]"}], "0", 
     RowBox[{"point", "[", 
      RowBox[{"[", "2", "]"}], "]"}]},
    {"0", "0", "1", 
     RowBox[{"point", "[", 
      RowBox[{"[", "3", "]"}], "]"}]},
    {"0", "0", "0", "1"}
   },
   GridBoxDividers->{
    "Columns" -> {True, {False}, True}, 
     "Rows" -> {True, {False}, True}}]}]], "Input",
 CellChangeTimes->{{3.875764381319893*^9, 3.875764459344393*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f6a6b88e-965e-4225-baa4-fe98e8241eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L1", " ", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", 
     RowBox[{"L1", " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", "h", ",", "1"}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8757644767804193`*^9, 3.8757645133029757`*^9}, {
  3.8757645521265635`*^9, 3.875764552835932*^9}, {3.875764798593053*^9, 
  3.875764800781503*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4649ad3e-d107-40e3-a3b3-9b73afda8f19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M01", "=", 
   RowBox[{"Mrotztrasl", "[", 
    RowBox[{"\[Theta]1", ",", "A"}], "]"}]}], ";", 
  RowBox[{"M01", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757645363775835`*^9, 3.875764560115431*^9}, 
   3.87576479861199*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"efb0147e-18fb-4103-a3f8-78d3c9d6463d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "0", 
      RowBox[{"L1", " ", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]},
     {
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], "0", 
      RowBox[{"L1", " ", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]},
     {"0", "0", "1", "h"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875764829781967*^9, 3.8757648588347645`*^9}, 
   3.8757681373325014`*^9, 3.8757728780212874`*^9, 3.875797588880185*^9, 
   3.8757976497379785`*^9},
 CellLabel->
  "Out[4]//MatrixForm=",ExpressionUUID->"efeb316a-305a-464f-9c92-\
e2ab2e8d4505"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"P1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L2", " ", 
      RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", 
     RowBox[{"L2", " ", 
      RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], ",", "0", ",", "1"}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8757645713564196`*^9, 3.875764593620081*^9}, {
  3.875764809665259*^9, 3.875764809665259*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0a06aa83-fd41-44f1-acdf-d261bef6becb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{
    RowBox[{"M01", ".", "P1"}], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875765942665168*^9, 3.875765956673972*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7974c677-4644-4854-9be7-8beefa541171"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M12", "=", 
   RowBox[{"Mrotztrasl", "[", 
    RowBox[{"\[Theta]2", ",", "P1"}], "]"}]}], ";", 
  RowBox[{"M12", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875764594967059*^9, 3.8757646155162163`*^9}, 
   3.875764809665259*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7518d937-8c0b-4f13-8a9e-7e8e280dcd23"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]2", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "0", 
      RowBox[{"L2", " ", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]},
     {
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]2", "]"}], "0", 
      RowBox[{"L2", " ", 
       RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875764829821107*^9, 3.875764842478367*^9}, 
   3.875768137425225*^9, 3.875772878099433*^9, 3.8757975889509726`*^9, 
   3.8757976498102217`*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"9595605a-7892-4e70-8f93-\
f4f0bf9802a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M02", "=", 
   RowBox[{
    RowBox[{"M01", ".", "M12"}], "//", "Simplify"}]}], ";", 
  RowBox[{"M02", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757647059386625`*^9, 3.875764722162267*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2aa8e1ad-62bd-488b-8a33-f4834450f5fc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "0", 
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "0", 
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
     {"0", "0", "1", "h"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875764829874784*^9, 3.8757648425279374`*^9}, 
   3.8757681374546647`*^9, 3.875772878146326*^9, 3.875797588997726*^9, 
   3.8757976498437653`*^9},
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"bbb2cfff-91de-430c-b3bb-\
8f4b513e842f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "L"}], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757646247584066`*^9, 3.8757646673492284`*^9}, 
   3.875764825218421*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"9d43b85d-2c0e-4bd8-8162-97b93475ff3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M23", "=", 
   RowBox[{"Mrotztrasl", "[", 
    RowBox[{"0", ",", "E2"}], "]"}]}], ";", 
  RowBox[{"M23", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757646702963777`*^9, 3.8757646938620477`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"dcbf5eeb-efd9-4732-836c-ca69bd3b99e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", 
      RowBox[{"-", "L"}]},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757648299494543`*^9, 3.8757648425638065`*^9}, 
   3.875768137487043*^9, 3.8757728781931653`*^9, 3.87579760518937*^9, 
   3.8757976554600105`*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"fb272c4c-d330-4a9b-aa35-\
b182f649f873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M03", "=", 
   RowBox[{"M02", ".", "M23"}]}], ";", 
  RowBox[{"M03", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875764881892985*^9, 3.875764902297821*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"fdf5ad44-cebc-428c-bc6a-cd06d1198450"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "0", 
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "0", 
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
     {"0", "0", "1", 
      RowBox[{"h", "-", "L"}]},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757648914525905`*^9, 3.8757649025680456`*^9}, 
   3.8757681375234947`*^9, 3.8757728782244167`*^9, 3.8757976053787313`*^9, 
   3.87579765564581*^9},
 CellLabel->
  "Out[11]//MatrixForm=",ExpressionUUID->"59763586-fc19-401e-8623-\
1077336d4c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EE", "=", 
   RowBox[{"M03", ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], ";", 
  RowBox[{"EE", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875764909230477*^9, 3.8757649331703377`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5eeb69e8-566e-48d5-b7a0-40d5f286b3ea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"L1", " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"L2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"L1", " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"L2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
      {
       RowBox[{"h", "-", "L"}]},
      {"1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757649223399496`*^9, 3.8757649333692017`*^9}, 
   3.875768137553651*^9, 3.8757728782712955`*^9, 3.8757976054105835`*^9, 
   3.8757976556927557`*^9},
 CellLabel->
  "Out[12]//MatrixForm=",ExpressionUUID->"c19ed9bd-ffba-4398-b275-\
249858e2558e"]
}, Open  ]],

Cell["\<\
Let us study the manipulability ellipsoids in the plane . We restrict point E \
to the first two components (EEc) and perform the analysis .\
\>", "Text",
 CellChangeTimes->{{3.8757649600608673`*^9, 
  3.875764961715826*^9}},ExpressionUUID->"4e911e9b-28fc-44eb-b214-\
fcde04775cf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EEc", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EE", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"EE", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
  RowBox[{"EEc", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757649490946045`*^9, 3.8757649747810044`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e896cdd8-adfc-4b6f-bb3a-d4bd89166a89"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"L1", " ", 
         RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"L2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"L1", " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
        RowBox[{"L2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.875764974986884*^9, 3.875768137591563*^9, 
  3.8757728783025684`*^9, 3.8757976054388103`*^9, 3.875797655749229*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"9c96689b-d059-4d65-b261-\
77098ee543d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Jac", "=", 
   RowBox[{"D", "[", 
    RowBox[{"EEc", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Jac", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757649788258734`*^9, 3.8757650123265657`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"eb3093bc-899d-4c66-bf64-0b87c96c3068"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "L1"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
       RowBox[{"L2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"-", "L2"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], 
      RowBox[{"L2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875764994437889*^9, 3.875765012484375*^9}, 
   3.8757681376261272`*^9, 3.8757728783494864`*^9, 3.8757976054493036`*^9, 
   3.8757976557941046`*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"9906a005-9d4a-4567-946d-\
35496657fd21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DetJac", "=", 
  RowBox[{
   RowBox[{"Det", "@", "Jac"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.8757650176955976`*^9, 3.875765030722477*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d655f435-9308-42dc-a02e-942e2c52b7c4"],

Cell[BoxData[
 RowBox[{"L1", " ", "L2", " ", 
  RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]], "Output",
 CellChangeTimes->{{3.8757650241839604`*^9, 3.8757650309172173`*^9}, 
   3.8757681376557226`*^9, 3.8757728783650446`*^9, 3.875797605484228*^9, 
   3.8757976558426*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"598237dd-f90d-43d3-aeba-77756538d6a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Singular configuration", "Subsection",
 CellChangeTimes->{{3.8757650339906387`*^9, 
  3.8757650404347296`*^9}},ExpressionUUID->"072d03b6-d2e3-4fc1-88b5-\
e9ab6fdf2130"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigExpand", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", "x"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"e", ".", "g", "."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8757650873941507`*^9, 3.8757650999380903`*^9}, {
  3.875765151951682*^9, 3.875765154446348*^9}, {3.875765232109412*^9, 
  3.8757652419053097`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"951aa5b2-cf37-447b-b258-0ca37984f68c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", "x", "]"}], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.875765093299406*^9, 3.875765100311145*^9}, 
   3.8757651551559935`*^9, 3.8757681376917515`*^9, 3.8757728784119177`*^9, 
   3.875797605531376*^9, 3.875797655946502*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b491fbbe-382a-4ba6-8c7e-973eed8b367a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]1Singular", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"TrigExpand", "[", 
      RowBox[{"DetJac", "==", "0"}], "]"}], ",", "\[Theta]1"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.875765042808223*^9, 3.875765080698308*^9}, 
   3.8757651610527115`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"33f30252-c707-4dee-b22f-091a5a9670a7"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.875765074926463*^9, 3.8757650810295343`*^9}, 
   3.875765161288272*^9, 3.8757681377204084`*^9, 3.875772878474849*^9, 
   3.875797605564417*^9, 3.875797655997037*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f261e8a2-2315-466f-a37c-246b1a730614"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]2Singular", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"TrigExpand", "[", 
      RowBox[{"DetJac", "==", "0"}], "]"}], ",", "\[Theta]2"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.875765179163287*^9, 3.875765181227374*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"833071df-b9b1-4410-a1f0-2c8cf67e3bde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]2", "\[Rule]", 
     TemplateBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]2", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.87576518144444*^9, 3.8757681377559614`*^9, 
  3.8757728785217433`*^9, 3.87579760563168*^9, 3.8757976560426874`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"9dadfd45-3f94-4430-9c0c-2adb5627c13d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force Ellipsoid", "Section",
 CellChangeTimes->{{3.8757650831023645`*^9, 3.8757650846869955`*^9}, {
  3.8757651901262417`*^9, 
  3.8757651908078384`*^9}},ExpressionUUID->"63b87024-5c8b-4815-a9d9-\
6eec9f321ec1"],

Cell["We take a reference robot configuration", "Text",
 CellChangeTimes->{{3.8757652463275194`*^9, 
  3.87576525584334*^9}},ExpressionUUID->"502ea415-2286-43de-b108-\
27b9c40e7d68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L1", "->", "0.3"}], ",", 
     RowBox[{"L2", "->", "0.3"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875765257968278*^9, 3.8757652682604733`*^9}, {
  3.875789930333521*^9, 3.8757899615763893`*^9}, {3.8757902938479147`*^9, 
  3.875790296784462*^9}, {3.875790333765707*^9, 3.8757903368832903`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6f344825-d47e-4aea-885e-27b548c22185"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ref", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "->", 
      FractionBox["\[Pi]", "6"]}], ",", 
     RowBox[{"\[Theta]2", "->", 
      FractionBox["\[Pi]", "3"]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875765272584219*^9, 3.875765298571692*^9}, {
  3.875765345547633*^9, 3.875765346053939*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a90b6cbc-f763-4de6-bb14-251a9d5a353b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"{", 
    RowBox[{"Fx", ",", "Fy"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875765301810609*^9, 3.8757653057355404`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9d3c4448-693b-44b9-80e3-25cbf98f0e68"],

Cell["\<\
Force ellipsoid: every point inside the force is the admissible force  that \
the robot can apply in that direction. The budget function is the norm of the \
joint forces\
\>", "Text",
 CellChangeTimes->{{3.875765562861703*^9, 
  3.8757656288469725`*^9}},ExpressionUUID->"c6d3aebe-628c-4854-a13b-\
72b649969e06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AF", "=", 
   RowBox[{
    RowBox[{"Jac", ".", 
     RowBox[{"Transpose", "[", "Jac", "]"}]}], "//", "Simplify"}]}], ";", 
  RowBox[{"AF", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757653096134596`*^9, 3.8757653600125623`*^9}, {
  3.875765403540775*^9, 3.875765404738836*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c701905e-eb59-416d-b230-471a57525c30"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["L2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L1", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"L2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["L1", "2"]}], " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"L1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}], 
         ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["L1", "2"]}], " ", 
        RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"L1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}], 
         ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["L2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L1", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"L2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], ")"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875765339108985*^9, 3.875765360359295*^9}, {
   3.875765405156105*^9, 3.8757654337005982`*^9}, 3.8757681379491987`*^9, 
   3.875772878803177*^9, {3.87578994348912*^9, 3.875789964729669*^9}, 
   3.875790310144908*^9, {3.8757903401890383`*^9, 3.875790349590831*^9}, 
   3.875797605832975*^9, 3.8757976602001753`*^9},
 CellLabel->
  "Out[22]//MatrixForm=",ExpressionUUID->"ee489d6c-0050-4fc3-b4ce-\
c67454d0f69e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fellipse", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", "F"}], ".", "AF", ".", "F"}], "-", 
    SuperscriptBox["Kf", "2"]}], "//", "Simplify", 
   RowBox[{"(*", 
    RowBox[{"Force", " ", "ellipsoid", " ", "equation"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8757656625775166`*^9, 3.875765753672175*^9}, {
  3.875766220690153*^9, 3.875766223338245*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"11f530b1-8caf-46a8-8c22-7f407baa5f8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["Kf", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["Fy", "2"], " ", 
   SuperscriptBox["L1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["Fy", "2"], " ", 
   SuperscriptBox["L2", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["Fx", "2"], " ", 
   SuperscriptBox["L1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "Fy", " ", "L1", " ", 
   RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Fy", " ", "L2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "-", 
     RowBox[{"Fx", " ", "L1", " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["Fx", "2"], " ", "L1", " ", "L2", " ", 
   RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["Fx", "2"], " ", 
   SuperscriptBox["L2", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "-", 
  RowBox[{"2", " ", "Fx", " ", "Fy", " ", 
   SuperscriptBox["L2", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", "Fx", " ", "Fy", " ", "L1", " ", "L2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.875765753948484*^9, 3.875768138128195*^9, 3.875772879147094*^9, {
   3.87578994367662*^9, 3.8757899648513994`*^9}, 3.875790310269906*^9, {
   3.8757903402983804`*^9, 3.875790349715798*^9}, 3.8757976060267515`*^9, 
   3.8757976603257875`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c6166223-5a17-4fd8-8818-0cb5d7e214a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NumericalMatF", "=", 
   RowBox[{
    RowBox[{"AF", "/.", "data"}], "/.", "ref"}]}], ";", 
  RowBox[{"NumericalMatF", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757657757791195`*^9, 3.875765819876193*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"202816a9-aa5e-49d2-93eb-a71bed3c6a7d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.2925`", 
      RowBox[{"-", "0.1169134295108992`"}]},
     {
      RowBox[{"-", "0.1169134295108992`"}], "0.06749999999999999`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757657963659344`*^9, 3.8757658201043386`*^9}, 
   3.8757681382081947`*^9, 3.875772879241329*^9, {3.87578994372368*^9, 
   3.8757899648923407`*^9}, 3.8757903103167667`*^9, {3.875790340345261*^9, 
   3.8757903497470837`*^9}, 3.875797606075723*^9, 3.875797660375174*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"87cd33a5-f3bb-4d41-8379-\
eb83085716be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigVecF", "=", 
   RowBox[{"Eigenvectors", "@", "NumericalMatF"}]}], ";", 
  RowBox[{"EigVecF", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"EigValF", "=", 
  RowBox[{"Eigenvalues", "@", "NumericalMatF"}]}]}], "Input",
 CellChangeTimes->{{3.8757657658507123`*^9, 3.8757657717265296`*^9}, {
  3.8757658243427467`*^9, 3.875765858626488*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"267c7932-1ceb-4b9c-91cd-c62d2cd0f283"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.9201563033750128`"}], "0.391551244869981`"},
     {
      RowBox[{"-", "0.391551244869981`"}], 
      RowBox[{"-", "0.9201563033750128`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757658287568784`*^9, 3.875765859030245*^9}, 
   3.875768138246112*^9, 3.87577287933509*^9, {3.875789943786731*^9, 
   3.8757899649451284`*^9}, 3.8757903103636217`*^9, {3.8757903403921623`*^9, 
   3.8757903497470837`*^9}, 3.8757976061166306`*^9, 3.875797660375174*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"384845d0-f507-491d-b6e9-\
4bb9772249a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3422498073958795`", ",", "0.01775019260412048`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8757658287568784`*^9, 3.875765859030245*^9}, 
   3.875768138246112*^9, 3.87577287933509*^9, {3.875789943786731*^9, 
   3.8757899649451284`*^9}, 3.8757903103636217`*^9, {3.8757903403921623`*^9, 
   3.8757903497470837`*^9}, 3.8757976061166306`*^9, 3.875797660390849*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"eafc5e98-6097-4373-badb-830cde519222"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plScara", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"A", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EEc", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"EEc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "/.", "data"}], "/.",
      "ref"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8757658969989977`*^9, 3.8757659237225475`*^9}, {
  3.875765961695224*^9, 3.875766006909878*^9}, {3.8757661903201895`*^9, 
  3.875766194217784*^9}, {3.875766557281641*^9, 3.875766561876402*^9}, {
  3.875773124715825*^9, 3.8757731311178083`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0d3ea1b5-e016-44cc-bee7-d83743c39f86"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0.25980762113533157`, 0.15}, {0.25980762113533157`, 
      0.44999999999999996`}}]}}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.25980762113533157`}, {0, 0.44999999999999996`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8757659687620487`*^9, 3.875766007096613*^9}, 
   3.8757661946875877`*^9, 3.8757665624579077`*^9, 3.8757681385980387`*^9, 
   3.8757728800414596`*^9, {3.875773126689509*^9, 3.8757731317268705`*^9}, {
   3.8757899438492785`*^9, 3.875789965017715*^9}, 3.8757903104261217`*^9, {
   3.8757903404546633`*^9, 3.8757903498095837`*^9}, 3.875797606478675*^9, 
   3.8757976605921264`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"46ce6ff1-1f26-4993-a32b-e151d862fc84"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"point1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875766011618707*^9, 3.875766016134652*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"af78d919-475d-4398-8e5c-0331a05cf559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"point2", "=", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Re", "[", 
      RowBox[{"EigValF", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]]], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"EigVecF", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"EigVecF", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8757660226414413`*^9, 3.875766044823628*^9}, {
   3.8757664802926855`*^9, 3.8757665094478025`*^9}, {3.875766660292652*^9, 
   3.875766660932312*^9}, 3.87576680237053*^9, {3.8757672233087125`*^9, 
   3.875767255575562*^9}, {3.87576735897598*^9, 3.875767359764942*^9}, {
   3.8757674474157267`*^9, 3.875767448199246*^9}, {3.875767722161688*^9, 
   3.875767731997193*^9}, 3.8757679871023426`*^9, {3.8757682772114496`*^9, 
   3.8757682780823455`*^9}, {3.875768310112159*^9, 3.875768311319786*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"cde62ae7-2bb9-4497-9e07-40bd1ae97b9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.5728597517734149`"}], ",", "0.6692941096571243`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.87576798737534*^9, 3.8757681387185335`*^9, 3.8757682787553825`*^9, 
   3.8757683208310614`*^9, 3.875772880432227*^9, {3.8757899438969965`*^9, 
   3.8757899650650253`*^9}, 3.8757903104730325`*^9, {3.8757903405015383`*^9, 
   3.8757903498564234`*^9}, 3.875797606840974*^9, 3.875797660654626*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"b525379a-e1e8-45cf-a86d-49aa5bf65b28"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecF1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757668041817026`*^9, 3.8757668360209465`*^9}, {
  3.8757669148385725`*^9, 3.8757669419732018`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"cf3fb780-d90c-4b93-8404-1bf83a711953"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"point3", "=", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Re", "[", 
      RowBox[{"EigValF", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]]], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"EigVecF", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"EigVecF", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8757660226414413`*^9, 3.875766044823628*^9}, {
   3.8757664802926855`*^9, 3.8757665094478025`*^9}, {3.875766660292652*^9, 
   3.875766660932312*^9}, 3.87576680237053*^9, {3.8757669536309943`*^9, 
   3.875766964185613*^9}, {3.8757672485065727`*^9, 3.8757672519185305`*^9}, {
   3.8757673691744947`*^9, 3.8757673701150627`*^9}, {3.8757675610995235`*^9, 
   3.8757675651381173`*^9}, 3.8757681871408577`*^9, {3.8757682832859535`*^9, 
   3.8757683176399155`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c56674a9-7d99-49e6-8fb4-c803279d3ab4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.9389153292264796`"}], ",", 
   RowBox[{"-", "6.906532671531095`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875768187387446*^9, 3.8757682860705495`*^9, {3.8757683188602524`*^9, 
   3.8757683230685673`*^9}, 3.875772880650982*^9, {3.8757899439471564`*^9, 
   3.875789965111923*^9}, 3.8757903105200377`*^9, {3.875790340548379*^9, 
   3.8757903499033346`*^9}, 3.875797607110572*^9, 3.87579766071113*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"5bfe13ae-22cb-4347-837f-2e021dc91cc5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecF2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757668041817026`*^9, 3.8757668360209465`*^9}, {
  3.8757669148385725`*^9, 3.875766981490039*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"ea580b8b-f2fd-443c-bcab-0d5436b735ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plContourF", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Fellipse", "/.", "data"}], "/.", "ref"}], "/.", 
       RowBox[{"Kf", "->", "1"}]}], ")"}], "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"Fx", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Fy", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ContourStyle", "->", "Blue"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "Blue", "}"}], ",", 
       RowBox[{"{", "\"\<Force\>\"", "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8757669847791567`*^9, 3.8757670154469843`*^9}, {
  3.875767091547226*^9, 3.875767094974843*^9}, {3.8757671284374228`*^9, 
  3.875767158860612*^9}, {3.8757682205839615`*^9, 3.875768223513711*^9}, {
  3.8757682553287153`*^9, 3.875768255441511*^9}, {3.875800316339574*^9, 
  3.875800344588653*^9}, {3.8758003946851826`*^9, 3.8758003948633204`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"19682b6a-5adb-4f7b-8a3f-2297ab11f74f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kG+40jfw//9f9H9M1JDN
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
            "]]}, 
          RowBox[{
            RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              RowBox[{"0.2925`", " ", 
                SuperscriptBox[
                 TagBox["Fx", HoldForm], "2"]}], "+", 
              RowBox[{"0.5196152422706631`", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.15`", " ", 
                    TagBox["Fx", HoldForm]}]}], ")"}], " ", 
                TagBox["Fy", HoldForm]}], "-", 
              RowBox[{"0.15588457268119893`", " ", 
                TagBox["Fx", HoldForm], " ", 
                TagBox["Fy", HoldForm]}], "+", 
              RowBox[{"0.0675`", " ", 
                SuperscriptBox[
                 TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]], 
         Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
           0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
            HoldForm[$CellContext`Fy] - 0.15588457268119893` 
           HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
           0.0675 HoldForm[$CellContext`Fy]^2 == 0, "Tooltip"]& ]}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{-10, 10}, {-10, 10}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Force\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.87576714655745*^9, 3.8757671593083677`*^9}, 
   3.8757672595093718`*^9, 3.8757673751146975`*^9, 3.875767571983409*^9, 
   3.8757681404674163`*^9, 3.875768225073364*^9, 3.8757682558365555`*^9, 
   3.875768287948082*^9, 3.8757683243115244`*^9, 3.8757728821209044`*^9, {
   3.875789944131711*^9, 3.8757899653307247`*^9}, 3.8757903106606083`*^9, {
   3.875790340767256*^9, 3.8757903501220846`*^9}, 3.8757976086208878`*^9, 
   3.8757976613520236`*^9, {3.875800326715042*^9, 3.8758003377985945`*^9}, 
   3.8758003961624146`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"b1e68964-7630-4561-9d0f-7d6abc62361d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force Ellipsoid", "Subsection",
 CellChangeTimes->{{3.87579927593919*^9, 
  3.8757992804562244`*^9}},ExpressionUUID->"92645707-8a41-4577-b926-\
4eac696a0651"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plEigVecF1", ",", "plEigVecF2", ",", "plContourF"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8757671680446444`*^9, 3.8757671988769145`*^9}, {
  3.875767340283325*^9, 3.875767343124586*^9}, {3.8757682365602026`*^9, 
  3.87576824169609*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"8d3d4db4-ef41-4b0c-822d-f4959c665aae"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 0.}, {-1.5728597517734149`, 
       0.6692941096571243}}]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 
       0.}, {-2.9389153292264796`, -6.906532671531095}}]}}, {{}, {}}}, {
    GraphicsComplexBox[CompressedData["
1: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
kG+40jfw//9f9H9M1JDN
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
          "]]},
        RowBox[{
          RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"0.2925`", " ", 
              SuperscriptBox[
               TagBox["Fx", HoldForm], "2"]}], "+", 
            RowBox[{"0.5196152422706631`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                  RowBox[{"0.15`", " ", 
                    TagBox["Fx", HoldForm]}]}], ")"}], " ", 
              TagBox["Fy", HoldForm]}], "-", 
            RowBox[{"0.15588457268119893`", " ", 
              TagBox["Fx", HoldForm], " ", 
              TagBox["Fy", HoldForm]}], "+", 
            RowBox[{"0.0675`", " ", 
              SuperscriptBox[
               TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]],
       Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
         0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
          HoldForm[$CellContext`Fy] - 0.15588457268119893` 
         HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
         0.0675 HoldForm[$CellContext`Fy]^2 == 0, "Tooltip"]& ]}], {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8757671788698597`*^9, 3.875767199239586*^9}, 
   3.875767260321271*^9, 3.8757673436670284`*^9, 3.875767375641853*^9, 
   3.875767573829875*^9, 3.8757681406146574`*^9, {3.875768231500725*^9, 
   3.8757682573907347`*^9}, 3.8757682894515443`*^9, 3.875768324746602*^9, 
   3.875772882293522*^9, {3.8757899441785946`*^9, 3.875789965361957*^9}, 
   3.8757903106917505`*^9, {3.875790340814002*^9, 3.8757903501689568`*^9}, 
   3.875797608699226*^9, 3.875797661508413*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"230e92fb-27b0-4cbd-a40e-4f84eab04807"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fydir", "=", 
   RowBox[{"Fxdir", "*", 
    RowBox[{"Tan", "[", 
     FractionBox["\[Pi]", "3"], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757677462122173`*^9, 3.875767781841591*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"d2f56b5b-eed5-499b-b540-ad2a29d074c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqdir", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Fellipse", "/.", "data"}], "/.", "ref"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Kf", "->", "1"}], ",", 
      RowBox[{"Fx", "->", "Fxdir"}], ",", 
      RowBox[{"Fy", "->", "Fydir"}]}], "}"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.875767783045864*^9, 3.8757678272558174`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a46053ca-72f1-4ace-a47a-176b9e125dd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "+", 
  RowBox[{"0.09000000000000005`", " ", 
   SuperscriptBox["Fxdir", "2"]}]}]], "Output",
 CellChangeTimes->{{3.8757678231445084`*^9, 3.875767827483447*^9}, 
   3.875768140664756*^9, 3.875772882358551*^9, {3.8757899442254686`*^9, 
   3.8757899654087963`*^9}, 3.8757903107386603`*^9, {3.8757903408452797`*^9, 
   3.875790350215929*^9}, 3.8757976087660904`*^9, 3.8757976615497212`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"2391bff1-41fc-4a50-93eb-6586100f413b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FxdirSol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"eqdir", "==", "0"}], ",", "Fxdir"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.875767836071452*^9, 3.8757678514035006`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"beb38a13-e9fe-459d-9cb6-fe633709c527"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fxdir", "\[Rule]", 
     RowBox[{"-", "3.3333333333333326`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Fxdir", "\[Rule]", "3.333333333333332`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8757678520504465`*^9, 3.875768140698722*^9, 3.8757728823985367`*^9, {
   3.875789944256747*^9, 3.8757899654400487`*^9}, 3.8757903107543597`*^9, {
   3.8757903408765354`*^9, 3.8757903502470717`*^9}, 3.8757976087660904`*^9, 
   3.8757976615794935`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"9e78e640-bf98-4373-b82d-95b4fdacef1b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fx1", "=", 
   RowBox[{"Fxdir", "/.", 
    RowBox[{"FxdirSol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875767857401165*^9, 3.8757678913104744`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"411c1036-8a72-4cb0-a8c4-f11ebe35bff0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fy1", "=", 
   RowBox[{"Fydir", "/.", 
    RowBox[{"FxdirSol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757678834903245`*^9, 3.8757678947375255`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"6ec47f4b-1ac6-42be-9659-34042491a637"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fx2", "=", 
   RowBox[{"Fxdir", "/.", 
    RowBox[{"FxdirSol", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875767857401165*^9, 3.8757679070396967`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"55fca6e4-6285-45e0-80e6-cde49a833b75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fy2", "=", 
   RowBox[{"Fydir", "/.", 
    RowBox[{"FxdirSol", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757678834903245`*^9, 3.8757679047131534`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"666fa375-0d62-43fc-8509-36d54a253149"],

Cell[BoxData[
 RowBox[{
  RowBox[{"point0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757679125180807`*^9, 3.8757679260598307`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"3234f1a3-ccbc-4b0f-9151-64abc6c5a3c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointF1", "=", 
   RowBox[{"{", 
    RowBox[{"Fx1", ",", "Fy1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875767929382837*^9, 3.8757679310623255`*^9}, {
  3.8757680029127607`*^9, 3.875768008726581*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"62998fb8-41ea-401b-9fef-a44ed553ae89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointF2", "=", 
   RowBox[{"{", 
    RowBox[{"Fx2", ",", "Fy2"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757680108338633`*^9, 3.87576801909301*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"e73c47b8-585c-4609-b489-a99a9a7211c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plF1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point0", ",", "pointF1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757680236741185`*^9, 3.875768045900103*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"015cf246-3d26-40f2-af93-e0e183d79dfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plF2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point0", ",", "pointF2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757680513735204`*^9, 3.875768057820451*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8d002c06-c4ab-4870-bcb7-362e6dd59c11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plContourF", ",", "plF1", ",", "plF2"}], "]"}]], "Input",
 CellChangeTimes->{{3.875768069520279*^9, 3.8757680822198763`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8b6e2867-83e0-4b1a-8cbf-7eba66197a3d"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
kG+40jfw//9f9H9M1JDN
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
          "]]},
        RowBox[{
          RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"0.2925`", " ", 
              SuperscriptBox[
               TagBox["Fx", HoldForm], "2"]}], "+", 
            RowBox[{"0.5196152422706631`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                  RowBox[{"0.15`", " ", 
                    TagBox["Fx", HoldForm]}]}], ")"}], " ", 
              TagBox["Fy", HoldForm]}], "-", 
            RowBox[{"0.15588457268119893`", " ", 
              TagBox["Fx", HoldForm], " ", 
              TagBox["Fy", HoldForm]}], "+", 
            RowBox[{"0.0675`", " ", 
              SuperscriptBox[
               TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]],
       Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
         0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
          HoldForm[$CellContext`Fy] - 0.15588457268119893` 
         HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
         0.0675 HoldForm[$CellContext`Fy]^2 == 0, 
        "Tooltip"]& ]}], {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 
       0.}, {-3.3333333333333326`, -5.773502691896256}}]}}, {{}, {}}}, {{}, \
{{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 0.}, {3.333333333333332, 
       5.7735026918962555`}}]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{535.8000000000002, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8757680825259285`*^9, 3.8757681408020816`*^9, 3.875772882603093*^9, {
   3.875789944428589*^9, 3.8757899655807066`*^9}, 3.875790310863621*^9, {
   3.8757903410330095`*^9, 3.8757903545575047`*^9}, 3.875797608882126*^9, 
   3.8757976616927805`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"96b60501-4076-4024-90a9-22af8993af93"]
}, Open  ]],

Cell["\<\
As you can see, the forces (red and green segments) are touching the edge of \
the ellipse, i . e . they
are the maximum force that can be exerted in that direction given the robot \
configuration .\
\>", "Text",
 CellChangeTimes->{{3.8757680923158007`*^9, 
  3.8757680933780537`*^9}},ExpressionUUID->"f9589cd8-fce7-4a63-8d0c-\
2ae4515f8d98"],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["Fx1", "2"], "+", 
   SuperscriptBox["Fy1", "2"]}]]], "Input",
 CellChangeTimes->{{3.875768097217139*^9, 3.8757681071942253`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"4b817dbb-e27b-4b81-8523-afcc85edc41d"],

Cell[BoxData["6.666666666666665`"], "Output",
 CellChangeTimes->{{3.875768111156164*^9, 3.87576814085054*^9}, 
   3.875772882649968*^9, {3.875789944459838*^9, 3.8757899656275463`*^9}, 
   3.8757903108949213`*^9, {3.8757903410642133`*^9, 3.87579035046817*^9}, 
   3.875797608931781*^9, 3.8757976617248435`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"c962c776-0b3d-4fd6-9ef7-e0cfd65c4005"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fellipsetrasl", "=", 
   RowBox[{"Fellipse", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fx", "->", 
       RowBox[{"(", 
        RowBox[{"Fx", "-", 
         RowBox[{"EEc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"Fy", "->", 
       RowBox[{"(", 
        RowBox[{"Fy", "-", 
         RowBox[{"EEc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8757730132590375`*^9, 3.8757730480310297`*^9}, {
  3.875773172534918*^9, 3.875773179578596*^9}, {3.87577336796344*^9, 
  3.8757733712326145`*^9}, {3.875790049784738*^9, 3.875790074161834*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"5e097abf-296c-4c14-a204-bb12d4b3b4d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecF1trasl", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"point1", "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EEc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"EEc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"point2", "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EEc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"EEc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "}"}], "/.", 
       "data"}], "/.", "ref"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757974294137383`*^9, 3.875797487793273*^9}, {
  3.87579773011438*^9, 3.8757977498271213`*^9}, {3.875797791532176*^9, 
  3.8757978093595705`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"b082c71c-94d9-40d7-83c1-1d68071b7466"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecF2trasl", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"point1", "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EEc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"EEc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"point3", "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EEc", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"EEc", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "}"}], "/.", 
       "data"}], "/.", "ref"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.87579749583399*^9, 3.875797498902034*^9}, {
  3.8757977317544794`*^9, 3.875797761452622*^9}, {3.8757977970142217`*^9, 
  3.8757978142772875`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"f34e9fb1-f195-44c8-8316-9a8e05ef366d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plContourFtrasl", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Fellipse", "/.", "data"}], "/.", "ref"}], "/.", 
         RowBox[{"Kf", "->", "1"}]}], ")"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Fellipsetrasl", "/.", "data"}], "/.", "ref"}], "/.", 
         RowBox[{"Kf", "->", "1"}]}], ")"}], "==", "0"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Fx", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Fy", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ContourStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Magenta"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8757730551111155`*^9, 3.8757731101070085`*^9}, {
   3.8757732096100473`*^9, 3.8757733220383935`*^9}, {3.8757733755509615`*^9, 
   3.875773400563307*^9}, {3.875773433363049*^9, 3.8757735049212656`*^9}, {
   3.875773540676424*^9, 3.8757735450377536`*^9}, {3.875789850858922*^9, 
   3.875789902261236*^9}, {3.8757979562903233`*^9, 3.8757979748476706`*^9}, {
   3.875798091548643*^9, 3.8757981186842537`*^9}, 3.8757982890812144`*^9, 
   3.8757984660087566`*^9, {3.875798566787699*^9, 3.8757985915458727`*^9}, {
   3.8757987194984846`*^9, 3.8757987287888193`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"b8c286cb-cc92-470e-ae07-26021225db62"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0, 0, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"0.2925`", " ", 
             SuperscriptBox[
              TagBox["Fx", HoldForm], "2"]}], "+", 
           RowBox[{"0.5196152422706631`", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.15`", " ", 
                   TagBox["Fx", HoldForm]}]}], ")"}], " ", 
             TagBox["Fy", HoldForm]}], "-", 
           RowBox[{"0.15588457268119893`", " ", 
             TagBox["Fx", HoldForm], " ", 
             TagBox["Fy", HoldForm]}], "+", 
           RowBox[{"0.0675`", " ", 
             SuperscriptBox[
              TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]],
      Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
        0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
         HoldForm[$CellContext`Fy] - 0.15588457268119893` 
        HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
        0.0675 HoldForm[$CellContext`Fy]^2 == 0, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[1, 0, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0/l/DwQAxvHvNvfct9mwuZlrSgmRokQHOugOhQgdKspdiRgdKroP5jb3
NeYew9z3fR+zmWFzjnc/vD9/wPN6PZFd+nboExQIBGJlMlOIYyrTmM4MZjKL
2cwhnrnMYz4LWMgiFrOEpSxjOQmsYCWJrGI1a1jLOtazgSQ2solkNrOFraSw
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKpXCKNdC6T
wRUyuco1rpNFNje4yS1uc4e75HDv/8GDA4EgggkhF7nJQ17ykZ8ChFKQQhSm
CEUpRnFKUJJSlKYMZSlHGOUJJ4IKVKQSkURRmSpUpRrVqUFNalGbaOpQl3rU
pwExNOQBHqQRD/EwjXmEJjSlGY/SnBY8Rkse5wla0ZoneYo2PE1b2vEMz/Ic
z9OeDnTkBV7kJV6mE515hVd5jdd5gzd5i7fpQle68Q7v0p0e9OQ9etGb9+lD
X/rxAR/yER/Tn0/4lM8YwEA+5wsGMZghDGUYwxnBl3zF14zkG0Yxmm8Zw1hi
Gcd4vuN7fuBHJvATP/MLE5nEr/zG7/zBn/zF3/zDv/zHZKYQx1SmMZ0ZzGQW
s5lDPHOZx3wWsJBFLGYJS1nGchJYwUoSWcVq1rCWdaxnA0lsZBPJbGYLW0lh
G9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEVSuUQa6Vwm
gytkcpVrXCeLbG5wk1vc5g53yeEegRD/J5gQcpGbPOQlH/kpQCgFKURhilCU
YhSnBCUpRWnKUJZyhFGecCKoQEUqEUkUlalCVapRnRrUpBa1iaYOdalHfRoQ
w32fNdRY
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"0.2925`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.25980762113533157`"}], "+", 
                  TagBox["Fx", HoldForm]}], ")"}], "2"]}], "+", 
           RowBox[{"0.5196152422706631`", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.15`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.25980762113533157`"}], "+", 
                    TagBox["Fx", HoldForm]}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "0.44999999999999996`"}], "+", 
                 TagBox["Fy", HoldForm]}], ")"}]}], "-", 
           RowBox[{"0.15588457268119893`", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "0.25980762113533157`"}], "+", 
                 TagBox["Fx", HoldForm]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "0.44999999999999996`"}], "+", 
                 TagBox["Fy", HoldForm]}], ")"}]}], "+", 
           RowBox[{"0.0675`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.44999999999999996`"}], "+", 
                  TagBox["Fy", HoldForm]}], ")"}], "2"]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, -1. + 
        0.2925 (-0.25980762113533157` + HoldForm[$CellContext`Fx])^2 + 
        0.5196152422706631 (0. - 
          0.15 (-0.25980762113533157` + 
           HoldForm[$CellContext`Fx])) (-0.44999999999999996` + 
          HoldForm[$CellContext`Fy]) - 
        0.15588457268119893` (-0.25980762113533157` + 
         HoldForm[$CellContext`Fx]) (-0.44999999999999996` + 
         HoldForm[$CellContext`Fy]) + 
        0.0675 (-0.44999999999999996` + HoldForm[$CellContext`Fy])^2 == 0, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.875798466897893*^9, {3.8757985788996744`*^9, 3.875798593709613*^9}, {
   3.8757987235142546`*^9, 3.8757987295916843`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"90e8d847-19f5-466a-a726-6c1dad45f25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "plEigVecF1trasl", ",", "plEigVecF2trasl", ",", "plContourFtrasl", ",", 
   "plContourF", ",", "plScara", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8757731127717257`*^9, 3.875773142394478*^9}, {
  3.875797548318671*^9, 3.875797572258481*^9}, {3.8757976801406183`*^9, 
  3.8757977088317156`*^9}, {3.875797780883013*^9, 3.8757977850090466`*^9}, {
  3.87579788197303*^9, 3.875797908619294*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"1e8669f8-f515-47f8-9863-9c04cb53a912"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0.25980762113533157`, 
       0.44999999999999996`}, {-1.3130521306380833`, 
       1.1192941096571243`}}]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0.25980762113533157`, 
       0.44999999999999996`}, {-2.679107708091148, -6.456532671531095}}]}}, \
{{}, {}}}, {GraphicsComplexBox[CompressedData["
1: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
LnutERbE///3jP8DfG3LnQ==
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[1, 0, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1WV7EAQUBeBtdNdGMxgdI0eO7q4Bg40esY0a3TU2mk1B6VBSSQUFA2xJ
BQMUFBTsBJNQ8t3Dh/fcX3DODYtLihoXGBAQkC4ybhCZyEwWspKN7OQgJ7nI
TR7yko/8FKAghQgmhMIUoSjFKE4JSlKKUEpThjDKUo7yVKAilahMFapSjXCq
U4Oa1KI2dYigLvWoTwMa0ohIGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50
ozs96EkUvehNH6LpSz9iiKU/AxjIIAYzhKHEMYzhjGAk8SSQyChGM4axjCOJ
8UxgIpOYzBSmMo3pzGAms5jNHOYyj/kks4AUUlnIIhazhKUsYzkrSCOdJ3iS
laziKZ5mNWtYyzrWs4GNbGIzW3iGZ9nKNrazg53s4jmeZzd72Ms+9nOAF3iR
gxziJV7mMEd4hVd5jdc5yjHe4E3e4m3e4V3e432Oc4KTnOI0Z/iADznLOT7i
Yz7hU85zgc/4nItc4gu+5DJX+Iqvuco1vuFbvuN7fuBHfuJnfuFXfuN3rnOD
P/iTv/ibf/iXm9ziNnf4j/+5yz3u84CHZJQ/kCAykZksZCUb2clBTnKRmzzk
JR/5KUBBChFMCIUpQlGKUZwSlKQUoZSmDGGUpRzlqUBFKlGZKlSlGuFUpwY1
qUVt6hBBXepRnwY0pBGRNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd6
0JMoetGbPkTTl37EEEt/BjCQQQxmCEOJYxjDGcFI4kkgkVGMZgxjyRjvJMYz
gYlMYjJTmMo0pjODmcxiNnOYyzzmk8wCUkhlIYtYzBKWsozlrCAt8PHfeAQt
can7
          "]]},
        RowBox[{
          RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"0.2925`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.25980762113533157`"}], "+", 
                   TagBox["Fx", HoldForm]}], ")"}], "2"]}], "+", 
            RowBox[{"0.5196152422706631`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                  RowBox[{"0.15`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.25980762113533157`"}], "+", 
                    TagBox["Fx", HoldForm]}], ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.44999999999999996`"}], "+", 
                  TagBox["Fy", HoldForm]}], ")"}]}], "-", 
            RowBox[{"0.15588457268119893`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.25980762113533157`"}], "+", 
                  TagBox["Fx", HoldForm]}], ")"}], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.44999999999999996`"}], "+", 
                  TagBox["Fy", HoldForm]}], ")"}]}], "+", 
            RowBox[{"0.0675`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.44999999999999996`"}], "+", 
                   TagBox["Fy", HoldForm]}], ")"}], "2"]}]}], "\[Equal]", 
          "0"}]],
       Annotation[#, -1. + 
         0.2925 (-0.25980762113533157` + HoldForm[$CellContext`Fx])^2 + 
         0.5196152422706631 (0. - 
           0.15 (-0.25980762113533157` + 
            HoldForm[$CellContext`Fx])) (-0.44999999999999996` + 
           HoldForm[$CellContext`Fy]) - 
         0.15588457268119893` (-0.25980762113533157` + 
          HoldForm[$CellContext`Fx]) (-0.44999999999999996` + 
          HoldForm[$CellContext`Fy]) + 
         0.0675 (-0.44999999999999996` + HoldForm[$CellContext`Fy])^2 == 0, 
        "Tooltip"]& ]}], {}}, {GraphicsComplexBox[CompressedData["
1:eJxd2Xdczfv/APDTaZzOUdIeRxTZ41rXivt+WdeIMuLKysiMKyOV0SQzo4ki
GjLKCKmuvF9dFFeyQioZRQolRdH65bzO53wfj1//fB51zunz/rze79d4lvXi
tdOXikUiUZyaSPTrWlZQdWznwDKuLvr1pQHHd35M0jYu475atzKWtdWAc2sK
U9YUvuex7dvzut4asN7KLX8SK+XFKb9e0IQuObUTK7uW8Nm3TxZOqdSE0h65
06znv+Hpis9pwchgm4nBNm/4j15tE53rtGDF1z2n67YUc8cF+t+8H0jgQtaa
qMgjRTz819smakO04nPPuLP1TBh2VgoTkiO8BqQ841oubbUGJUvBU7R6Yv/Y
Z3zdr7elSCHxvU9a/aJn3GHyYl1ZlhR2hM2N1x3/kE9W3LcNVL2a+VOnMYdv
GDZvZFRgG9ip+P1Z3LG9UffQsTpQ4CJeOrLtLd791+2DdcAyyijztloa16k8
Ov2vObpgwRa91m08xzUU8WkLiosof4Tu30tDE+60hanjnTeNKohmM+p9Z4v7
6sHk8yPi8MJp9koRHz0Yu+LOyFMjM5heU5LW417tQNY3Arc+vMWK8jsuaevd
DmqumIdlmT1idor16kPD6hM/pV2fsNmjP2z/4KwPDygebOGoZuNr2frQOeNg
yZ2E5yxV8XN96Ls+76iktpC9Tp0eyMEAeNH+8L0/i1lXxfMYwEyKP2szwdx1
eJkBhJVl3bi46i379CL05kIrQ5hSkWx6YVAJC1XE3xBu0n4zbv8881ijIXy2
+r1Av+w9O3Y3dMveZkPoZ7RFL6byPRMr4mAEejk7rEealbF7djM/H5EYgUlh
xtxNXyqYm2J/jCB+6I2N2hEfmd/8SwFjnhlBP8W6PjG/ey2PitWNQX+60caT
mlWMzpMxBOtt6BLa9wsLMp3jMvicMXidkaRlBnxhYb/Wd9cYHBTPU83MevX+
a4zIBFxa8myuuFQzicfQx7uNTKDCpL3m+ZBqRvtvAj0V9/vK4taVp9p5mcBv
vx2+53T8K/ML/ONZw1YTCFsZ3Tfyy1dmOSHAPzTCBJ6sGFi2IruGpSniYAJa
iuesZTFjU1rmVJrAnOi8TbFdvrHp1i//fD3BFLY0MKcXlt+V8TaFDMXnvjOH
7ztHZt83hdBu0/+wz6xjHTa5uiXqmUHfZpHGh+B6ZbzNYKMiTj/Ym00TQ8ce
N4O8Y09Sbd1/slUPhn5e/tAMSnSNfxYNaFDG21z5PI3sy7y0/poLzMHuUHLD
OMcmtuJu5ZB5geYwXLRkYZh+szL+5vBGEdcWdrbd+czPMgs49GX9yLc9RGCf
eGDDwEEWIEtvdrl2WgQUfwuguKmBa+JA9+0xFnBzypAtD7LV4NAg+cWaxxZA
eSKG9y/jmxOt5dAy2OOuWbgYFsqTN53tJIc1Jy6POxYlVv4eOVBeq8O5vMCF
02bKIbkxZsTEHerwzfDJ2c+L5NA+/1DT6wZ1UNQfXzkIdchtU5Cd2E8OfQst
O1UGaoCNb0789wg5iM/4ujcaakLO+9KAg+flINShNqN/vg27Jof/HkVUPbuo
CWMXZiW+TJNDTKzkwV/RWnB+V/W/izPkINQltxj/HzNS5ZCwedsz8zESGLtc
lhCRIIfIpoF3ZqRKYETBw2maIXLQWdX1uGOtRLU+oU5deWQQEr5EDvpzHMI+
7tEGaVLCf+7j5HBc51Ts4tvaquenuiGFovFRJYvU5JBr22jSuY8UNo/Otkx5
ZQF3LyVt1twvhWS7r3nW/hZw7Wi3LQtjpKr9SPRZ/Ztzax1s3DXhuudyCxDq
XuzG0v2Wf1nA9sESQydtGfzUdoajr8wh/03UhlgTGQj7X5m7wf7VMBlcWjR7
m5N76/mYuvrdfnsZLE8v+OeFnTkY5XpckznLQDhf5kMkIr5FBiumr5sbfs4M
+l84quO5RwbCeb21uXPtzCgZPDx8Z7mWphlssM5bfeO4DIL90g0GPjWFmd/x
1KZoGQj5EBcWfMPgjAweT5rovNvRFDbcxP19Elpfn6lrZGVhCinOT45fj5GB
kG9T4k+FZp6SwXCPqHk7okygZvFyfZOTMqjvob506jITeNohbcWtCBkI+b3L
tjQ9LlwGFcs0/CNfGsPRSO39kw/KYEhyQ+qLa8bQ1bbTjT5+MhDqy8aOTb6F
XjJY3+TkMdfMGEot/0he4SGDOOOew9x0jWFv79DSxoVC/IzAWsMa7GbKwDTb
b3vsciO4U+gjWzVVBn19XeyzJxtB+/a6/W4PFeJnBKvvns582FsGGlLJLM3b
hjDAcEmjl1wG7hD9YsMWQ6jcc8EuSyrE0xByut3C9EIpOFaZ5abGGUBJUnW+
6KkUhPrdpkunP9s/koJT3LzU7jsMVPs/TOP6dNHvBpCmb7/vcIQUhH4gvRo2
IW6BFHy6XC1MmqoPgZ2bepVPk4LQX4ZkjZqYOkIK5yUVKb5l7WDixDrboBJt
CIgLD/S3agfb3hyxW5mkDUL/6jpYN6ncSxtC9W9Z3O7XFtRsB/WzXKYNR8qN
FktKdFX5kPJPyYuo+bqt/fzYrRxTbRD66Z6ogkcheRKYbREi7XykDcwpWJq/
9oAE9CeMOvBylQxS1CtzQxZIVM/l37TZMBIkcMbOVP9867pLTs+bO18kUd1H
yN/ai6OrIm9IYENy6irnBC1Q69Es3qongaK+7vKXR7VU77saYmxXtv1/V/HZ
NWlDnbQgfHNh/scqTZiH06Z36q+lqiN/3w5vXybRAvvTY48GPtGA6cGvXJZU
a4JH4brdiQEacLBNWvaqbE1VnRI+N+jbuMm777XWvfNb7qQ6a0L6tO1Dxp8Q
Q88RBVlNczVVddM9eOOby46awG2O9PzTSwy2BRoOXmUaqrorf++d3SdRAwYl
xvu5eIqg8nm33Y83aKjq+PEtFVWuahqwEJZrWIc1sjHzUrt8aV2H0Bd815vb
X2z9vp+L864PBxuZsM5Hp0aIffY1skLHgz6TA9RVfSczN6Q4YrQ6jH54+cfI
WfVs+LIrXawk6qo+Jqx7Sa3f8RSbWjarNz83JUgMZ4adqv4ube2L/xrEp+8V
q/pkSRfjojm7xLAlTXNt5081TGpSOqaPlljVtxvvJWzUau0nr0eOKJ3Bq1jK
i642mf5qqrlAiIPJ5VTfne4fmMeGAXsCJGpgXB6bfNqhjK3PXutxukmkmlPO
rIwfsqtMBEPuFbuNK3vHJn+cVhO0TqSaew4/zhg8xVYEq131J4V3KWZqzbWJ
eg9bmDBXCXF9/CI4YWDOY7Z36oO462XNLPxEritrc4/pJXw7HHKxmZXR3Mjc
D55Yv314M2vrXvr6SkA6mxE8o8bSv4kJc6GwD3sylh9p8LnJV95fbDPhSAM7
7G2ZsrLuMR+e5mLv3L2BCXNutfr72nEOP9lO/33um8te8TzJ9AiDmh+sqWJO
lOjYGy7sU1LoDJlbzlt+/Xnz+D8sfjDbZa6uA2Pe8esduj0clVfPhDn9xc6F
AbdH1bPSk+8cLE+X835rlq39OLieDZy09fKUwnJ+2Fit9MOROmZG8ebCPt8z
8LJ9qv2F2xY+PJTo+51ltpjbPLr7hc+Pzu+weO53Nob2j8//2nuX5Y9vLFb3
icdbra/c3ftvg2SDb+xny6+vGu4UdnDrnbRaNoWuXDgXOw9PGhfr9p23+w+G
WufWsEt0X542+XLH/gk1rNmqe8SIQXU8N/FVrG7dV9ZvV7h+eVI9Xyr1vTrL
4ytbQXHgMz9pGKj3a53/qi7NzQ9s5CtX1GcE96xmHSjuvHhv28Wh3atZ0uit
I+3CG7lw7hZ8Yk5zohv52k8V/sODqthT2neet/TSg8V7K1lojHe+9e8irF/k
OepMyCf2J51DLHL27tzmQQW7bz8lzstajI73j7m5NJezTpQXaHSnZ8n3oDK2
ssenK/OfqKNniuss59/KWJMiHuoonNO+AxaNru6lgb+Tl9hU8hL6TPU0mGTw
hl2heoXCubw6Q9O24owUV5F/WPMShX9Qs+zo23+jnzFXqpeo9A9T+gf7v1Z4
h7mSd1A4txPJO6i7VOEd5fp18BJ5h2mSd1ALFN5hzYr166JwrsXkHew3TuEd
Ppm8gxuTFN7hL6hfoDN5hyu9g7f7KLzD88k7mE/e4ROoH2EBeYc7kndQyIvf
ug/++/NNfTQi3/CX5Bs8Q77hNtQfUfClFvkGt5NveDn5BoF8w4Op36KQJ/+Q
b7CAfMOPkG/QinzDFY/fYojtyDc8h3yDDQUK3/DVNB9gUU2S37KTH7nRMsN/
6/KMUMirbeQbFJFveAHNH7iTfMN3k29QyKs5YxKyHrQYY1zv4s5LD1cr42OC
ncgr3Ju8gjvIK9ycvIJ3yCs8heYnFPIwmryCDuQV7kBewXXkFWX8TFHIQzvy
Cu4lr3A5eQV7kFeU8TNDIQ9fklfwPnmFLyevYDF5hdO5MUchLz+TV/AP8gpf
Sl7B0xbqWVaTmvkamldxN/kE7cgnqE4+QYqfBQp5uYx8ghnkEwwin6CQl2/J
JxiRMuuKzXExUjzleJb8gV/JHyjk6aW5x0as9pGjDXkDO5E3UIO8gUpvYD71
e5SRNxDJGziavIFx5A1UegOFvP52T+LfsfX1w+QNVHoDI8gbOIy8gXrkDVQs
q3U9B2nuwcvkDdQlb6AWeQOjyRuq56O81cZi8gbmkDfQk7yBxeQNPEHeQKur
2d3kcVJVfC+SN1DpDRTqzMbG94bWsy2weXDA6soyKSqWZWCBu8gf2Ej+wMoT
o8c+by9DYT/ryB+YQP7AkeQPXEn+wLcVTUPLV8hQOC8UXxlq7nxkFF1lhkMG
/OVr5SPDHw5H5OOTzPD02LazXvvJcJFd3t5tR81Q6RMUzmcW+QQfk09wE/kE
95FPUOdtSun6eBkK5z+efIJ55BMsdnP6dum0cv2DTXEjeQU7klfwCnkFhXxz
IK+g0itYS17BavIKNgWEbZtyTIZCPgeSV/ADeQUPk1ewP3kFlV5BoV54kFdQ
6RV8R17BY+QVDCKvoFCPOpJX0IC8glnkFexDXkFL8goK9U3pFWzWVngFB5FX
cBN5BZVeQaF+Tpka4uUtkqF1xRydGTaGOH5dQuGsIikahO4p1Io3wLfkFxTq
s4z8gjPJL+hVedb0dqpUGV8D1fmqXuNhPqy/Aaplrf1wIEqKrvXeXiEf9PHb
ymD3o4elynjrY+cjl8ZFBksxOCc/ZspdfezWddTNGUukWLHaucMse33cQd5B
ob8ovYNK72D74AlnbmsL570dTiD/oDf5B/u8yr+TcF0bhX6m9A8q/YNxgcMq
a9Zoo9AfW4YrPIQHyEOqfI0kD6HSQyj0253kIXQgD6HSQ9iOPIRXyEOquPiQ
h1rzVeEhfEMeUt1HqC+vyUPoRh7C+u4KD2EBeUj1PqWDVNeWMwoPYRB5CJ3I
Q6o650oewnHkIVR6CDeRhzCIPKSqo8LnOpGHcCJ5CC+Rh7A7eUhVpzeSh/AG
eQif2KTvsy7SUNX5R5kNNQvVNPB2zm6dNmGN3Oe8ZMQ7kYaqryw49CA6rvX7
eV1rSlsONnJhHWHfvSMv7GvkGeQb7E++4UPIN6q+J6xjLPmGpxYsWOsdJMbc
omWrwqS1PJp8o+qr/nGeNdt3iTE9JeeYx6caXnlogYVfbzGeFe2b3+lLNdci
76j6ej15B2+Qd/gV8o5qTlA9Z7LCO9ydvINfPii8w93IO6q55Sx5B4eRd3gY
+Qa7k294Y5PCN1yYo4Q5dyH5hm8n3/B25BsuJd9w4e/iUreYH8ia+aS/xdO2
PU/nqwZ/zzeRN3NHLc9uop5XudXH+MjdQU1cmAs9Zy4w1RzdxKv2+jl518Wr
5vCPehMutdG5xa5mOs6oXN3IhTl0MXmIF5GHWMdRfayrhzVwYe5VeojvIA+x
NvMWDbBs+5MLnrtPPuIdPyp8pHLBe/IRSyEPcWHuXlp7MnLN7/W815YVvmsO
lLMQ8g8XvCmcgzLyDxtE/uGPyT/MifzzP0eQf3gM+YdNVzpngdI9wjk5Qd5h
MvKOyln743Q88PNXru17szQyrp45k29UzlP6hit9w1zIN1xw5TPyDc8g36hc
5km+YUvIN1xw7S3yDY8i34Bj3e7okwWfuOBs4Rxm999he3WSGuSSd/hT8g4Y
kG+40jfw//9f9H9M1JDN
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
          "]]},
        RowBox[{
          RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"0.2925`", " ", 
              SuperscriptBox[
               TagBox["Fx", HoldForm], "2"]}], "+", 
            RowBox[{"0.5196152422706631`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                  RowBox[{"0.15`", " ", 
                    TagBox["Fx", HoldForm]}]}], ")"}], " ", 
              TagBox["Fy", HoldForm]}], "-", 
            RowBox[{"0.15588457268119893`", " ", 
              TagBox["Fx", HoldForm], " ", 
              TagBox["Fy", HoldForm]}], "+", 
            RowBox[{"0.0675`", " ", 
              SuperscriptBox[
               TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]],
       Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
         0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
          HoldForm[$CellContext`Fy] - 0.15588457268119893` 
         HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
         0.0675 HoldForm[$CellContext`Fy]^2 == 0, 
        "Tooltip"]& ]}], {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 0.}, {0.25980762113533157`, 0.15}, {0.25980762113533157`, 
       0.44999999999999996`}}]}}, {{}, {}}}},
  AspectRatio->Automatic,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{508.1999999999996, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.87577314282615*^9, 3.875773181507587*^9, 3.8757732303413906`*^9, {
   3.8757732693284073`*^9, 3.875773323914941*^9}, {3.875789944741457*^9, 
   3.8757899659714065`*^9}, 3.875790083831311*^9, 3.8757903112708235`*^9, {
   3.8757903415668163`*^9, 3.8757903509819636`*^9}, 3.8757975727789593`*^9, 
   3.875797609882636*^9, {3.875797662593851*^9, 3.875797709252927*^9}, {
   3.875797764854056*^9, 3.8757977853253574`*^9}, {3.8757978723744125`*^9, 
   3.875797909250326*^9}, 3.875797977900685*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"793a3102-ae14-458d-a241-ecb0fe15ff6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fellipsetrasl", "/.", 
     RowBox[{"Fx", "->", 
      RowBox[{"EEc", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "/.", 
    RowBox[{"Fy", "->", 
     RowBox[{"EEc", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "/.", "ref"}], "/.", 
  "data"}]], "Input",
 CellChangeTimes->{{3.875790546296833*^9, 3.8757905632154045`*^9}, {
  3.8757906204411116`*^9, 3.87579063732777*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"5226f1cc-a64c-4f66-b178-3cd830fd556e"],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["Kf", "2"]}]], "Output",
 CellChangeTimes->{{3.875790553084558*^9, 3.875790563824686*^9}, {
   3.8757906298797398`*^9, 3.875790637813766*^9}, 3.8757976099657073`*^9, 
   3.8757976626514044`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d004c088-a88e-4970-a57d-221331bd633c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Velocity Ellipsoid", "Section",
 CellChangeTimes->{{3.875768449063607*^9, 
  3.8757684544298964`*^9}},ExpressionUUID->"11433805-9864-47a1-a554-\
c0c35fef77bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AV", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"Inverse", "@", "Jac"}]}], ".", 
     RowBox[{"Inverse", "@", "Jac"}]}], "//", "FullSimplify"}]}], ";", 
  RowBox[{"AV", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875792640842808*^9, 3.87579269767686*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"7d3fd7b8-4fb7-4a67-aa94-5321edc9ff5b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", "L1", " ", "L2", " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["L2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}]}], ")"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        SuperscriptBox["L2", "2"]}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "2"], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"L2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], 
             "+", 
             RowBox[{"L1", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], 
               "]"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        SuperscriptBox["L2", "2"]}]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "2"], " ", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
          RowBox[{"L2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], 
             "+", 
             RowBox[{"L1", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], 
               "]"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        SuperscriptBox["L2", "2"]}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", "L1", " ", "L2", " ", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["L2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        SuperscriptBox["L2", "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.875792660922094*^9, 3.8757926979075747`*^9}, 
   3.875797611218053*^9, 3.8757989476257076`*^9},
 CellLabel->
  "Out[88]//MatrixForm=",ExpressionUUID->"c33852f3-4c42-4752-bf41-\
4614274c7b8c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"Vx", ",", "Vy"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757927045391083`*^9, 3.8757927201767435`*^9}, 
   3.875796190177967*^9, {3.875796312359309*^9, 3.8757963144500313`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"c2fd0a03-42e0-418f-80d6-1aea71cddac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vellipse", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", "V"}], ".", "AV", ".", "V"}], "-", 
    SuperscriptBox["Kv", "2"]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.8757961913183756`*^9, 3.875796194202916*^9}, {
  3.875796240061601*^9, 3.875796291161448*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ea7b263b-fcf0-49db-89a2-c56fe0049ee7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["L1", "2"], " ", 
    SuperscriptBox["L2", "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["Kv", "2"]}], " ", 
     SuperscriptBox["L1", "2"], " ", 
     SuperscriptBox["L2", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["L1", "2"], " ", 
     SuperscriptBox["Vx", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", "L1", " ", "L2", " ", 
     SuperscriptBox["Vx", "2"], " ", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["L2", "2"], " ", 
     SuperscriptBox["Vx", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["L1", "2"], " ", 
     SuperscriptBox["Vy", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]1", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["L1", "2"], " ", "Vx", " ", "Vy", " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "+", 
    RowBox[{"2", " ", "L1", " ", "L2", " ", 
     SuperscriptBox["Vy", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["L2", "2"], " ", 
     SuperscriptBox["Vy", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["L2", "2"], " ", "Vx", " ", "Vy", " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", "L1", " ", "L2", " ", "Vx", " ", "Vy", " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.875796276221779*^9, 3.8757963157508435`*^9}, 
   3.875797611584053*^9, 3.8757989480137076`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"a838c251-5320-49c9-8419-499de42d9457"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericalMatV", "=", 
  RowBox[{
   RowBox[{"AV", "/.", "data"}], "/.", "ref"}]}]], "Input",
 CellChangeTimes->{{3.8757963496575327`*^9, 3.8757963644687243`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"29b30da0-85d1-49c7-bedf-fa50e99599d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"11.11111111111111`", ",", "19.24500897298752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.24500897298752`", ",", "48.14814814814814`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.875796364737097*^9, 3.8757976116157823`*^9, 
  3.875798948053755*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"7538a4cd-943d-4418-9a27-032e06dd6d56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EigVecV", "=", 
   RowBox[{"Eigenvectors", "@", "NumericalMatV"}]}], ";", 
  RowBox[{"EigVecV", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.8757963969107466`*^9, 3.8757964113526955`*^9}, {
  3.8757964795571785`*^9, 3.875796490672079*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"8a840fe0-737d-43c2-a8da-c3354051223a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.391551244869981`", "0.9201563033750125`"},
     {
      RowBox[{"-", "0.9201563033750125`"}], "0.391551244869981`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8757964124354*^9, 3.8757964909944506`*^9, 
  3.875797611634512*^9, 3.8757989480927086`*^9},
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"e1c5f330-9aa7-458e-a821-\
42080a5bf630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EigValV", "=", 
  RowBox[{"Eigenvalues", "@", "NumericalMatV"}]}]], "Input",
 CellChangeTimes->{{3.8757964315959034`*^9, 3.8757964727769995`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"eec92e83-44fe-410c-8627-d7e37bb9ab75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"56.337416855288794`", ",", "2.9218424039704516`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.875796473192544*^9, 3.8757976116715155`*^9, 
  3.8757989481357155`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"6b3e2f1c-c7f1-4b88-97c6-184e716614cf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"point1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"point2", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"EigValV", "[", 
       RowBox[{"[", "1", "]"}], "]"}]]], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "@", 
       RowBox[{"EigVecV", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"Re", "@", 
       RowBox[{"EigVecV", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8757964987937803`*^9, 3.875796502943298*^9}, {
  3.8757965354705105`*^9, 3.8757965656939154`*^9}, {3.875796625308818*^9, 
  3.8757966936856117`*^9}, {3.875797115246026*^9, 3.875797118796285*^9}, {
  3.875797234590453*^9, 3.875797237860099*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"3e7f3fc1-c7ba-4480-b40e-63ffbaf9a8fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"point3", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"EigValV", "[", 
       RowBox[{"[", "2", "]"}], "]"}]]], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "@", 
       RowBox[{"EigVecV", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"Re", "@", 
       RowBox[{"EigVecV", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757966987892137`*^9, 3.8757967053926225`*^9}, {
  3.875797031990185*^9, 3.875797041029482*^9}, {3.8757972432129364`*^9, 
  3.8757972468611965`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"fe276833-6282-4aca-a181-8484fc3f2638"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecV1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875796722783409*^9, 3.875796755613658*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"77b2acb0-b4f1-4033-aa2d-c1175bb539a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecV2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757967639240046`*^9, 3.875796764069784*^9}, {
  3.8757967965575323`*^9, 3.875796799950867*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"838b9aeb-40d1-4148-a31e-56f64b3b5cdf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plContourV", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Vellipse", "/.", "data"}], "/.", "ref"}], "/.", 
        RowBox[{"Kv", "->", "1"}]}], ")"}], "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vx", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vy", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "Cyan"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "Cyan", "}"}], ",", 
        RowBox[{"{", "\"\<Velocity\>\"", "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.87579897735151*^9, 3.8757990506632257`*^9}, {
  3.875799182182692*^9, 3.875799192490635*^9}, {3.875800283181179*^9, 
  3.8758002951700478`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"6af04333-24ae-46dc-956b-e6c321c77912"],

Cell[CellGroupData[{

Cell["Velocity Ellipsoid", "Subsection",
 CellChangeTimes->{{3.8757993161096845`*^9, 
  3.8757993209652367`*^9}},ExpressionUUID->"b62b75fc-7a62-4e21-8a74-\
fae02afa08dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plEigVecV1", ",", "plEigVecV2", ",", "plContourV", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "->", "1"}], ",", 
   RowBox[{"GridLines", "->", "Automatic"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Axes", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8757990529154496`*^9, 3.875799055482519*^9}, {
  3.8757991003138094`*^9, 3.8757991678171005`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"fdb473ad-8f98-4cdd-b3f8-e3593bef7dcd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {0.05216631314097217, 
          0.1225922851463277}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[{{0., 0.}, {-0.5383109471051818, 
          0.22906578012134737`}}]}}}, {{}, {}}}, {
      GraphicsComplexBox[CompressedData["
1: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
AUqZp9Y=
       "], {{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJwl1GeYCAQcBvAbnHXLmeeGu7P3ur1w545sEkkRGQ2dFFnJaA+jyCqzEDJT
ocysFKUdoqVhVJQVqt89Pvze//f3ed5/4oBh3YsCAwICbhLFN4hgSlCSEEpR
mjKUpRyhhBFOBJGUJ4oKVKQSlalCVaKpRgyxxBFPdRJIJIka1KQWtalDXepR
nwY0pBGNaUJTmtGcFiSTQipppJNBJllkk0MuLWlFa/LIpw0FFNKWdsUd0Z4O
dKQTnelCV7rRnZvpwS30pBe30pvb6MPt3EFf+nEn/RnAXQxkEIMZwt3cw73c
x1Dup4hhPMBwHuQhRjCShxnFaMYwlnE8wngeZQITmcRkHuNxnuBJnuJpnuFZ
nuN5pjCVaUznBV5kBjN5iVnMZg5zmcfLvMJ8FrCQRSxmCa/yGktZxnJeZwUr
WcUbrGYNa1nHejbwJht5i7d5h01sZgvv8h5b2cZ2drCTXbzPbvawl33s5wMO
8CEfcZBDfMwnHOZTPuNzvuBLvuJrvuEIRznGtxznBN/xPT/wIz9xkp/5hV/5
jVOc5gxn+Z0/+JNznOcv/uYCF7nEZa7wD1e5xnX+5T+Kxx9IEMGUoCQhlKI0
ZShLOUIJI5wIIilPFBWoSCUqU4WqRFONGGKJI57qJJBIEjWoSS1qU4e61KM+
DWhIIxrThKY0ozktSCaFVNJIJ4NMssgmh1xa0orW5JFPGwoopC3tAm/8yP8B
xKqMVQ==
             "]]}, 
           RowBox[{
             RowBox[{"123.45679012345678`", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.0081`"}], "+", 
                   RowBox[{"0.09`", " ", 
                    SuperscriptBox[
                    TagBox["Vx", HoldForm], "2"]}], "+", 
                   RowBox[{"0.31176914536239786`", " ", 
                    TagBox["Vx", HoldForm], " ", 
                    TagBox["Vy", HoldForm]}], "+", 
                   RowBox[{"0.39`", " ", 
                    SuperscriptBox[
                    TagBox["Vy", HoldForm], "2"]}]}], ")"}]}], "\[Equal]", 
             "0"}]], Annotation[#, 
           123.45679012345678` (-0.0081 + 0.09 HoldForm[$CellContext`Vx]^2 + 
             0.31176914536239786` HoldForm[$CellContext`Vx] 
              HoldForm[$CellContext`Vy] + 0.39 HoldForm[$CellContext`Vy]^2) == 
           0, "Tooltip"]& ]}}], {}}}, {
    PlotRange -> {{-1, 1}, {-1, 1}}, AspectRatio -> 1, GridLines -> Automatic,
      Frame -> True, Axes -> False, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.05216631314097217}, {0, 0.1225922851463277}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Velocity\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 1, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 1, 1], Editable -> False, Selectable -> False], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8757991155530663`*^9, 3.875799193903038*^9}, {
  3.8758002917144995`*^9, 3.8758002983330417`*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"4145a2c1-df1c-46b4-a72d-d0a8942fafd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compliance Ellipsoid", "Section",
 CellChangeTimes->{{3.875768331555052*^9, 
  3.8757683365908947`*^9}},ExpressionUUID->"e98ecf53-2e8d-4a0d-8fbf-\
99e1d3fc0de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Kq", "=", 
   RowBox[{"k", "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}]}], ";", 
  RowBox[{"Kq", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875768338128769*^9, 3.8757683620004835`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"e0a64e24-e2d0-4f96-a335-ebf64d745b98"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"k", "0"},
     {"0", 
      RowBox[{"2", " ", "k"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757683541969595`*^9, 3.8757683621976724`*^9}, 
   3.875772882697294*^9, 3.875797611777687*^9, 3.875799200418948*^9},
 CellLabel->
  "Out[109]//MatrixForm=",ExpressionUUID->"69d99e4d-4708-426a-b502-\
d4eeb6adcfb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ks", "=", 
   RowBox[{
    RowBox[{"Jac", ".", "Kq", ".", 
     RowBox[{"Transpose", "@", "Jac"}]}], "//", "Simplify"}]}], ";", 
  RowBox[{"Ks", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875768367207297*^9, 3.8757684015349636`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"db5702a1-6406-4e5a-b9e3-9d82c85c9b1b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["L2", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"L1", " ", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
            RowBox[{"L2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], ")"}], 
          "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["L1", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "+", 
         RowBox[{"L2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "L2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], 
            "+", 
            RowBox[{"2", " ", "L1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}],
            ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["L1", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "+", 
         RowBox[{"L2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "L2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], 
            "+", 
            RowBox[{"2", " ", "L1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}],
            ")"}]}]}], ")"}]}], 
      RowBox[{"k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["L2", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"L1", " ", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
            RowBox[{"L2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], "]"}]}]}], ")"}], 
          "2"]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8757683742074957`*^9, 3.875768401915329*^9}, 
   3.875772882900481*^9, 3.875797611897746*^9, 3.875799200603982*^9},
 CellLabel->
  "Out[110]//MatrixForm=",ExpressionUUID->"e65416ed-de46-4a76-bccf-\
93572ef5f939"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AC", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Inverse", "@", "Ks"}], "]"}], ".", 
     RowBox[{"Inverse", "@", "Ks"}]}], "//", "FullSimplify"}]}], ";", 
  RowBox[{"AC", "//", "MatrixForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.8757684680005503`*^9, 3.875768475485013*^9}, {
   3.8757685148286314`*^9, 3.87576855284126*^9}, 3.875797226734001*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"d5cca7e9-d0c7-48d9-b1f6-2afb09b9c3f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dS", "=", 
    RowBox[{"{", 
     RowBox[{"dx", ",", "dy"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"generic", " ", "infinitesimal", " ", "displacement"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8757685629068594`*^9, 3.8757685769331064`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"437ac25e-76ae-43c6-9c4d-be27f7c11fd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cellipse", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "@", "dS"}], ".", "AC", ".", "dS"}], "-", 
    SuperscriptBox["KA", "2"]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.875768581296773*^9, 3.875768677380193*^9}, {
  3.8757687229371367`*^9, 3.875768724859688*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"3e7919dd-b1e3-4b20-91f8-8addce11c8d6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["L1", "4"], " ", 
    SuperscriptBox["L2", "4"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "8"}], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["KA", "2"], " ", 
     SuperscriptBox["L1", "4"], " ", 
     SuperscriptBox["L2", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["dy", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["L1", "2"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["L2", "2"]}]}], ")"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["L1", "2"], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["L2", "2"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "-", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "-", "\[Theta]2"}], "]"}]}], 
          "-", 
          RowBox[{"4", " ", "L1", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["L1", "2"], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["L2", "2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["L1", "2"], " ", "L2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]2"}], "]"}]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["L1", "2"], " ", "L2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["L2", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["L1", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}], 
          "+", 
          RowBox[{"9", " ", "L1", " ", 
           SuperscriptBox["L2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}], 
          "+", 
          RowBox[{"3", " ", "L1", " ", 
           SuperscriptBox["L2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", 
             RowBox[{"3", " ", "\[Theta]2"}]}], "]"}]}]}], ")"}]}]}], ")"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "4"]}], "+", 
    RowBox[{
     SuperscriptBox["dx", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["L1", "2"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["L2", "2"]}]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["L1", "2"], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["L2", "2"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["L1", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "-", "\[Theta]2"}], "]"}]}], 
          "+", 
          RowBox[{"4", " ", "L1", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["L1", "2"], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["L2", "2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["L1", "2"], " ", "L2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]2"}], "]"}]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["L1", "2"], " ", "L2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["L2", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["L1", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}], 
          "+", 
          RowBox[{"9", " ", "L1", " ", 
           SuperscriptBox["L2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}], 
          "+", 
          RowBox[{"3", " ", "L1", " ", 
           SuperscriptBox["L2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", 
             RowBox[{"3", " ", "\[Theta]2"}]}], "]"}]}]}], ")"}]}]}], ")"}], 
     " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "4"]}], "+", 
    RowBox[{"2", " ", "dx", " ", "dy", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["L1", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["L2", "2"]}], "+", 
       RowBox[{"2", " ", "L1", " ", "L2", " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]2", "]"}], "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["L1", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]1"}], "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "L2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", "L1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", " ", "\[Theta]1"}], "+", "\[Theta]2"}], "]"}]}]}], 
         ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.8757686246905465`*^9, {3.8757686599051514`*^9, 3.875768677685498*^9}, 
   3.875768726896473*^9, 3.87577289381573*^9, 3.875797620008991*^9, 
   3.875799207828963*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"7d9c1803-a51a-422d-9e95-55e4b41d8443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumericalMatC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"AC", "/.", "data"}], "/.", "ref"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KA", "->", "1"}], ",", 
     RowBox[{"k", "->", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.875768684670497*^9, 3.8757687393434825`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"8b2847c5-6a06-4440-a42a-eb05ae38efcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"123.45679012345676`", ",", "356.3890550553245`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"356.3890550553245`", ",", "1083.6762688614542`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8757687398062296`*^9, 3.8757728938625746`*^9, 
  3.8757976200579596`*^9, 3.875799207881939*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"f24fffa0-e588-4cf6-854a-c49eaa00cdfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EigVecC", "=", 
   RowBox[{"Eigenvectors", "@", "NumericalMatC"}]}], ";", 
  RowBox[{"EigVecC", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.875768750327134*^9, 3.875768782719478*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"08c5517c-2041-457e-a6f6-f94ab6307dd0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.3138828853673242`", "0.9494617076393777`"},
     {
      RowBox[{"-", "0.9494617076393777`"}], "0.3138828853673242`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8757687831377983`*^9, 3.8757728939000616`*^9, 
  3.875797620070939*^9, 3.8757992079249787`*^9},
 CellLabel->
  "Out[115]//MatrixForm=",ExpressionUUID->"ca09749a-a91f-4bea-89ad-\
5b2fef26e581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EigValC", "=", 
  RowBox[{"Eigenvalues", "@", "NumericalMatC"}]}]], "Input",
 CellChangeTimes->{{3.8757729190502195`*^9, 3.8757729333420687`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"3740d41f-1122-4432-8ba2-64df1a29c37d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1201.4950539836318`", ",", "5.638005001279353`"}], "}"}]], "Output",
 CellChangeTimes->{3.8757729337792144`*^9, 3.8757976200810657`*^9, 
  3.8757992079669943`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"7c793c82-5c1d-4bc7-af89-74bbeead5fe2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"point1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"point2", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"Re", "@", 
       RowBox[{"EigValC", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]]], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EigVecC", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"EigVecC", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8757729387266226`*^9, 3.8757729819267063`*^9}, {
  3.875792090916123*^9, 3.87579211061769*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"b935e84e-bdf8-440c-b282-6be0d3946eee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"point3", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"Re", "@", 
       RowBox[{"EigValC", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]]], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EigVecC", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"EigVecC", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875792111916093*^9, 3.8757921274852877`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"69d176b6-180e-44d7-aeed-1b383bd8d01c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecC1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875792132362835*^9, 3.8757921797973204`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"4124848a-5229-43e6-8deb-17c6ddd80b62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plEigVecC2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point1", ",", "point3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8757921847600546`*^9, 3.8757921895058374`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"c6228ee4-ad79-4b1a-9228-796a63f87eb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plContourC", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cellipse", "/.", "data"}], "/.", "ref"}], "/.", 
        RowBox[{"KA", "->", "1"}]}], "/.", 
       RowBox[{"k", "->", "1"}]}], ")"}], "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"dx", ",", 
      RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"dy", ",", 
      RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", "Black", "}"}], ",", 
       RowBox[{"{", "\"\<Compliance\>\"", "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8757921992525992`*^9, 3.8757923031069903`*^9}, {
  3.8757994829877696`*^9, 3.875799494026026*^9}, {3.875799538553096*^9, 
  3.87579957897723*^9}, {3.8757997322013793`*^9, 3.8757997473017435`*^9}, {
  3.8757997806624813`*^9, 3.8757997849866133`*^9}, {3.875799862951076*^9, 
  3.875799874875598*^9}, {3.8758000143563056`*^9, 3.8758000600150733`*^9}, {
  3.875800146145029*^9, 3.875800199429429*^9}, {3.875800253012641*^9, 
  3.8758002617818155`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"43c8ff87-0e2d-4576-9ba2-a4443c58b4b1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
1A==
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwl1WV7EAQUBeCN0d0NY3R3d3eObhidozs3eqO7u1sFpbETDNIglQ6lU+Hd
44f33F9wzg0JCw8dGBgQELBfxNxYBBGbOMQlHvFJQEISkZgkJCUZyUlBSlKR
mjSkJR3pyUBGMpGZLGQlmGyEkJ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOaEUpzWtCS
VrSmDW1pR3s60JFOdKYLXQmjG93pQU960Zs+9KUf/RnAQMIZxGCGMJRhDGcE
IxnFaMYwlnGMZwITmcRkIohkClOZxnRmMJNZRBHNbOYwl3nMZwELWcRilrCU
ZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfeznAz7kIw5wkI/5
hEMc5ghHOcZxTnCST/mMz/mCL/mKr/mGb/mO7/mBU5zmR37iZ37hDGc5x3ku
cJFf+Y3f+YNLXOYKV7nGdf7kL25wk1vc5g53ucd9HvCQv/mHRzzmCU95xnNe
8JJXvOYNb/mX/3hHTPkDiUUQsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVoLJRgjZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKU
pRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRmhNKcFLWlFa9rQ
lna0pwMd6URnutCVMLrRnR70pBe96UNf+tGfAcSMdziDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5hMBJFMYSrTmM4MZjKLKKKZzRzmMo/5LGAhi1jMEpayjOWs
YCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayL/D/H/YeDtbAIQ==
            "]]}, 
          RowBox[{
            RowBox[{"1905.1973784484076`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "0.0005248799999999999`"}], "+", 
                  RowBox[{"0.06479999999999997`", " ", 
                    SuperscriptBox[
                    TagBox["dx", HoldForm], "2"]}], "+", 
                  RowBox[{"0.37412297443487735`", " ", 
                    TagBox["dx", HoldForm], " ", 
                    TagBox["dy", HoldForm]}], "+", 
                  RowBox[{"0.5688`", " ", 
                    SuperscriptBox[
                    TagBox["dy", HoldForm], "2"]}]}], ")"}]}], "\[Equal]", 
            "0"}]], Annotation[#, 
          1905.1973784484076` (-0.0005248799999999999 + 
            0.06479999999999997 HoldForm[$CellContext`dx]^2 + 
            0.37412297443487735` HoldForm[$CellContext`dx] 
             HoldForm[$CellContext`dy] + 0.5688 HoldForm[$CellContext`dy]^2) == 
          0, "Tooltip"]& ]}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Compliance\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8757995574837666`*^9, 3.875799580008004*^9}, {
  3.875799736959075*^9, 3.8757997487505884`*^9}, {3.8757998672552204`*^9, 
  3.8757998757330556`*^9}, {3.875800024674691*^9, 3.875800060760038*^9}, {
  3.875800168573807*^9, 3.8758002007637367`*^9}, {3.8758002540724726`*^9, 
  3.87580026283749*^9}},
 CellLabel->
  "Out[161]=",ExpressionUUID->"3e40229f-6e4b-45c4-b8da-fd374bf7c96a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compliance Ellipsoid", "Subsection",
 CellChangeTimes->{{3.875797193645249*^9, 3.8757971971404457`*^9}, {
  3.8757993269043875`*^9, 
  3.8757993311697016`*^9}},ExpressionUUID->"314ec6d3-e4bf-459a-b1d4-\
91f2d33d5617"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plEigVecC1", ",", "plEigVecC2", ",", "plContourC"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "->", "Automatic"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"AspectRatio", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8757923067839155`*^9, 3.8757924518489494`*^9}, {
  3.8757994760089245`*^9, 3.8757994789707003`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"2d174469-f969-4a76-a51a-542c4d8b8dcb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {0.009055379223607194, 
          0.027391540672587648`}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[{{0., 0.}, {-0.39986622776513214`, 
          0.13219191919168866`}}]}}}, {{}, {}}}, {
      GraphicsComplexBox[CompressedData["
1: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
1A==
       "], {{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJwl1WV7EAQUBeCN0d0NY3R3d3eObhidozs3eqO7u1sFpbETDNIglQ6lU+Hd
44f33F9wzg0JCw8dGBgQELBfxNxYBBGbOMQlHvFJQEISkZgkJCUZyUlBSlKR
mjSkJR3pyUBGMpGZLGQlmGyEkJ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOaEUpzWtCS
VrSmDW1pR3s60JFOdKYLXQmjG93pQU960Zs+9KUf/RnAQMIZxGCGMJRhDGcE
IxnFaMYwlnGMZwITmcRkIohkClOZxnRmMJNZRBHNbOYwl3nMZwELWcRilrCU
ZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfeznAz7kIw5wkI/5
hEMc5ghHOcZxTnCST/mMz/mCL/mKr/mGb/mO7/mBU5zmR37iZ37hDGc5x3ku
cJFf+Y3f+YNLXOYKV7nGdf7kL25wk1vc5g53ucd9HvCQv/mHRzzmCU95xnNe
8JJXvOYNb/mX/3hHTPkDiUUQsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVoLJRgjZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKU
pRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRmhNKcFLWlFa9rQ
lna0pwMd6URnutCVMLrRnR70pBe96UNf+tGfAcSMdziDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5hMBJFMYSrTmM4MZjKLKKKZzRzmMo/5LGAhi1jMEpayjOWs
YCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayL/D/H/YeDtbAIQ==
             "]]}, 
           RowBox[{
             RowBox[{"1905.1973784484076`", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.0005248799999999999`"}], "+", 
                   RowBox[{"0.06479999999999997`", " ", 
                    SuperscriptBox[
                    TagBox["dx", HoldForm], "2"]}], "+", 
                   RowBox[{"0.37412297443487735`", " ", 
                    TagBox["dx", HoldForm], " ", 
                    TagBox["dy", HoldForm]}], "+", 
                   RowBox[{"0.5688`", " ", 
                    SuperscriptBox[
                    TagBox["dy", HoldForm], "2"]}]}], ")"}]}], "\[Equal]", 
             "0"}]], Annotation[#, 
           1905.1973784484076` (-0.0005248799999999999 + 
             0.06479999999999997 HoldForm[$CellContext`dx]^2 + 
             0.37412297443487735` HoldForm[$CellContext`dx] 
              HoldForm[$CellContext`dy] + 0.5688 HoldForm[$CellContext`dy]^2) == 
           0, "Tooltip"]& ]}}], {}}}, {
    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}}, GridLines -> Automatic, Frame -> 
     True, Axes -> False, AspectRatio -> 1, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.009055379223607194}, {0, 0.027391540672587648`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Compliance\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8757923208800306`*^9, 3.8757923802303085`*^9}, {
   3.875792413417859*^9, 3.8757924521627216`*^9}, 3.8757976205298367`*^9, 
   3.87579920901826*^9, 3.8757994885808325`*^9, 3.8757995831924877`*^9, 
   3.8758002713422427`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"0b1b62b7-ae8f-4f71-b42e-d2d5fa2cdf19"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["All ellipsoids", "Section",
 CellChangeTimes->{{3.87579721721249*^9, 
  3.875797220128834*^9}},ExpressionUUID->"1dc150d4-d1e7-455b-8ee4-\
0e9eeef515d9"],

Cell["\<\
The compliance ellipsoid is orthogonal to the force ellipsoid only if Kq is \
proportional to the Identity matrix . In this case, it is not orthogonal\
\>", "Text",
 CellChangeTimes->{{3.8757925892469893`*^9, 
  3.875792595315468*^9}},ExpressionUUID->"4e6a2639-b747-4847-b42f-\
277ce0b34e51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plContourV", ",", "plContourC", ",", "plContourF"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "->", "800"}], ",", 
   RowBox[{"LegendLabel", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Directive", "[", "Red", "]"}], "}"}], ",", 
        RowBox[{"{", "\"\<Test\>\"", "}"}]}], "]"}], ",", "Bottom"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8757924710254874`*^9, 3.87579257439698*^9}, {
   3.8757992133168106`*^9, 3.8757992188715467`*^9}, {3.875799378708846*^9, 
   3.8757993849397945`*^9}, {3.875799447058736*^9, 3.8757994656323977`*^9}, 
   3.8757996718353777`*^9, {3.8757997101236963`*^9, 3.8757997225476575`*^9}, {
   3.875800067594446*^9, 3.875800138390267*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"c429bf73-2908-49a9-b48c-8224907b6e99"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      GraphicsComplexBox[CompressedData["
1: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
AUqZp9Y=
       "], {{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJwl1GeYCAQcBvAbnHXLmeeGu7P3ur1w545sEkkRGQ2dFFnJaA+jyCqzEDJT
ocysFKUdoqVhVJQVqt89Pvze//f3ed5/4oBh3YsCAwICbhLFN4hgSlCSEEpR
mjKUpRyhhBFOBJGUJ4oKVKQSlalCVaKpRgyxxBFPdRJIJIka1KQWtalDXepR
nwY0pBGNaUJTmtGcFiSTQipppJNBJllkk0MuLWlFa/LIpw0FFNKWdsUd0Z4O
dKQTnelCV7rRnZvpwS30pBe30pvb6MPt3EFf+nEn/RnAXQxkEIMZwt3cw73c
x1Dup4hhPMBwHuQhRjCShxnFaMYwlnE8wngeZQITmcRkHuNxnuBJnuJpnuFZ
nuN5pjCVaUznBV5kBjN5iVnMZg5zmcfLvMJ8FrCQRSxmCa/yGktZxnJeZwUr
WcUbrGYNa1nHejbwJht5i7d5h01sZgvv8h5b2cZ2drCTXbzPbvawl33s5wMO
8CEfcZBDfMwnHOZTPuNzvuBLvuJrvuEIRznGtxznBN/xPT/wIz9xkp/5hV/5
jVOc5gxn+Z0/+JNznOcv/uYCF7nEZa7wD1e5xnX+5T+Kxx9IEMGUoCQhlKI0
ZShLOUIJI5wIIilPFBWoSCUqU4WqRFONGGKJI57qJJBIEjWoSS1qU4e61KM+
DWhIIxrThKY0ozktSCaFVNJIJ4NMssgmh1xa0orW5JFPGwoopC3tAm/8yP8B
xKqMVQ==
             "]]}, 
           RowBox[{
             RowBox[{"123.45679012345678`", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.0081`"}], "+", 
                   RowBox[{"0.09`", " ", 
                    SuperscriptBox[
                    TagBox["Vx", HoldForm], "2"]}], "+", 
                   RowBox[{"0.31176914536239786`", " ", 
                    TagBox["Vx", HoldForm], " ", 
                    TagBox["Vy", HoldForm]}], "+", 
                   RowBox[{"0.39`", " ", 
                    SuperscriptBox[
                    TagBox["Vy", HoldForm], "2"]}]}], ")"}]}], "\[Equal]", 
             "0"}]], Annotation[#, 
           123.45679012345678` (-0.0081 + 0.09 HoldForm[$CellContext`Vx]^2 + 
             0.31176914536239786` HoldForm[$CellContext`Vx] 
              HoldForm[$CellContext`Vy] + 0.39 HoldForm[$CellContext`Vy]^2) == 
           0, "Tooltip"]& ]}}], {}}, {
      GraphicsComplexBox[CompressedData["
1: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
1A==
       "], {{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             AbsoluteThickness[1.6], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJwl1WV7EAQUBeCN0d0NY3R3d3eObhidozs3eqO7u1sFpbETDNIglQ6lU+Hd
44f33F9wzg0JCw8dGBgQELBfxNxYBBGbOMQlHvFJQEISkZgkJCUZyUlBSlKR
mjSkJR3pyUBGMpGZLGQlmGyEkJ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOaEUpzWtCS
VrSmDW1pR3s60JFOdKYLXQmjG93pQU960Zs+9KUf/RnAQMIZxGCGMJRhDGcE
IxnFaMYwlnGMZwITmcRkIohkClOZxnRmMJNZRBHNbOYwl3nMZwELWcRilrCU
ZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfeznAz7kIw5wkI/5
hEMc5ghHOcZxTnCST/mMz/mCL/mKr/mGb/mO7/mBU5zmR37iZ37hDGc5x3ku
cJFf+Y3f+YNLXOYKV7nGdf7kL25wk1vc5g53ucd9HvCQv/mHRzzmCU95xnNe
8JJXvOYNb/mX/3hHTPkDiUUQsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVoLJRgjZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKU
pRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRmhNKcFLWlFa9rQ
lna0pwMd6URnutCVMLrRnR70pBe96UNf+tGfAcSMdziDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5hMBJFMYSrTmM4MZjKLKKKZzRzmMo/5LGAhi1jMEpayjOWs
YCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayL/D/H/YeDtbAIQ==
             "]]}, 
           RowBox[{
             RowBox[{"1905.1973784484076`", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "0.0005248799999999999`"}], "+", 
                   RowBox[{"0.06479999999999997`", " ", 
                    SuperscriptBox[
                    TagBox["dx", HoldForm], "2"]}], "+", 
                   RowBox[{"0.37412297443487735`", " ", 
                    TagBox["dx", HoldForm], " ", 
                    TagBox["dy", HoldForm]}], "+", 
                   RowBox[{"0.5688`", " ", 
                    SuperscriptBox[
                    TagBox["dy", HoldForm], "2"]}]}], ")"}]}], "\[Equal]", 
             "0"}]], Annotation[#, 
           1905.1973784484076` (-0.0005248799999999999 + 
             0.06479999999999997 HoldForm[$CellContext`dx]^2 + 
             0.37412297443487735` HoldForm[$CellContext`dx] 
              HoldForm[$CellContext`dy] + 0.5688 HoldForm[$CellContext`dy]^2) == 
           0, "Tooltip"]& ]}}], {}}, {
      GraphicsComplexBox[CompressedData["
1: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
kG+40jfw//9f9H9M1JDN
       "], {{{}, {}, 
         TagBox[
          TooltipBox[{
            Directive[
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwl1WVbEAYUBWCwwG4MMLDFxG6xu1BsRRE7UOzA7u5WBF3ows7NWJjrNDdd
6Dp1oZu6l2cf3nN/wTk3PC4hekxgQEDAHpF205GeDGQkE0EEk5ksZCUb2clB
TnKRmzzkJR/5CaEABSlEYUIJowhFKUZxwilBSUpRmjKUpRzliaACFalEZapQ
lUiqUZ0a1KQWtalDXepRnwY0pBGNiaIJTWlGc1rQkla0pg1taUd7OtCRTnSm
C9F0pRsxdKcHPelFb/rQl370J5YBDCSOQcQzmCEMZRjDGcFIRjGaMSQwlnEk
Mp4JTGQSk5nCVKYxnRkkMZNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZ
x3o2sJFNbGYLW9nGdnawk2R2kUIqu9nDMzzLczzPXvbxAi/yEi+znwMc5BCH
OcJRjnGcE5zkFK/wKqc5w1nO8Rqv8wZvcp4LXOQSl7nCW7zNO7zLe7zPB3zI
R3zMJ3zKVa5xnRvc5Baf8Tm3ucMXfMlXfM1d7vEN3/Id3/MDP/ITP/MLv/Ib
v3OfB/zBn/zF3zzkEf/wL495wlPSyh9IOtKTgYxkIohgMpOFrGQjOznISS5y
k4e85CM/IRSgIIUoTChhFKEoxShOOCUoSSlKU4aylKM8EVSgIpWoTBWqEkk1
qlODmtSiNnWoSz3q04CGNKIxUTShKc1oTgta0orWtKEt7WhPBzrSic50IZqu
dCOG7vSgJ73oTR/60o/+xDKAgcQxiHgGM4ShDGM4IxjJKEaTNt4JjGUciYxn
AhOZxGSmMJVpTGcGScxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGe
DWxkE5vZwla2sZ0d7CSZXaSQyu7A///Rf4Tat1g=
             "]]}, 
           RowBox[{
             RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"0.2925`", " ", 
                 SuperscriptBox[
                  TagBox["Fx", HoldForm], "2"]}], "+", 
               RowBox[{"0.5196152422706631`", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.15`", " ", 
                    TagBox["Fx", HoldForm]}]}], ")"}], " ", 
                 TagBox["Fy", HoldForm]}], "-", 
               RowBox[{"0.15588457268119893`", " ", 
                 TagBox["Fx", HoldForm], " ", 
                 TagBox["Fy", HoldForm]}], "+", 
               RowBox[{"0.0675`", " ", 
                 SuperscriptBox[
                  TagBox["Fy", HoldForm], "2"]}]}], "\[Equal]", "0"}]], 
          Annotation[#, -1. + 0.2925 HoldForm[$CellContext`Fx]^2 + 
            0.5196152422706631 (0. - 0.15 HoldForm[$CellContext`Fx]) 
             HoldForm[$CellContext`Fy] - 0.15588457268119893` 
            HoldForm[$CellContext`Fx] HoldForm[$CellContext`Fy] + 
            0.0675 HoldForm[$CellContext`Fy]^2 == 0, "Tooltip"]& ]}}], {}}}, {
    PlotRange -> {{-7, 7}, {-7, 7}}, ImageSize -> 800, LegendLabel -> Placed[
       LineLegend[{
         Directive[
          RGBColor[1, 0, 0]]}, {"Test"}], Bottom], DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{-1, 1}, {-1, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Velocity\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Compliance\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Force\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8757924977532635`*^9, 3.875792529419388*^9, {3.8757925625171967`*^9, 
   3.8757925747726927`*^9}, 3.875797620546107*^9, {3.8757992091190157`*^9, 
   3.8757992192955766`*^9}, {3.8757994535826607`*^9, 3.8757994660154085`*^9}, 
   3.8757995859358425`*^9, 3.8757996737505703`*^9, {3.8757997152890306`*^9, 
   3.8757997228528585`*^9}, {3.8758000744112453`*^9, 3.875800138957033*^9}, 
   3.8758003013006263`*^9, 3.875800533523*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"364bc7b4-2531-4b1c-b18f-2f7a073d049f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"77dc0319-b23f-465e-b641-286397a23045"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 203, 3, 98, "Title",ExpressionUUID->"406c5eca-332e-4b9c-9791-d4884e5073ec"],
Cell[CellGroupData[{
Cell[808, 29, 166, 3, 67, "Section",ExpressionUUID->"8825c091-3122-4e76-bd7f-6b033c5fbc94"],
Cell[977, 34, 222, 3, 28, "Input",ExpressionUUID->"5b3788d3-6963-4bc6-bba9-7e0d64564e06"],
Cell[1202, 39, 150358, 2472, 225, "Text",ExpressionUUID->"4c11aa8b-6ed1-4156-a100-84759da9f54c"],
Cell[151563, 2513, 182, 3, 35, "Text",ExpressionUUID->"cbdc5195-5d16-4ef8-946e-fb7d0858a2ff"],
Cell[151748, 2518, 833, 24, 89, "Input",ExpressionUUID->"f6a6b88e-965e-4225-baa4-fe98e8241eba"],
Cell[152584, 2544, 525, 13, 28, "Input",ExpressionUUID->"4649ad3e-d107-40e3-a3b3-9b73afda8f19"],
Cell[CellGroupData[{
Cell[153134, 2561, 351, 8, 28, "Input",ExpressionUUID->"efb0147e-18fb-4103-a3f8-78d3c9d6463d"],
Cell[153488, 2571, 1154, 32, 94, "Output",ExpressionUUID->"efeb316a-305a-464f-9c92-e2ab2e8d4505"]
}, Open  ]],
Cell[154657, 2606, 473, 12, 28, "Input",ExpressionUUID->"0a06aa83-fd41-44f1-acdf-d261bef6becb"],
Cell[155133, 2620, 271, 6, 28, "Input",ExpressionUUID->"7974c677-4644-4854-9be7-8beefa541171"],
Cell[CellGroupData[{
Cell[155429, 2630, 353, 8, 28, "Input",ExpressionUUID->"7518d937-8c0b-4f13-8a9e-7e8e280dcd23"],
Cell[155785, 2640, 1150, 32, 94, "Output",ExpressionUUID->"9595605a-7892-4e70-8f93-f4f0bf9802a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156972, 2677, 316, 7, 28, "Input",ExpressionUUID->"2aa8e1ad-62bd-488b-8a33-f4834450f5fc"],
Cell[157291, 2686, 1577, 44, 94, "Output",ExpressionUUID->"bbb2cfff-91de-430c-b3bb-8f4b513e842f"]
}, Open  ]],
Cell[158883, 2733, 332, 8, 28, "Input",ExpressionUUID->"9d43b85d-2c0e-4bd8-8162-97b93475ff3c"],
Cell[CellGroupData[{
Cell[159240, 2745, 322, 7, 28, "Input",ExpressionUUID->"dcbf5eeb-efd9-4732-836c-ca69bd3b99e6"],
Cell[159565, 2754, 843, 24, 94, "Output",ExpressionUUID->"fb272c4c-d330-4a9b-aa35-b182f649f873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160445, 2783, 282, 6, 28, "Input",ExpressionUUID->"fdf5ad44-cebc-428c-bc6a-cd06d1198450"],
Cell[160730, 2791, 1608, 45, 94, "Output",ExpressionUUID->"59763586-fc19-401e-8623-1077336d4c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162375, 2841, 351, 8, 28, "Input",ExpressionUUID->"5eeb69e8-566e-48d5-b7a0-40d5f286b3ea"],
Cell[162729, 2851, 1278, 38, 94, "Output",ExpressionUUID->"c19ed9bd-ffba-4398-b275-249858e2558e"]
}, Open  ]],
Cell[164022, 2892, 292, 6, 35, "Text",ExpressionUUID->"4e911e9b-28fc-44eb-b214-fcde04775cf8"],
Cell[CellGroupData[{
Cell[164339, 2902, 425, 11, 28, "Input",ExpressionUUID->"e896cdd8-adfc-4b6f-bb3a-d4bd89166a89"],
Cell[164767, 2915, 1189, 34, 60, "Output",ExpressionUUID->"9c96689b-d059-4d65-b261-77098ee543d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165993, 2954, 411, 10, 28, "Input",ExpressionUUID->"eb3093bc-899d-4c66-bf64-0b87c96c3068"],
Cell[166407, 2966, 1433, 41, 60, "Output",ExpressionUUID->"9906a005-9d4a-4567-946d-35496657fd21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167877, 3012, 260, 5, 28, "Input",ExpressionUUID->"d655f435-9308-42dc-a02e-942e2c52b7c4"],
Cell[168140, 3019, 347, 6, 32, "Output",ExpressionUUID->"598237dd-f90d-43d3-aeba-77756538d6a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168524, 3030, 174, 3, 54, "Subsection",ExpressionUUID->"072d03b6-d2e3-4fc1-88b5-e9ab6fdf2130"],
Cell[CellGroupData[{
Cell[168723, 3037, 440, 10, 28, "Input",ExpressionUUID->"951aa5b2-cf37-447b-b258-0ca37984f68c"],
Cell[169166, 3049, 389, 7, 32, "Output",ExpressionUUID->"b491fbbe-382a-4ba6-8c7e-973eed8b367a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169592, 3061, 412, 10, 28, "Input",ExpressionUUID->"33f30252-c707-4dee-b22f-091a5a9670a7"],
Cell[170007, 3073, 312, 5, 32, "Output",ExpressionUUID->"f261e8a2-2315-466f-a37c-246b1a730614"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170356, 3083, 384, 9, 28, "Input",ExpressionUUID->"833071df-b9b1-4410-a1f0-2c8cf67e3bde"],
Cell[170743, 3094, 911, 24, 44, "Output",ExpressionUUID->"9dadfd45-3f94-4430-9c0c-2adb5627c13d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171715, 3125, 217, 4, 67, "Section",ExpressionUUID->"63b87024-5c8b-4815-a9d9-6eec9f321ec1"],
Cell[171935, 3131, 182, 3, 35, "Text",ExpressionUUID->"502ea415-2286-43de-b108-27b9c40e7d68"],
Cell[172120, 3136, 476, 10, 28, "Input",ExpressionUUID->"6f344825-d47e-4aea-885e-27b548c22185"],
Cell[172599, 3148, 440, 11, 42, "Input",ExpressionUUID->"a90b6cbc-f763-4de6-bb14-251a9d5a353b"],
Cell[173042, 3161, 265, 6, 28, "Input",ExpressionUUID->"9d3c4448-693b-44b9-80e3-25cbf98f0e68"],
Cell[173310, 3169, 322, 7, 35, "Text",ExpressionUUID->"c6d3aebe-628c-4854-a13b-72b649969e06"],
Cell[CellGroupData[{
Cell[173657, 3180, 405, 9, 28, "Input",ExpressionUUID->"c701905e-eb59-416d-b230-471a57525c30"],
Cell[174065, 3191, 3189, 89, 64, "Output",ExpressionUUID->"ee489d6c-0050-4fc3-b4ce-c67454d0f69e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177291, 3285, 489, 11, 28, "Input",ExpressionUUID->"11f530b1-8caf-46a8-8c22-7f407baa5f8a"],
Cell[177783, 3298, 2109, 55, 52, "Output",ExpressionUUID->"c6166223-5a17-4fd8-8818-0cb5d7e214a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179929, 3358, 333, 7, 28, "Input",ExpressionUUID->"202816a9-aa5e-49d2-93eb-a71bed3c6a7d"],
Cell[180265, 3367, 974, 24, 60, "Output",ExpressionUUID->"87cd33a5-f3bb-4d41-8379-eb83085716be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181276, 3396, 467, 9, 48, "Input",ExpressionUUID->"267c7932-1ceb-4b9c-91cd-c62d2cd0f283"],
Cell[181746, 3407, 1005, 25, 60, "Output",ExpressionUUID->"384845d0-f507-491d-b6e9-4bb9772249a8"],
Cell[182754, 3434, 483, 8, 32, "Output",ExpressionUUID->"eafc5e98-6097-4373-badb-830cde519222"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183274, 3447, 1192, 30, 28, "Input",ExpressionUUID->"0d3ea1b5-e016-44cc-bee7-d83743c39f86"],
Cell[184469, 3479, 1726, 43, 374, "Output",ExpressionUUID->"46ce6ff1-1f26-4993-a32b-e151d862fc84"]
}, Open  ]],
Cell[186210, 3525, 266, 6, 28, "Input",ExpressionUUID->"af78d919-475d-4398-8e5c-0331a05cf559"],
Cell[CellGroupData[{
Cell[186501, 3535, 1104, 25, 54, "Input",ExpressionUUID->"cde62ae7-2bb9-4497-9e07-40bd1ae97b9a"],
Cell[187608, 3562, 528, 10, 32, "Output",ExpressionUUID->"b525379a-e1e8-45cf-a86d-49aa5bf65b28"]
}, Open  ]],
Cell[188151, 3575, 448, 10, 28, "Input",ExpressionUUID->"cf3fb780-d90c-4b93-8404-1bf83a711953"],
Cell[CellGroupData[{
Cell[188624, 3589, 1069, 25, 54, "Input",ExpressionUUID->"c56674a9-7d99-49e6-8fb4-c803279d3ab4"],
Cell[189696, 3616, 541, 10, 32, "Output",ExpressionUUID->"5bfe13ae-22cb-4347-837f-2e021dc91cc5"]
}, Open  ]],
Cell[190252, 3629, 448, 10, 28, "Input",ExpressionUUID->"ea580b8b-f2fd-443c-bcab-0d5436b735ef"],
Cell[CellGroupData[{
Cell[190725, 3643, 1225, 29, 48, "Input",ExpressionUUID->"19682b6a-5adb-4f7b-8a3f-2297ab11f74f"],
Cell[191953, 3674, 15864, 303, 374, "Output",ExpressionUUID->"b1e68964-7630-4561-9d0f-7d6abc62361d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207854, 3982, 164, 3, 54, "Subsection",ExpressionUUID->"92645707-8a41-4577-b926-4eac696a0651"],
Cell[CellGroupData[{
Cell[208043, 3989, 705, 18, 28, "Input",ExpressionUUID->"8d3d4db4-ef41-4b0c-822d-f4959c665aae"],
Cell[208751, 4009, 10433, 198, 376, "Output",ExpressionUUID->"230e92fb-27b0-4cbd-a40e-4f84eab04807"]
}, Open  ]],
Cell[219199, 4210, 306, 7, 42, "Input",ExpressionUUID->"d2f56b5b-eed5-499b-b540-ad2a29d074c8"],
Cell[CellGroupData[{
Cell[219530, 4221, 477, 12, 28, "Input",ExpressionUUID->"a46053ca-72f1-4ace-a47a-176b9e125dd5"],
Cell[220010, 4235, 514, 9, 32, "Output",ExpressionUUID->"2391bff1-41fc-4a50-93eb-6586100f413b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220561, 4249, 293, 6, 28, "Input",ExpressionUUID->"beb38a13-e9fe-459d-9cb6-fe633709c527"],
Cell[220857, 4257, 604, 14, 32, "Output",ExpressionUUID->"9e78e640-bf98-4373-b82d-95b4fdacef1b"]
}, Open  ]],
Cell[221476, 4274, 308, 7, 28, "Input",ExpressionUUID->"411c1036-8a72-4cb0-a8c4-f11ebe35bff0"],
Cell[221787, 4283, 310, 7, 28, "Input",ExpressionUUID->"6ec47f4b-1ac6-42be-9659-34042491a637"],
Cell[222100, 4292, 308, 7, 28, "Input",ExpressionUUID->"55fca6e4-6285-45e0-80e6-cde49a833b75"],
Cell[222411, 4301, 310, 7, 28, "Input",ExpressionUUID->"666fa375-0d62-43fc-8509-36d54a253149"],
Cell[222724, 4310, 270, 6, 28, "Input",ExpressionUUID->"3234f1a3-ccbc-4b0f-9151-64abc6c5a3c8"],
Cell[222997, 4318, 324, 7, 28, "Input",ExpressionUUID->"62998fb8-41ea-401b-9fef-a44ed553ae89"],
Cell[223324, 4327, 272, 6, 28, "Input",ExpressionUUID->"e73c47b8-585c-4609-b489-a99a9a7211c4"],
Cell[223599, 4335, 388, 9, 28, "Input",ExpressionUUID->"015cf246-3d26-40f2-af93-e0e183d79dfa"],
Cell[223990, 4346, 390, 9, 28, "Input",ExpressionUUID->"8d002c06-c4ab-4870-bcb7-362e6dd59c11"],
Cell[CellGroupData[{
Cell[224405, 4359, 252, 4, 28, "Input",ExpressionUUID->"8b6e2867-83e0-4b1a-8cbf-7eba66197a3d"],
Cell[224660, 4365, 10302, 196, 547, "Output",ExpressionUUID->"96b60501-4076-4024-90a9-22af8993af93"]
}, Open  ]],
Cell[234977, 4564, 352, 8, 58, "Text",ExpressionUUID->"f9589cd8-fce7-4a63-8d0c-2ae4515f8d98"],
Cell[CellGroupData[{
Cell[235354, 4576, 262, 6, 34, "Input",ExpressionUUID->"4b817dbb-e27b-4b81-8523-afcc85edc41d"],
Cell[235619, 4584, 388, 5, 32, "Output",ExpressionUUID->"c962c776-0b3d-4fd6-9ef7-e0cfd65c4005"]
}, Open  ]],
Cell[236022, 4592, 769, 20, 28, "Input",ExpressionUUID->"5e097abf-296c-4c14-a204-bb12d4b3b4d7"],
Cell[236794, 4614, 1053, 28, 28, "Input",ExpressionUUID->"b082c71c-94d9-40d7-83c1-1d68071b7466"],
Cell[237850, 4644, 1055, 28, 28, "Input",ExpressionUUID->"f34e9fb1-f195-44c8-8316-9a8e05ef366d"],
Cell[CellGroupData[{
Cell[238930, 4676, 1604, 37, 48, "Input",ExpressionUUID->"b8c286cb-cc92-470e-ae07-26021225db62"],
Cell[240537, 4715, 19469, 359, 371, "Output",ExpressionUUID->"90e8d847-19f5-466a-a726-6c1dad45f25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260043, 5079, 828, 19, 28, "Input",ExpressionUUID->"1e8669f8-f515-47f8-9863-9c04cb53a912"],
Cell[260874, 5100, 21167, 393, 541, "Output",ExpressionUUID->"793a3102-ae14-458d-a241-ecb0fe15ff6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282078, 5498, 519, 14, 28, "Input",ExpressionUUID->"5226f1cc-a64c-4f66-b178-3cd830fd556e"],
Cell[282600, 5514, 319, 6, 32, "Output",ExpressionUUID->"d004c088-a88e-4970-a57d-221331bd633c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282980, 5527, 165, 3, 67, "Section",ExpressionUUID->"11433805-9864-47a1-a554-c0c35fef77bc"],
Cell[CellGroupData[{
Cell[283170, 5534, 415, 10, 28, "Input",ExpressionUUID->"7d3fd7b8-4fb7-4a67-aa94-5321edc9ff5b"],
Cell[283588, 5546, 4259, 120, 94, "Output",ExpressionUUID->"c33852f3-4c42-4752-bf41-4614274c7b8c"]
}, Open  ]],
Cell[287862, 5669, 375, 8, 28, "Input",ExpressionUUID->"c2fd0a03-42e0-418f-80d6-1aea71cddac4"],
Cell[CellGroupData[{
Cell[288262, 5681, 404, 9, 28, "Input",ExpressionUUID->"ea7b263b-fcf0-49db-89a2-c56fe0049ee7"],
Cell[288669, 5692, 3014, 80, 91, "Output",ExpressionUUID->"a838c251-5320-49c9-8419-499de42d9457"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291720, 5777, 265, 5, 28, "Input",ExpressionUUID->"29b30da0-85d1-49c7-bedf-fa50e99599d6"],
Cell[291988, 5784, 412, 10, 32, "Output",ExpressionUUID->"7538a4cd-943d-4418-9a27-032e06dd6d56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292437, 5799, 364, 7, 28, "Input",ExpressionUUID->"8a840fe0-737d-43c2-a8da-c3354051223a"],
Cell[292804, 5808, 783, 21, 60, "Output",ExpressionUUID->"e1c5f330-9aa7-458e-a821-42080a5bf630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293624, 5834, 249, 4, 28, "Input",ExpressionUUID->"eec92e83-44fe-410c-8627-d7e37bb9ab75"],
Cell[293876, 5840, 284, 6, 32, "Output",ExpressionUUID->"6b3e2f1c-c7f1-4b88-97c6-184e716614cf"]
}, Open  ]],
Cell[294175, 5849, 971, 27, 75, "Input",ExpressionUUID->"3e7f3fc1-c7ba-4480-b40e-63ffbaf9a8fe"],
Cell[295149, 5878, 749, 21, 54, "Input",ExpressionUUID->"fe276833-6282-4aca-a181-8484fc3f2638"],
Cell[295901, 5901, 391, 9, 28, "Input",ExpressionUUID->"77b2acb0-b4f1-4033-aa2d-c1175bb539a5"],
Cell[296295, 5912, 446, 10, 28, "Input",ExpressionUUID->"838b9aeb-40d1-4148-a31e-56f64b3b5cdf"],
Cell[296744, 5924, 1070, 29, 48, "Input",ExpressionUUID->"6af04333-24ae-46dc-956b-e6c321c77912"],
Cell[CellGroupData[{
Cell[297839, 5957, 170, 3, 54, "Subsection",ExpressionUUID->"b62b75fc-7a62-4e21-8a74-fae02afa08dd"],
Cell[CellGroupData[{
Cell[298034, 5964, 753, 19, 48, "Input",ExpressionUUID->"fdb473ad-8f98-4cdd-b3f8-e3593bef7dcd"],
Cell[298790, 5985, 14265, 288, 371, "Output",ExpressionUUID->"4145a2c1-df1c-46b4-a72d-d0a8942fafd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313116, 6280, 167, 3, 67, "Section",ExpressionUUID->"e98ecf53-2e8d-4a0d-8fbf-99e1d3fc0de7"],
Cell[CellGroupData[{
Cell[313308, 6287, 443, 13, 28, "Input",ExpressionUUID->"e0a64e24-e2d0-4f96-a335-ebf64d745b98"],
Cell[313754, 6302, 746, 21, 60, "Output",ExpressionUUID->"69d99e4d-4708-426a-b502-d4eeb6adcfb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314537, 6328, 364, 9, 28, "Input",ExpressionUUID->"db5702a1-6406-4e5a-b9e3-9d82c85c9b1b"],
Cell[314904, 6339, 3469, 100, 76, "Output",ExpressionUUID->"e65416ed-de46-4a76-bccf-93572ef5f939"]
}, Open  ]],
Cell[318388, 6442, 503, 12, 28, "Input",ExpressionUUID->"d5cca7e9-d0c7-48d9-b1f6-2afb09b9c3f8"],
Cell[318894, 6456, 385, 11, 28, "Input",ExpressionUUID->"437ac25e-76ae-43c6-9c4d-be27f7c11fd2"],
Cell[CellGroupData[{
Cell[319304, 6471, 410, 10, 28, "Input",ExpressionUUID->"3e7919dd-b1e3-4b20-91f8-8addce11c8d6"],
Cell[319717, 6483, 6974, 193, 159, "Output",ExpressionUUID->"7d9c1803-a51a-422d-9e95-55e4b41d8443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326728, 6681, 397, 11, 28, "Input",ExpressionUUID->"8b2847c5-6a06-4440-a42a-eb05ae38efcb"],
Cell[327128, 6694, 444, 11, 32, "Output",ExpressionUUID->"f24fffa0-e588-4cf6-854a-c49eaa00cdfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327609, 6710, 313, 7, 28, "Input",ExpressionUUID->"08c5517c-2041-457e-a6f6-f94ab6307dd0"],
Cell[327925, 6719, 790, 21, 60, "Output",ExpressionUUID->"ca09749a-a91f-4bea-89ad-5b2fef26e581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328752, 6745, 253, 5, 28, "Input",ExpressionUUID->"3740d41f-1122-4432-8ba2-64df1a29c37d"],
Cell[329008, 6752, 286, 6, 32, "Output",ExpressionUUID->"7c793c82-5c1d-4bc7-af89-74bbeead5fe2"]
}, Open  ]],
Cell[329309, 6761, 796, 24, 75, "Input",ExpressionUUID->"b935e84e-bdf8-440c-b282-6be0d3946eee"],
Cell[330108, 6787, 622, 19, 54, "Input",ExpressionUUID->"69d176b6-180e-44d7-aeed-1b383bd8d01c"],
Cell[330733, 6808, 397, 10, 28, "Input",ExpressionUUID->"4124848a-5229-43e6-8deb-17c6ddd80b62"],
Cell[331133, 6820, 401, 10, 28, "Input",ExpressionUUID->"c6228ee4-ad79-4b1a-9228-796a63f87eb9"],
Cell[CellGroupData[{
Cell[331559, 6834, 1409, 34, 48, "Input",ExpressionUUID->"43c8ff87-0e2d-4576-9ba2-a4443c58b4b1"],
Cell[332971, 6870, 15227, 292, 371, "Output",ExpressionUUID->"3e40229f-6e4b-45c4-b8da-fd374bf7c96a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348235, 7167, 223, 4, 54, "Subsection",ExpressionUUID->"314ec6d3-e4bf-459a-b1d4-91f2d33d5617"],
Cell[CellGroupData[{
Cell[348483, 7175, 802, 21, 48, "Input",ExpressionUUID->"2d174469-f969-4a76-a51a-542c4d8b8dcb"],
Cell[349288, 7198, 15782, 311, 371, "Output",ExpressionUUID->"0b1b62b7-ae8f-4f71-b42e-d2d5fa2cdf19"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365131, 7516, 158, 3, 67, "Section",ExpressionUUID->"1dc150d4-d1e7-455b-8ee4-0e9eeef515d9"],
Cell[365292, 7521, 302, 6, 35, "Text",ExpressionUUID->"4e6a2639-b747-4847-b42f-277ce0b34e51"],
Cell[CellGroupData[{
Cell[365619, 7531, 1185, 30, 48, "Input",ExpressionUUID->"c429bf73-2908-49a9-b48c-8224907b6e99"],
Cell[366807, 7563, 40942, 771, 819, "Output",ExpressionUUID->"364bc7b4-2531-4b1c-b18f-2f7a073d049f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

